{"version":3,"sources":["../../../../src/shared/lib/turbopack/utils.ts"],"sourcesContent":["import type {\n  Issue,\n  StyledString,\n  TurbopackResult,\n} from '../../../build/swc/types'\n\nimport { bold, green, magenta, red } from '../../../lib/picocolors'\nimport isInternal from '../is-internal'\nimport {\n  decodeMagicIdentifier,\n  MAGIC_IDENTIFIER_REGEX,\n} from '../magic-identifier'\nimport type { EntryKey } from './entry-key'\nimport * as Log from '../../../build/output/log'\nimport type { NextConfigComplete } from '../../../server/config-shared'\nimport loadJsConfig from '../../../build/load-jsconfig'\nimport { eventErrorThrown } from '../../../telemetry/events'\nimport { traceGlobals } from '../../../trace/shared'\n\ntype IssueKey = `${Issue['severity']}-${Issue['filePath']}-${string}-${string}`\nexport type IssuesMap = Map<IssueKey, Issue>\nexport type EntryIssuesMap = Map<EntryKey, IssuesMap>\nexport type TopLevelIssuesMap = IssuesMap\n\n// An error generated from emitted Turbopack issues. This can include build\n// errors caused by issues with user code.\nexport class ModuleBuildError extends Error {\n  name = 'ModuleBuildError'\n}\n\n// An error caused by an internal issue in Turbopack. These should be written\n// to a log file and details should not be shown to the user.\nexport class TurbopackInternalError extends Error {\n  name = 'TurbopackInternalError'\n\n  // Manually set this as this isn't statically determinable\n  __NEXT_ERROR_CODE = 'TurbopackInternalError'\n\n  static createAndRecordTelemetry(cause: Error) {\n    const error = new TurbopackInternalError(cause)\n\n    const telemetry = traceGlobals.get('telemetry')\n    if (telemetry) {\n      telemetry.record(eventErrorThrown(error))\n    } else {\n      console.error('Expected `telemetry` to be set in globals')\n    }\n\n    return error\n  }\n\n  constructor(cause: Error) {\n    super(cause.message)\n    this.stack = cause.stack\n  }\n}\n\n/**\n * Thin stopgap workaround layer to mimic existing wellknown-errors-plugin in webpack's build\n * to emit certain type of errors into cli.\n */\nexport function isWellKnownError(issue: Issue): boolean {\n  const { title } = issue\n  const formattedTitle = renderStyledStringToErrorAnsi(title)\n  // TODO: add more well known errors\n  if (\n    formattedTitle.includes('Module not found') ||\n    formattedTitle.includes('Unknown module type')\n  ) {\n    return true\n  }\n\n  return false\n}\n\nexport function getIssueKey(issue: Issue): IssueKey {\n  return `${issue.severity}-${issue.filePath}-${JSON.stringify(\n    issue.title\n  )}-${JSON.stringify(issue.description)}`\n}\n\nexport async function getTurbopackJsConfig(\n  dir: string,\n  nextConfig: NextConfigComplete\n) {\n  const { jsConfig } = await loadJsConfig(dir, nextConfig)\n  return jsConfig ?? { compilerOptions: {} }\n}\n\nexport function processIssues(\n  currentEntryIssues: EntryIssuesMap,\n  key: EntryKey,\n  result: TurbopackResult,\n  throwIssue: boolean,\n  logErrors: boolean\n) {\n  const newIssues = new Map<IssueKey, Issue>()\n  currentEntryIssues.set(key, newIssues)\n\n  const relevantIssues = new Set()\n\n  for (const issue of result.issues) {\n    if (\n      issue.severity !== 'error' &&\n      issue.severity !== 'fatal' &&\n      issue.severity !== 'warning'\n    )\n      continue\n\n    const issueKey = getIssueKey(issue)\n    newIssues.set(issueKey, issue)\n\n    if (issue.severity !== 'warning') {\n      if (throwIssue) {\n        const formatted = formatIssue(issue)\n        relevantIssues.add(formatted)\n      }\n      // if we throw the issue it will most likely get handed and logged elsewhere\n      else if (logErrors && isWellKnownError(issue)) {\n        const formatted = formatIssue(issue)\n        Log.error(formatted)\n      }\n    }\n  }\n\n  if (relevantIssues.size && throwIssue) {\n    throw new ModuleBuildError([...relevantIssues].join('\\n\\n'))\n  }\n}\n\nexport function formatIssue(issue: Issue) {\n  const { filePath, title, description, source } = issue\n  let { documentationLink } = issue\n  let formattedTitle = renderStyledStringToErrorAnsi(title).replace(\n    /\\n/g,\n    '\\n    '\n  )\n\n  // TODO: Use error codes to identify these\n  // TODO: Generalize adapting Turbopack errors to Next.js errors\n  if (formattedTitle.includes('Module not found')) {\n    // For compatiblity with webpack\n    // TODO: include columns in webpack errors.\n    documentationLink = 'https://nextjs.org/docs/messages/module-not-found'\n  }\n\n  let formattedFilePath = filePath\n    .replace('[project]/', './')\n    .replaceAll('/./', '/')\n    .replace('\\\\\\\\?\\\\', '')\n\n  let message = ''\n\n  if (source && source.range) {\n    const { start } = source.range\n    message = `${formattedFilePath}:${start.line + 1}:${\n      start.column + 1\n    }\\n${formattedTitle}`\n  } else if (formattedFilePath) {\n    message = `${formattedFilePath}\\n${formattedTitle}`\n  } else {\n    message = formattedTitle\n  }\n  message += '\\n'\n\n  if (\n    source?.range &&\n    source.source.content &&\n    // ignore Next.js/React internals, as these can often be huge bundled files.\n    !isInternal(filePath)\n  ) {\n    const { start, end } = source.range\n    const { codeFrameColumns } = require('next/dist/compiled/babel/code-frame')\n\n    message +=\n      codeFrameColumns(\n        source.source.content,\n        {\n          start: {\n            line: start.line + 1,\n            column: start.column + 1,\n          },\n          end: {\n            line: end.line + 1,\n            column: end.column + 1,\n          },\n        },\n        { forceColor: true }\n      ).trim() + '\\n\\n'\n  }\n\n  if (description) {\n    message += renderStyledStringToErrorAnsi(description) + '\\n\\n'\n  }\n\n  // TODO: make it possible to enable this for debugging, but not in tests.\n  // if (detail) {\n  //   message += renderStyledStringToErrorAnsi(detail) + '\\n\\n'\n  // }\n\n  // TODO: Include a trace from the issue.\n\n  if (documentationLink) {\n    message += documentationLink + '\\n\\n'\n  }\n\n  return message\n}\n\nexport function isRelevantWarning(issue: Issue): boolean {\n  return issue.severity === 'warning' && !isNodeModulesIssue(issue)\n}\n\nfunction isNodeModulesIssue(issue: Issue): boolean {\n  if (issue.severity === 'warning' && issue.stage === 'config') {\n    // Override for the externalize issue\n    // `Package foo (serverExternalPackages or default list) can't be external`\n    if (\n      renderStyledStringToErrorAnsi(issue.title).includes(\"can't be external\")\n    ) {\n      return false\n    }\n  }\n\n  return (\n    issue.severity === 'warning' &&\n    (issue.filePath.match(/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/) !== null ||\n      // Ignore Next.js itself when running next directly in the monorepo where it is not inside\n      // node_modules anyway.\n      // TODO(mischnic) prevent matches when this is published to npm\n      issue.filePath.startsWith('[project]/packages/next/'))\n  )\n}\n\nexport function renderStyledStringToErrorAnsi(string: StyledString): string {\n  function decodeMagicIdentifiers(str: string): string {\n    return str.replaceAll(MAGIC_IDENTIFIER_REGEX, (ident) => {\n      try {\n        return magenta(`{${decodeMagicIdentifier(ident)}}`)\n      } catch (e) {\n        return magenta(`{${ident} (decoding failed: ${e})}`)\n      }\n    })\n  }\n\n  switch (string.type) {\n    case 'text':\n      return decodeMagicIdentifiers(string.value)\n    case 'strong':\n      return bold(red(decodeMagicIdentifiers(string.value)))\n    case 'code':\n      return green(decodeMagicIdentifiers(string.value))\n    case 'line':\n      return string.value.map(renderStyledStringToErrorAnsi).join('')\n    case 'stack':\n      return string.value.map(renderStyledStringToErrorAnsi).join('\\n')\n    default:\n      throw new Error('Unknown StyledString type', string)\n  }\n}\n\nexport function isPersistentCachingEnabled(\n  config: NextConfigComplete\n): boolean {\n  return config.experimental?.turbopackPersistentCaching || false\n}\n"],"names":["bold","green","magenta","red","isInternal","decodeMagicIdentifier","MAGIC_IDENTIFIER_REGEX","Log","loadJsConfig","eventErrorThrown","traceGlobals","ModuleBuildError","Error","name","TurbopackInternalError","createAndRecordTelemetry","cause","error","telemetry","get","record","console","constructor","message","__NEXT_ERROR_CODE","stack","isWellKnownError","issue","title","formattedTitle","renderStyledStringToErrorAnsi","includes","getIssueKey","severity","filePath","JSON","stringify","description","getTurbopackJsConfig","dir","nextConfig","jsConfig","compilerOptions","processIssues","currentEntryIssues","key","result","throwIssue","logErrors","newIssues","Map","set","relevantIssues","Set","issues","issueKey","formatted","formatIssue","add","size","join","source","documentationLink","replace","formattedFilePath","replaceAll","range","start","line","column","content","end","codeFrameColumns","require","forceColor","trim","isRelevantWarning","isNodeModulesIssue","stage","match","startsWith","string","decodeMagicIdentifiers","str","ident","e","type","value","map","isPersistentCachingEnabled","config","experimental","turbopackPersistentCaching"],"mappings":"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"}