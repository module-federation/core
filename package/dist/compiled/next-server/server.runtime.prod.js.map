{"version":3,"file":"server.runtime.prod.js","mappings":"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","sources":["webpack://next/../../node_modules/.pnpm/react@19.2.0-canary-3fbfb9ba-20250409/node_modules/react/cjs/react.production.js","webpack://next/../../node_modules/.pnpm/react@19.2.0-canary-3fbfb9ba-20250409/node_modules/react/index.js","webpack://next/../next-env/dist/index.js","webpack://next/./dist/compiled/@edge-runtime/cookies/index.js","webpack://next/./dist/compiled/cookie/index.js","webpack://next/./dist/compiled/data-uri-to-buffer/index.js","webpack://next/./dist/compiled/fresh/index.js","webpack://next/./dist/compiled/p-queue/index.js","webpack://next/./dist/compiled/path-to-regexp/index.js","webpack://next/./dist/compiled/shell-quote/index.js","webpack://next/./dist/src/lib/constants.ts","webpack://next/./dist/esm/server/ sync","webpack://next/./dist/src/server/api-utils/index.ts","webpack://next/./dist/src/server/api-utils/node/try-get-preview-data.ts","webpack://next/./dist/src/server/crypto-utils.ts","webpack://next/./dist/src/server/lib/trace/constants.ts","webpack://next/./dist/src/server/node-environment-baseline.ts","webpack://next/./dist/src/server/node-polyfill-crypto.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/headers.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/reflect.ts","webpack://next/./dist/src/shared/lib/isomorphic/path.js","webpack://next/./dist/src/shared/lib/modern-browserslist-target.js","webpack://next/external commonjs \"next/dist/server/lib/trace/tracer\"","webpack://next/external commonjs2 \"next/dist/server/web/sandbox\"","webpack://next/external node-commonjs \"async_hooks\"","webpack://next/external node-commonjs \"crypto\"","webpack://next/external node-commonjs \"fs\"","webpack://next/external node-commonjs \"module\"","webpack://next/external commonjs2 \"next/dist/compiled/jsonwebtoken\"","webpack://next/external commonjs2 \"next/dist/compiled/ws\"","webpack://next/external commonjs \"next/dist/experimental/testmode/server-edge\"","webpack://next/external node-commonjs \"node:crypto\"","webpack://next/external node-commonjs \"os\"","webpack://next/external node-commonjs \"path\"","webpack://next/webpack/bootstrap","webpack://next/webpack/runtime/compat get default export","webpack://next/webpack/runtime/define property getters","webpack://next/webpack/runtime/hasOwnProperty shorthand","webpack://next/webpack/runtime/make namespace object","webpack://next/./dist/src/server/node-environment-extensions/web-crypto.tsx","webpack://next/./dist/src/server/lib/incremental-cache/file-system-cache.ts","webpack://next/./dist/src/lib/picocolors.ts","webpack://next/external node-commonjs \"url\"","webpack://next/external commonjs \"next/dist/compiled/source-map\"","webpack://next/external commonjs \"next/dist/compiled/source-map08\"","webpack://next/external node-commonjs \"fs/promises\"","webpack://next/external node-commonjs \"child_process\"","webpack://next/external commonjs \"next/dist/compiled/babel/code-frame\"","webpack://next/external node-commonjs \"util\"","webpack://next/external commonjs \"next/dist/compiled/stacktrace-parser\"","webpack://next/./dist/src/shared/lib/error-source.ts","webpack://next/./dist/src/client/components/is-hydration-error.ts","webpack://next/./dist/src/client/components/react-dev-overlay/utils/parse-stack.ts","webpack://next/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://next/./dist/src/server/patch-error-inspect.ts","webpack://next/./dist/src/server/node-environment-extensions/error-inspect.tsx","webpack://next/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://next/./dist/src/server/app-render/dynamic-rendering.ts","webpack://next/./dist/src/server/dynamic-rendering-utils.ts","webpack://next/./dist/src/shared/lib/invariant-error.ts","webpack://next/./dist/src/server/node-environment-extensions/utils.tsx","webpack://next/./dist/src/server/node-environment-extensions/random.tsx","webpack://next/./dist/src/server/node-environment-extensions/date.tsx","webpack://next/./dist/src/server/node-environment-extensions/node-crypto.tsx","webpack://next/./dist/src/server/require-hook.ts","webpack://next/./dist/src/shared/lib/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/route-matcher.ts","webpack://next/./dist/src/server/request-meta.ts","webpack://next/./dist/src/shared/lib/constants.ts","webpack://next/./dist/src/lib/find-pages-dir.ts","webpack://next/./dist/src/client/components/redirect-status-code.ts","webpack://next/./dist/src/server/api-utils/get-cookie-parser.ts","webpack://next/./dist/src/server/base-http/index.ts","webpack://next/./dist/src/server/base-http/node.ts","webpack://next/./dist/src/server/lib/etag.ts","webpack://next/./dist/src/server/lib/cache-control.ts","webpack://next/./dist/src/client/components/app-router-headers.ts","webpack://next/./dist/src/server/send-payload.ts","webpack://next/./dist/src/shared/lib/router/utils/querystring.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-url.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-relative-url.ts","webpack://next/./dist/src/server/lib/lru-cache.ts","webpack://next/./dist/src/build/output/log.ts","webpack://next/./dist/src/shared/lib/page-path/ensure-leading-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/app-paths.ts","webpack://next/./dist/src/shared/lib/segment.ts","webpack://next/./dist/src/shared/lib/router/utils/interception-routes.ts","webpack://next/./dist/src/shared/lib/escape-regexp.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/route-regex.ts","webpack://next/./dist/src/lib/detached-promise.ts","webpack://next/./dist/src/lib/batcher.ts","webpack://next/./dist/src/lib/scheduler.ts","webpack://next/./dist/src/server/response-cache/types.ts","webpack://next/./dist/src/server/stream-utils/node-web-streams-helper.ts","webpack://next/./dist/src/server/stream-utils/encodedTags.ts","webpack://next/./dist/src/server/web/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-path.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-suffix.ts","webpack://next/./dist/src/shared/lib/router/utils/path-has-prefix.ts","webpack://next/./dist/src/shared/lib/get-hostname.ts","webpack://next/./dist/src/shared/lib/i18n/normalize-locale-path.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://next/./dist/src/server/web/next-url.ts","webpack://next/./dist/src/shared/lib/i18n/detect-domain-locale.ts","webpack://next/./dist/src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://next/./dist/src/shared/lib/router/utils/add-locale.ts","webpack://next/./dist/src/server/web/error.ts","webpack://next/./dist/src/server/web/spec-extension/request.ts","webpack://next/./dist/src/server/base-http/helpers.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/next-request.ts","webpack://next/./dist/src/server/client-component-renderer-logger.ts","webpack://next/./dist/src/server/pipe-readable.ts","webpack://next/./dist/src/server/render-result.ts","webpack://next/./dist/src/server/route-kind.ts","webpack://next/./dist/src/server/response-cache/utils.ts","webpack://next/./dist/src/server/response-cache/index.ts","webpack://next/./dist/src/server/lib/is-ipv6.ts","webpack://next/./dist/src/shared/lib/router/utils/is-dynamic.ts","webpack://next/external commonjs \"next/dist/shared/lib/runtime-config.external.js\"","webpack://next/./dist/src/shared/lib/router/utils/html-bots.ts","webpack://next/./dist/src/shared/lib/router/utils/is-bot.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-path-sep.ts","webpack://next/./dist/src/shared/lib/page-path/denormalize-page-path.ts","webpack://next/./dist/src/shared/lib/router/utils/path-match.ts","webpack://next/./dist/src/shared/lib/router/utils/prepare-destination.ts","webpack://next/./dist/src/server/server-utils.ts","webpack://next/./dist/src/lib/is-error.ts","webpack://next/./dist/src/shared/lib/is-plain-object.ts","webpack://next/./dist/src/server/normalizers/locale-route-normalizer.ts","webpack://next/./dist/src/shared/lib/router/utils/sorted-routes.ts","webpack://next/./dist/src/server/route-matchers/route-matcher.ts","webpack://next/./dist/src/server/route-matchers/locale-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-managers/default-route-matcher-manager.ts","webpack://next/./dist/src/server/normalizers/normalizers.ts","webpack://next/./dist/src/server/normalizers/prefixing-normalizer.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-page-path.ts","webpack://next/./dist/src/server/normalizers/built/app/app-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-filename-normalizer.ts","webpack://next/./dist/src/lib/is-app-route-route.ts","webpack://next/./dist/src/lib/metadata/is-metadata-route.ts","webpack://next/./dist/src/server/normalizers/wrap-normalizer-fn.ts","webpack://next/./dist/src/server/normalizers/underscore-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-pathname-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/index.ts","webpack://next/./dist/src/server/route-matchers/app-page-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/cached-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/manifest-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/app-page-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-app-page-route.ts","webpack://next/./dist/src/server/route-matchers/app-route-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/app-route-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-api-route.ts","webpack://next/./dist/src/server/route-matchers/pages-api-route-matcher.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-filename-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/index.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-api-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matchers/pages-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.ts","webpack://next/./dist/src/server/lib/i18n-provider.ts","webpack://next/./dist/src/server/send-response.ts","webpack://next/./dist/src/server/lib/match-next-data-pathname.ts","webpack://next/./dist/src/server/lib/router-utils/decode-path-params.ts","webpack://next/./dist/src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://next/./dist/src/server/normalizers/request/suffix.ts","webpack://next/./dist/src/server/normalizers/request/rsc.ts","webpack://next/./dist/src/server/app-render/strip-flight-headers.ts","webpack://next/./dist/src/server/route-modules/checks.ts","webpack://next/./dist/src/server/normalizers/request/prefetch-rsc.ts","webpack://next/./dist/src/server/normalizers/request/prefix.ts","webpack://next/./dist/src/server/normalizers/request/next-data.ts","webpack://next/./dist/src/server/lib/to-route.ts","webpack://next/./dist/src/server/app-render/async-local-storage.ts","webpack://next/./dist/src/server/after/builtin-request-context.ts","webpack://next/./dist/src/server/web/spec-extension/fetch-event.ts","webpack://next/./dist/src/server/web/spec-extension/response.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/request-cookies.ts","webpack://next/external commonjs \"next/dist/server/lib/incremental-cache/tags-manifest.external.js\"","webpack://next/./dist/src/server/lib/cache-handlers/default.ts","webpack://next/./dist/src/server/use-cache/handlers.ts","webpack://next/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://next/./dist/src/server/web/adapter.ts","webpack://next/./dist/src/server/instrumentation/utils.ts","webpack://next/./dist/src/lib/fallback.ts","webpack://next/./dist/src/server/normalizers/request/segment-prefix-rsc.ts","webpack://next/./dist/src/server/lib/decode-query-path-parameter.ts","webpack://next/./dist/src/server/base-server.ts","webpack://next/./dist/src/shared/lib/router/utils/get-route-from-asset-path.ts","webpack://next/./dist/src/server/lib/format-hostname.ts","webpack://next/./dist/src/server/lib/experimental/ppr.ts","webpack://next/./dist/src/server/lib/patch-set-header.ts","webpack://next/./dist/src/server/lib/streaming-metadata.ts","webpack://next/./dist/src/server/utils.ts","webpack://next/./dist/src/lib/is-edge-runtime.ts","webpack://next/./dist/src/server/lib/server-action-request-meta.ts","webpack://next/./dist/src/server/request/fallback-params.ts","webpack://next/./dist/src/lib/redirect-status.ts","webpack://next/external node-commonjs \"vm\"","webpack://next/./dist/src/shared/lib/deep-freeze.ts","webpack://next/./dist/src/server/load-manifest.ts","webpack://next/./dist/src/server/require.ts","webpack://next/./dist/src/lib/interop-default.ts","webpack://next/./dist/src/lib/wait.ts","webpack://next/./dist/src/server/app-render/encryption-utils.ts","webpack://next/./dist/src/server/load-components.ts","webpack://next/./dist/src/server/app-render/action-utils.ts","webpack://next/./dist/src/shared/lib/router/utils/middleware-route-matcher.ts","webpack://next/external node-commonjs \"stream\"","webpack://next/./dist/src/lib/multi-file-writer.ts","webpack://next/./dist/src/server/lib/incremental-cache/shared-cache-controls.ts","webpack://next/./dist/src/server/lib/incremental-cache/index.ts","webpack://next/external node-commonjs \"http\"","webpack://next/external node-commonjs \"https\"","webpack://next/./dist/src/server/lib/node-fs-methods.ts","webpack://next/./dist/src/server/lib/mock-request.ts","webpack://next/./dist/src/server/lib/module-loader/node-module-loader.ts","webpack://next/./dist/src/server/lib/module-loader/route-module-loader.ts","webpack://next/./dist/src/lib/format-dynamic-import-path.ts","webpack://next/./dist/src/lib/generate-interception-routes-rewrites.ts","webpack://next/./dist/src/server/lib/async-callback-set.ts","webpack://next/./dist/src/server/next-server.ts","webpack://next/./dist/src/server/route-matches/pages-api-route-match.ts","webpack://next/./dist/src/server/setup-http-agent-env.ts","webpack://next/./dist/src/lib/static-env.ts","webpack://next/./dist/src/server/body-streams.ts"],"sourcesContent":["/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    null !== prevTransition &&\n      null !== currentTransition.types &&\n      (prevTransition.types = currentTransition.types),\n      (ReactSharedInternals.T = prevTransition);\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","(()=>{var e={383:e=>{\"use strict\";function _searchLast(e,t){const n=Array.from(e.matchAll(t));return n.length>0?n.slice(-1)[0].index:-1}function _interpolate(e,t,n){const r=_searchLast(e,/(?!(?<=\\\\))\\$/g);if(r===-1)return e;const o=e.slice(r);const s=/((?!(?<=\\\\))\\${?([\\w]+)(?::-([^}\\\\]*))?}?)/;const i=o.match(s);if(i!=null){const[,r,o,s]=i;return _interpolate(e.replace(r,t[o]||s||n.parsed[o]||\"\"),t,n)}return e}function _resolveEscapeSequences(e){return e.replace(/\\\\\\$/g,\"$\")}function expand(e){const t=e.ignoreProcessEnv?{}:process.env;for(const n in e.parsed){const r=Object.prototype.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=_resolveEscapeSequences(_interpolate(r,t,e))}for(const n in e.parsed){t[n]=e.parsed[n]}return e}e.exports.j=expand},234:(e,t,n)=>{const r=n(147);const o=n(17);const s=n(37);const i=n(113);const c=n(803);const a=c.version;const p=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let n=e.toString();n=n.replace(/\\r\\n?/gm,\"\\n\");let r;while((r=p.exec(n))!=null){const e=r[1];let n=r[2]||\"\";n=n.trim();const o=n[0];n=n.replace(/^(['\"`])([\\s\\S]*)\\1$/gm,\"$2\");if(o==='\"'){n=n.replace(/\\\\n/g,\"\\n\");n=n.replace(/\\\\r/g,\"\\r\")}t[e]=n}return t}function _parseVault(e){const t=_vaultPath(e);const n=l.configDotenv({path:t});if(!n.parsed){throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`)}const r=_dotenvKey(e).split(\",\");const o=r.length;let s;for(let e=0;e<o;e++){try{const t=r[e].trim();const o=_instructions(n,t);s=l.decrypt(o.ciphertext,o.key);break}catch(t){if(e+1>=o){throw t}}}return l.parse(s)}function _log(e){console.log(`[dotenv@${a}][INFO] ${e}`)}function _warn(e){console.log(`[dotenv@${a}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return\"\"}function _instructions(e,t){let n;try{n=new URL(t)}catch(e){if(e.code===\"ERR_INVALID_URL\"){throw new Error(\"INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development\")}throw e}const r=n.password;if(!r){throw new Error(\"INVALID_DOTENV_KEY: Missing key part\")}const o=n.searchParams.get(\"environment\");if(!o){throw new Error(\"INVALID_DOTENV_KEY: Missing environment part\")}const s=`DOTENV_VAULT_${o.toUpperCase()}`;const i=e.parsed[s];if(!i){throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`)}return{ciphertext:i,key:r}}function _vaultPath(e){let t=o.resolve(process.cwd(),\".env\");if(e&&e.path&&e.path.length>0){t=e.path}return t.endsWith(\".vault\")?t:`${t}.vault`}function _resolveHome(e){return e[0]===\"~\"?o.join(s.homedir(),e.slice(1)):e}function _configVault(e){_log(\"Loading env from encrypted .env.vault\");const t=l._parseVault(e);let n=process.env;if(e&&e.processEnv!=null){n=e.processEnv}l.populate(n,t,e);return{parsed:t}}function configDotenv(e){let t=o.resolve(process.cwd(),\".env\");let n=\"utf8\";const s=Boolean(e&&e.debug);if(e){if(e.path!=null){t=_resolveHome(e.path)}if(e.encoding!=null){n=e.encoding}}try{const o=l.parse(r.readFileSync(t,{encoding:n}));let s=process.env;if(e&&e.processEnv!=null){s=e.processEnv}l.populate(s,o,e);return{parsed:o}}catch(e){if(s){_debug(`Failed to load ${t} ${e.message}`)}return{error:e}}}function config(e){const t=_vaultPath(e);if(_dotenvKey(e).length===0){return l.configDotenv(e)}if(!r.existsSync(t)){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return l.configDotenv(e)}return l._configVault(e)}function decrypt(e,t){const n=Buffer.from(t.slice(-64),\"hex\");let r=Buffer.from(e,\"base64\");const o=r.slice(0,12);const s=r.slice(-16);r=r.slice(12,-16);try{const e=i.createDecipheriv(\"aes-256-gcm\",n,o);e.setAuthTag(s);return`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError;const n=e.message===\"Invalid key length\";const r=e.message===\"Unsupported state or unable to authenticate data\";if(t||n){const e=\"INVALID_DOTENV_KEY: It must be 64 characters long (or more)\";throw new Error(e)}else if(r){const e=\"DECRYPTION_FAILED: Please check your DOTENV_KEY\";throw new Error(e)}else{console.error(\"Error: \",e.code);console.error(\"Error: \",e.message);throw e}}}function populate(e,t,n={}){const r=Boolean(n&&n.debug);const o=Boolean(n&&n.override);if(typeof t!==\"object\"){throw new Error(\"OBJECT_REQUIRED: Please check the processEnv argument being passed to populate\")}for(const n of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,n)){if(o===true){e[n]=t[n]}if(r){if(o===true){_debug(`\"${n}\" is already defined and WAS overwritten`)}else{_debug(`\"${n}\" is already defined and was NOT overwritten`)}}}else{e[n]=t[n]}}}const l={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=l.configDotenv;e.exports._configVault=l._configVault;e.exports._parseVault=l._parseVault;e.exports.config=l.config;e.exports.decrypt=l.decrypt;e.exports.parse=l.parse;e.exports.populate=l.populate;e.exports=l},113:e=>{\"use strict\";e.exports=require(\"crypto\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},803:e=>{\"use strict\";e.exports=JSON.parse('{\"name\":\"dotenv\",\"version\":\"16.3.1\",\"description\":\"Loads environment variables from .env file\",\"main\":\"lib/main.js\",\"types\":\"lib/main.d.ts\",\"exports\":{\".\":{\"types\":\"./lib/main.d.ts\",\"require\":\"./lib/main.js\",\"default\":\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},\"scripts\":{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",\"lint\":\"standard\",\"lint-readme\":\"standard-markdown\",\"pretest\":\"npm run lint && npm run dts-check\",\"test\":\"tap tests/*.js --100 -Rspec\",\"prerelease\":\"npm test\",\"release\":\"standard-version\"},\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/motdotla/dotenv.git\"},\"funding\":\"https://github.com/motdotla/dotenv?sponsor=1\",\"keywords\":[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],\"readmeFilename\":\"README.md\",\"license\":\"BSD-2-Clause\",\"devDependencies\":{\"@definitelytyped/dtslint\":\"^0.0.133\",\"@types/node\":\"^18.11.3\",\"decache\":\"^4.6.1\",\"sinon\":\"^14.0.1\",\"standard\":\"^17.0.0\",\"standard-markdown\":\"^7.1.0\",\"standard-version\":\"^9.5.0\",\"tap\":\"^16.3.0\",\"tar\":\"^6.1.11\",\"typescript\":\"^4.8.4\"},\"engines\":{\"node\":\">=12\"},\"browser\":{\"fs\":false}}')}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}(()=>{__nccwpck_require__.n=e=>{var t=e&&e.__esModule?()=>e[\"default\"]:()=>e;__nccwpck_require__.d(t,{a:t});return t}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var n in t){if(__nccwpck_require__.o(t,n)&&!__nccwpck_require__.o(e,n)){Object.defineProperty(e,n,{enumerable:true,get:t[n]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!==\"undefined\"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"})}Object.defineProperty(e,\"__esModule\",{value:true})}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{\"use strict\";__nccwpck_require__.r(n);__nccwpck_require__.d(n,{initialEnv:()=>a,updateInitialEnv:()=>updateInitialEnv,processEnv:()=>processEnv,resetEnv:()=>resetEnv,loadEnvConfig:()=>loadEnvConfig});var e=__nccwpck_require__(147);var t=__nccwpck_require__.n(e);var r=__nccwpck_require__(17);var o=__nccwpck_require__.n(r);var s=__nccwpck_require__(234);var i=__nccwpck_require__.n(s);var c=__nccwpck_require__(383);let a=undefined;let p=undefined;let l=undefined;let u=[];let _=[];function updateInitialEnv(e){Object.assign(a||{},e)}function replaceProcessEnv(e){Object.keys(process.env).forEach((t=>{if(!t.startsWith(\"__NEXT_PRIVATE\")){if(e[t]===undefined||e[t]===\"\"){delete process.env[t]}}}));Object.entries(e).forEach((([e,t])=>{process.env[e]=t}))}function processEnv(e,t,n=console,o=false,i){var p;if(!a){a=Object.assign({},process.env)}if(!o&&(process.env.__NEXT_PROCESSED_ENV||e.length===0)){return[process.env]}process.env.__NEXT_PROCESSED_ENV=\"true\";const l=Object.assign({},a);const u={};for(const o of e){try{let e={};e.parsed=s.parse(o.contents);e=(0,c.j)(e);if(e.parsed&&!_.some((e=>e.contents===o.contents&&e.path===o.path))){i===null||i===void 0?void 0:i(o.path)}for(const t of Object.keys(e.parsed||{})){if(typeof u[t]===\"undefined\"&&typeof l[t]===\"undefined\"){u[t]=(p=e.parsed)===null||p===void 0?void 0:p[t]}}o.env=e.parsed||{}}catch(e){n.error(`Failed to load env from ${r.join(t||\"\",o.path)}`,e)}}return[Object.assign(process.env,u),u]}function resetEnv(){if(a){replaceProcessEnv(a)}}function loadEnvConfig(t,n,o=console,s=false,i){if(!a){a=Object.assign({},process.env)}if(p&&!s){return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}replaceProcessEnv(a);_=u;u=[];const c=process.env.NODE_ENV===\"test\";const d=c?\"test\":n?\"development\":\"production\";const f=[`.env.${d}.local`,d!==\"test\"&&`.env.local`,`.env.${d}`,\".env\"].filter(Boolean);for(const n of f){const s=r.join(t,n);try{const t=e.statSync(s);if(!t.isFile()&&!t.isFIFO()){continue}const r=e.readFileSync(s,\"utf8\");u.push({path:n,contents:r,env:{}})}catch(e){if(e.code!==\"ENOENT\"){o.error(`Failed to load env from ${n}`,e)}}}[p,l]=processEnv(u,t,o,s,i);return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}})();module.exports=n})();","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(()=>{\"use strict\";var e={151:e=>{function dataUriToBuffer(e){if(!/^data:/i.test(e)){throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")')}e=e.replace(/\\r?\\n/g,\"\");const r=e.indexOf(\",\");if(r===-1||r<=4){throw new TypeError(\"malformed data: URI\")}const t=e.substring(5,r).split(\";\");let a=\"\";let i=false;const s=t[0]||\"text/plain\";let n=s;for(let e=1;e<t.length;e++){if(t[e]===\"base64\"){i=true}else{n+=`;${t[e]}`;if(t[e].indexOf(\"charset=\")===0){a=t[e].substring(8)}}}if(!t[0]&&!a.length){n+=\";charset=US-ASCII\";a=\"US-ASCII\"}const o=i?\"base64\":\"ascii\";const f=unescape(e.substring(r+1));const _=Buffer.from(f,o);_.type=s;_.typeFull=n;_.charset=a;return _}e.exports=dataUriToBuffer}};var r={};function __nccwpck_require__(t){var a=r[t];if(a!==undefined){return a.exports}var i=r[t]={exports:{}};var s=true;try{e[t](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(151);module.exports=t})();","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","(()=>{if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;r.quote=function(e){return e.map((function(e){if(e&&typeof e===\"object\"){return e.op.replace(/(.)/g,\"\\\\$1\")}else if(/[\"\\s]/.test(e)&&!/'/.test(e)){return\"'\"+e.replace(/(['\\\\])/g,\"\\\\$1\")+\"'\"}else if(/[\"'\\s]/.test(e)){return'\"'+e.replace(/([\"\\\\$`!])/g,\"\\\\$1\")+'\"'}else{return String(e).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g,\"$1\\\\$2\")}})).join(\" \")};var t=\"(?:\"+[\"\\\\|\\\\|\",\"\\\\&\\\\&\",\";;\",\"\\\\|\\\\&\",\"\\\\<\\\\(\",\">>\",\">\\\\&\",\"[&;()|<>]\"].join(\"|\")+\")\";var n=\"|&;()<> \\\\t\";var i=\"(\\\\\\\\['\\\"\"+n+\"]|[^\\\\s'\\\"\"+n+\"])+\";var a='\"((\\\\\\\\\"|[^\"])*?)\"';var f=\"'((\\\\\\\\'|[^'])*?)'\";var s=\"\";for(var u=0;u<4;u++){s+=(Math.pow(16,8)*Math.random()).toString(16)}r.parse=function(e,r,t){var n=parse(e,r,t);if(typeof r!==\"function\")return n;return n.reduce((function(e,r){if(typeof r===\"object\")return e.concat(r);var t=r.split(RegExp(\"(\"+s+\".*?\"+s+\")\",\"g\"));if(t.length===1)return e.concat(t[0]);return e.concat(t.filter(Boolean).map((function(e){if(RegExp(\"^\"+s).test(e)){return JSON.parse(e.split(s)[1])}else return e})))}),[])};function parse(e,r,n){var u=new RegExp([\"(\"+t+\")\",\"(\"+i+\"|\"+a+\"|\"+f+\")*\"].join(\"|\"),\"g\");var o=e.match(u).filter(Boolean);var l=false;if(!o)return[];if(!r)r={};if(!n)n={};return o.map((function(e,r){if(l){return}if(RegExp(\"^\"+t+\"$\").test(e)){return{op:e}}var i=\"'\";var a='\"';var f=\"$\";var s=n.escape||\"\\\\\";var u=false;var c=false;var p=\"\";var v=false;for(var g=0,d=e.length;g<d;g++){var h=e.charAt(g);v=v||!u&&(h===\"*\"||h===\"?\");if(c){p+=h;c=false}else if(u){if(h===u){u=false}else if(u==i){p+=h}else{if(h===s){g+=1;h=e.charAt(g);if(h===a||h===s||h===f){p+=h}else{p+=s+h}}else if(h===f){p+=parseEnvVar()}else{p+=h}}}else if(h===a||h===i){u=h}else if(RegExp(\"^\"+t+\"$\").test(h)){return{op:e}}else if(RegExp(\"^#$\").test(h)){l=true;if(p.length){return[p,{comment:e.slice(g+1)+o.slice(r+1).join(\" \")}]}return[{comment:e.slice(g+1)+o.slice(r+1).join(\" \")}]}else if(h===s){c=true}else if(h===f){p+=parseEnvVar()}else p+=h}if(v)return{op:\"glob\",pattern:p};return p;function parseEnvVar(){g+=1;var r,t;if(e.charAt(g)===\"{\"){g+=1;if(e.charAt(g)===\"}\"){throw new Error(\"Bad substitution: \"+e.substr(g-2,3))}r=e.indexOf(\"}\",g);if(r<0){throw new Error(\"Bad substitution: \"+e.substr(g))}t=e.substr(g,r-g);g=r}else if(/[*@#?$!_\\-]/.test(e.charAt(g))){t=e.charAt(g);g+=1}else{r=e.substr(g).match(/[^\\w\\d_]/);if(!r){t=e.substr(g);g=e.length}else{t=e.substr(g,r.index);g+=r.index-1}}return getVar(null,\"\",t)}})).reduce((function(e,r){if(r===undefined){return e}return e.concat(r)}),[]);function getVar(e,t,n){var i=typeof r===\"function\"?r(n):r[n];if(i===undefined&&n!=\"\")i=\"\";else if(i===undefined)i=\"$\";if(typeof i===\"object\"){return t+s+JSON.stringify(i)+s}else return t+i}}})();module.exports=e})();","import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./dist/esm/server sync recursive\";\nmodule.exports = webpackEmptyContext;","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().setRootSpanAttribute('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextApiResponse } from '../../../shared/lib/utils'\nimport { checkIsOnDemandRevalidate } from '../.'\nimport type { __ApiPreviewProps } from '../.'\nimport type { BaseNextRequest, BaseNextResponse } from '../../base-http'\nimport type { PreviewData } from '../../../types'\n\nimport {\n  clearPreviewData,\n  COOKIE_NAME_PRERENDER_BYPASS,\n  COOKIE_NAME_PRERENDER_DATA,\n  SYMBOL_PREVIEW_DATA,\n} from '../index'\nimport { RequestCookies } from '../../web/spec-extension/cookies'\nimport { HeadersAdapter } from '../../web/spec-extension/adapters/headers'\n\nexport function tryGetPreviewData(\n  req: IncomingMessage | BaseNextRequest | Request,\n  res: ServerResponse | BaseNextResponse,\n  options: __ApiPreviewProps,\n  multiZoneDraftMode: boolean\n): PreviewData {\n  // if an On-Demand revalidation is being done preview mode\n  // is disabled\n  if (options && checkIsOnDemandRevalidate(req, options).isOnDemandRevalidate) {\n    return false\n  }\n\n  // Read cached preview data if present\n  // TODO: use request metadata instead of a symbol\n  if (SYMBOL_PREVIEW_DATA in req) {\n    return (req as any)[SYMBOL_PREVIEW_DATA] as any\n  }\n\n  const headers = HeadersAdapter.from(req.headers)\n  const cookies = new RequestCookies(headers)\n\n  const previewModeId = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)?.value\n  const tokenPreviewData = cookies.get(COOKIE_NAME_PRERENDER_DATA)?.value\n\n  // Case: preview mode cookie set but data cookie is not set\n  if (\n    previewModeId &&\n    !tokenPreviewData &&\n    previewModeId === options.previewModeId\n  ) {\n    // This is \"Draft Mode\" which doesn't use\n    // previewData, so we return an empty object\n    // for backwards compat with \"Preview Mode\".\n    const data = {}\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  }\n\n  // Case: neither cookie is set.\n  if (!previewModeId && !tokenPreviewData) {\n    return false\n  }\n\n  // Case: one cookie is set, but not the other.\n  if (!previewModeId || !tokenPreviewData) {\n    if (!multiZoneDraftMode) {\n      clearPreviewData(res as NextApiResponse)\n    }\n    return false\n  }\n\n  // Case: preview session is for an old build.\n  if (previewModeId !== options.previewModeId) {\n    if (!multiZoneDraftMode) {\n      clearPreviewData(res as NextApiResponse)\n    }\n    return false\n  }\n\n  let encryptedPreviewData: {\n    data: string\n  }\n  try {\n    const jsonwebtoken =\n      require('next/dist/compiled/jsonwebtoken') as typeof import('next/dist/compiled/jsonwebtoken')\n    encryptedPreviewData = jsonwebtoken.verify(\n      tokenPreviewData,\n      options.previewModeSigningKey\n    ) as typeof encryptedPreviewData\n  } catch {\n    // TODO: warn\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  const { decryptWithSecret } =\n    require('../../crypto-utils') as typeof import('../../crypto-utils')\n  const decryptedPreviewData = decryptWithSecret(\n    Buffer.from(options.previewModeEncryptionKey),\n    encryptedPreviewData.data\n  )\n\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData)\n    // Cache lookup\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  } catch {\n    return false\n  }\n}\n","import crypto from 'crypto'\n\n// Background:\n// https://security.stackexchange.com/questions/184305/why-would-i-ever-use-aes-256-cbc-if-aes-256-gcm-is-more-secure\n\nconst CIPHER_ALGORITHM = `aes-256-gcm`,\n  CIPHER_KEY_LENGTH = 32, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_IV_LENGTH = 16, // https://stackoverflow.com/a/28307668/4397028\n  CIPHER_TAG_LENGTH = 16,\n  CIPHER_SALT_LENGTH = 64\n\nconst PBKDF2_ITERATIONS = 100_000 // https://support.1password.com/pbkdf2/\n\nexport function encryptWithSecret(secret: Buffer, data: string): string {\n  const iv = crypto.randomBytes(CIPHER_IV_LENGTH)\n  const salt = crypto.randomBytes(CIPHER_SALT_LENGTH)\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const cipher = crypto.createCipheriv(CIPHER_ALGORITHM, key, iv)\n  const encrypted = Buffer.concat([cipher.update(data, `utf8`), cipher.final()])\n\n  // https://nodejs.org/api/crypto.html#crypto_cipher_getauthtag\n  const tag = cipher.getAuthTag()\n\n  return Buffer.concat([\n    // Data as required by:\n    // Salt for Key: https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n    // IV: https://nodejs.org/api/crypto.html#crypto_class_decipher\n    // Tag: https://nodejs.org/api/crypto.html#crypto_decipher_setauthtag_buffer\n    salt,\n    iv,\n    tag,\n    encrypted,\n  ]).toString(`hex`)\n}\n\nexport function decryptWithSecret(\n  secret: Buffer,\n  encryptedData: string\n): string {\n  const buffer = Buffer.from(encryptedData, `hex`)\n\n  const salt = buffer.slice(0, CIPHER_SALT_LENGTH)\n  const iv = buffer.slice(\n    CIPHER_SALT_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH\n  )\n  const tag = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH,\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n  const encrypted = buffer.slice(\n    CIPHER_SALT_LENGTH + CIPHER_IV_LENGTH + CIPHER_TAG_LENGTH\n  )\n\n  // https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen_digest\n  const key = crypto.pbkdf2Sync(\n    secret,\n    salt,\n    PBKDF2_ITERATIONS,\n    CIPHER_KEY_LENGTH,\n    `sha512`\n  )\n\n  const decipher = crypto.createDecipheriv(CIPHER_ALGORITHM, key, iv)\n  decipher.setAuthTag(tag)\n\n  return decipher.update(encrypted) + decipher.final(`utf8`)\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","// This file should be imported before any others. It sets up the environment\n// for later imports to work properly.\n\n// expose AsyncLocalStorage on global for react usage if it isn't already provided by the environment\nif (typeof (globalThis as any).AsyncLocalStorage !== 'function') {\n  const { AsyncLocalStorage } = require('async_hooks')\n  ;(globalThis as any).AsyncLocalStorage = AsyncLocalStorage\n}\n\nif (typeof (globalThis as any).WebSocket !== 'function') {\n  Object.defineProperty(globalThis, 'WebSocket', {\n    configurable: true,\n    get() {\n      return require('next/dist/compiled/ws').WebSocket\n    },\n    set(value) {\n      Object.defineProperty(globalThis, 'WebSocket', {\n        configurable: true,\n        writable: true,\n        value,\n      })\n    },\n  })\n}\n","// Polyfill crypto() in the Node.js environment\n\nif (!global.crypto) {\n  let webcrypto: Crypto | undefined\n\n  Object.defineProperty(global, 'crypto', {\n    enumerable: false,\n    configurable: true,\n    get() {\n      if (!webcrypto) {\n        webcrypto = require('node:crypto').webcrypto\n      }\n      return webcrypto\n    },\n    set(value: Crypto) {\n      webcrypto = value\n    },\n  })\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): HeadersIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): HeadersIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","module.exports = require(\"next/dist/server/lib/trace/tracer\");","module.exports = require(\"next/dist/server/web/sandbox\");","module.exports = require(\"async_hooks\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"next/dist/compiled/jsonwebtoken\");","module.exports = require(\"next/dist/compiled/ws\");","module.exports = require(\"next/dist/experimental/testmode/server-edge\");","module.exports = require(\"node:crypto\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * We extend Web Crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When dynamicIO is enabled. Random bytes are a form of IO even if they resolve synchronously. When dyanmicIO is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nlet webCrypto: typeof crypto\nif (process.env.NEXT_RUNTIME === 'edge') {\n  webCrypto = crypto\n} else {\n  if (typeof crypto === 'undefined') {\n    webCrypto = require('node:crypto').webcrypto\n  } else {\n    webCrypto = crypto\n  }\n}\n\nconst getRandomValuesExpression = '`crypto.getRandomValues()`'\ntry {\n  const _getRandomValues = webCrypto.getRandomValues\n  webCrypto.getRandomValues = function getRandomValues() {\n    io(getRandomValuesExpression, 'crypto')\n    return _getRandomValues.apply(webCrypto, arguments as any)\n  }\n} catch {\n  console.error(\n    `Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n\nconst randomUUIDExpression = '`crypto.randomUUID()`'\ntry {\n  const _randomUUID = webCrypto.randomUUID\n  webCrypto.randomUUID = function randomUUID() {\n    io(randomUUIDExpression, 'crypto')\n    return _randomUUID.apply(webCrypto, arguments as any)\n  } as typeof _randomUUID\n} catch {\n  console.error(\n    `Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n","import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from './'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchValue,\n  type IncrementalCacheValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\n\nimport { LRUCache } from '../lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\nimport { isStale, tagsManifest } from './tags-manifest.external'\nimport { MultiFileWriter } from '../../../lib/multi-file-writer'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\nlet memoryCache: LRUCache<CacheHandlerValue> | undefined\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private revalidatedTags: string[]\n  private debug: boolean\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.revalidatedTags = ctx.revalidatedTags\n    this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!memoryCache) {\n        if (this.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({\n          value,\n        }) {\n          if (!value) {\n            return 25\n          } else if (value.kind === CachedRouteKind.REDIRECT) {\n            return JSON.stringify(value.props).length\n          } else if (value.kind === CachedRouteKind.IMAGE) {\n            throw new Error('invariant image should not be incremental-cache')\n          } else if (value.kind === CachedRouteKind.FETCH) {\n            return JSON.stringify(value.data || '').length\n          } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n            return value.body.length\n          }\n          // rough estimate of size of cache value\n          return (\n            value.html.length +\n            (JSON.stringify(\n              value.kind === CachedRouteKind.APP_PAGE\n                ? value.rscData\n                : value.pageData\n            )?.length || 0)\n          )\n        })\n      }\n    } else if (this.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (this.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    for (const tag of tags) {\n      if (!tagsManifest.has(tag)) {\n        tagsManifest.set(tag, Date.now())\n      }\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx] = args\n    const { kind } = ctx\n\n    let data = memoryCache?.get(key)\n\n    if (this.debug) {\n      if (kind === IncrementalCacheKind.FETCH) {\n        console.log('get', key, ctx.tags, kind, !!data)\n      } else {\n        console.log('get', key, kind, !!data)\n      }\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      if (kind === IncrementalCacheKind.APP_ROUTE) {\n        try {\n          const filePath = this.getFilePath(\n            `${key}.body`,\n            IncrementalCacheKind.APP_ROUTE\n          )\n          const fileData = await this.fs.readFile(filePath)\n          const { mtime } = await this.fs.stat(filePath)\n\n          const meta = JSON.parse(\n            await this.fs.readFile(\n              filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n              'utf8'\n            )\n          )\n\n          const cacheEntry: CacheHandlerValue = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_ROUTE,\n              body: fileData,\n              headers: meta.headers,\n              status: meta.status,\n            },\n          }\n          return cacheEntry\n        } catch {\n          return null\n        }\n      }\n\n      try {\n        const filePath = this.getFilePath(\n          kind === IncrementalCacheKind.FETCH ? key : `${key}.html`,\n          kind\n        )\n\n        const fileData = await this.fs.readFile(filePath, 'utf8')\n        const { mtime } = await this.fs.stat(filePath)\n\n        if (kind === IncrementalCacheKind.FETCH) {\n          const { tags, fetchIdx, fetchUrl } = ctx\n\n          if (!this.flushToDisk) return null\n\n          const lastModified = mtime.getTime()\n          const parsedData: CachedFetchValue = JSON.parse(fileData)\n          data = {\n            lastModified,\n            value: parsedData,\n          }\n\n          if (data.value?.kind === CachedRouteKind.FETCH) {\n            const storedTags = data.value?.tags\n\n            // update stored tags if a new one is being added\n            // TODO: remove this when we can send the tags\n            // via header on GET same as SET\n            if (!tags?.every((tag) => storedTags?.includes(tag))) {\n              if (this.debug) {\n                console.log('tags vs storedTags mismatch', tags, storedTags)\n              }\n              await this.set(key, data.value, {\n                fetchCache: true,\n                tags,\n                fetchIdx,\n                fetchUrl,\n              })\n            }\n          }\n        } else if (kind === IncrementalCacheKind.APP_PAGE) {\n          // We try to load the metadata file, but if it fails, we don't\n          // error. We also don't load it if this is a fallback.\n          let meta: RouteMetadata | undefined\n          try {\n            meta = JSON.parse(\n              await this.fs.readFile(\n                filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                'utf8'\n              )\n            )\n          } catch {}\n\n          let maybeSegmentData: Map<string, Buffer> | undefined\n          if (meta?.segmentPaths) {\n            // Collect all the segment data for this page.\n            // TODO: To optimize file system reads, we should consider creating\n            // separate cache entries for each segment, rather than storing them\n            // all on the page's entry. Though the behavior is\n            // identical regardless.\n            const segmentData: Map<string, Buffer> = new Map()\n            maybeSegmentData = segmentData\n            const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX\n            await Promise.all(\n              meta.segmentPaths.map(async (segmentPath: string) => {\n                const segmentDataFilePath = this.getFilePath(\n                  segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX,\n                  IncrementalCacheKind.APP_PAGE\n                )\n                try {\n                  segmentData.set(\n                    segmentPath,\n                    await this.fs.readFile(segmentDataFilePath)\n                  )\n                } catch {\n                  // This shouldn't happen, but if for some reason we fail to\n                  // load a segment from the filesystem, treat it the same as if\n                  // the segment is dynamic and does not have a prefetch.\n                }\n              })\n            )\n          }\n\n          let rscData: Buffer | undefined\n          if (!ctx.isFallback) {\n            rscData = await this.fs.readFile(\n              this.getFilePath(\n                `${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                IncrementalCacheKind.APP_PAGE\n              )\n            )\n          }\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_PAGE,\n              html: fileData,\n              rscData,\n              postponed: meta?.postponed,\n              headers: meta?.headers,\n              status: meta?.status,\n              segmentData: maybeSegmentData,\n            },\n          }\n        } else if (kind === IncrementalCacheKind.PAGES) {\n          let meta: RouteMetadata | undefined\n          let pageData: string | object = {}\n\n          if (!ctx.isFallback) {\n            pageData = JSON.parse(\n              await this.fs.readFile(\n                this.getFilePath(\n                  `${key}${NEXT_DATA_SUFFIX}`,\n                  IncrementalCacheKind.PAGES\n                ),\n                'utf8'\n              )\n            )\n          }\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.PAGES,\n              html: fileData,\n              pageData,\n              headers: meta?.headers,\n              status: meta?.status,\n            },\n          }\n        } else {\n          throw new Error(\n            `Invariant: Unexpected route kind ${kind} in file system cache.`\n          )\n        }\n\n        if (data) {\n          memoryCache?.set(key, data)\n        }\n      } catch {\n        return null\n      }\n    }\n\n    if (\n      data?.value?.kind === CachedRouteKind.APP_PAGE ||\n      data?.value?.kind === CachedRouteKind.PAGES\n    ) {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale(cacheTags, data?.lastModified || Date.now())) {\n          return null\n        }\n      }\n    } else if (data?.value?.kind === CachedRouteKind.FETCH) {\n      const combinedTags =\n        ctx.kind === IncrementalCacheKind.FETCH\n          ? [...(ctx.tags || []), ...(ctx.softTags || [])]\n          : []\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return isStale([tag], data?.lastModified || Date.now())\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(\n    key: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ) {\n    memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (this.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk || !data) return\n\n    // Create a new writer that will prepare to write all the files to disk\n    // after their containing directory is created.\n    const writer = new MultiFileWriter(this.fs)\n\n    if (data.kind === CachedRouteKind.APP_ROUTE) {\n      const filePath = this.getFilePath(\n        `${key}.body`,\n        IncrementalCacheKind.APP_ROUTE\n      )\n\n      writer.append(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n        segmentPaths: undefined,\n      }\n\n      writer.append(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n    } else if (\n      data.kind === CachedRouteKind.PAGES ||\n      data.kind === CachedRouteKind.APP_PAGE\n    ) {\n      const isAppPath = data.kind === CachedRouteKind.APP_PAGE\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES\n      )\n\n      writer.append(htmlPath, data.html)\n\n      // Fallbacks don't generate a data file.\n      if (!ctx.fetchCache && !ctx.isFallback) {\n        writer.append(\n          this.getFilePath(\n            `${key}${\n              isAppPath\n                ? ctx.isRoutePPREnabled\n                  ? RSC_PREFETCH_SUFFIX\n                  : RSC_SUFFIX\n                : NEXT_DATA_SUFFIX\n            }`,\n            isAppPath\n              ? IncrementalCacheKind.APP_PAGE\n              : IncrementalCacheKind.PAGES\n          ),\n          isAppPath ? data.rscData! : JSON.stringify(data.pageData)\n        )\n      }\n\n      if (data?.kind === CachedRouteKind.APP_PAGE) {\n        let segmentPaths: string[] | undefined\n        if (data.segmentData) {\n          segmentPaths = []\n          const segmentsDir = htmlPath.replace(\n            /\\.html$/,\n            RSC_SEGMENTS_DIR_SUFFIX\n          )\n\n          for (const [segmentPath, buffer] of data.segmentData) {\n            segmentPaths.push(segmentPath)\n            const segmentDataFilePath =\n              segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX\n            writer.append(segmentDataFilePath, buffer)\n          }\n        }\n\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: data.postponed,\n          segmentPaths,\n        }\n\n        writer.append(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data.kind === CachedRouteKind.FETCH) {\n      const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH)\n      writer.append(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.fetchCache ? ctx.tags : [],\n        })\n      )\n    }\n\n    // Wait for all FS operations to complete.\n    await writer.wait()\n  }\n\n  private getFilePath(pathname: string, kind: IncrementalCacheKind): string {\n    switch (kind) {\n      case IncrementalCacheKind.FETCH:\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case IncrementalCacheKind.PAGES:\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case IncrementalCacheKind.IMAGE:\n      case IncrementalCacheKind.APP_PAGE:\n      case IncrementalCacheKind.APP_ROUTE:\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(`Unexpected file path kind: ${kind}`)\n    }\n  }\n}\n","// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/compiled/source-map\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/compiled/source-map08\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs/promises\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/compiled/babel/code-frame\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"util\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/compiled/stacktrace-parser\");","const symbolError = Symbol.for('NextjsError')\n\nexport function getErrorSource(error: Error): 'server' | 'edge-server' | null {\n  return (error as any)[symbolError] || null\n}\n\nexport type ErrorSourceType = 'edge-server' | 'server'\n\nexport function decorateServerError(error: Error, type: ErrorSourceType) {\n  Object.defineProperty(error, symbolError, {\n    writable: false,\n    enumerable: false,\n    configurable: false,\n    value: type,\n  })\n}\n","import isError from '../../lib/is-error'\n\nconst hydrationErrorRegex =\n  /hydration failed|while hydrating|content does not match|did not match|HTML didn't match|text didn't match/i\n\nconst reactUnifiedMismatchWarning = `Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:`\n\nconst reactHydrationStartMessages = [\n  reactUnifiedMismatchWarning,\n  `Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:`,\n  `A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:`,\n]\n\nexport const REACT_HYDRATION_ERROR_LINK =\n  'https://react.dev/link/hydration-mismatch'\nexport const NEXTJS_HYDRATION_ERROR_LINK =\n  'https://nextjs.org/docs/messages/react-hydration-error'\n\nexport const getDefaultHydrationErrorMessage = () => {\n  return reactUnifiedMismatchWarning\n}\n\nexport function isHydrationError(error: unknown): boolean {\n  return isError(error) && hydrationErrorRegex.test(error.message)\n}\n\nexport function isReactHydrationErrorMessage(msg: string): boolean {\n  return reactHydrationStartMessages.some((prefix) => msg.startsWith(prefix))\n}\n\nconst hydrationWarningRegexes = [\n  /^In HTML, (.+?) cannot be a child of <(.+?)>\\.(.*)\\nThis will cause a hydration error\\.(.*)/,\n  /^In HTML, (.+?) cannot be a descendant of <(.+?)>\\.\\nThis will cause a hydration error\\.(.*)/,\n  /^In HTML, text nodes cannot be a child of <(.+?)>\\.\\nThis will cause a hydration error\\./,\n  /^In HTML, whitespace text nodes cannot be a child of <(.+?)>\\. Make sure you don't have any extra whitespace between tags on each line of your source code\\.\\nThis will cause a hydration error\\./,\n  /^Expected server HTML to contain a matching <(.+?)> in <(.+?)>\\.(.*)/,\n  /^Did not expect server HTML to contain a <(.+?)> in <(.+?)>\\.(.*)/,\n  /^Expected server HTML to contain a matching text node for \"(.+?)\" in <(.+?)>\\.(.*)/,\n  /^Did not expect server HTML to contain the text node \"(.+?)\" in <(.+?)>\\.(.*)/,\n  /^Text content did not match\\. Server: \"(.+?)\" Client: \"(.+?)\"(.*)/,\n]\n\nexport function testReactHydrationWarning(msg: string): boolean {\n  if (typeof msg !== 'string' || !msg) return false\n  // React 18 has the `Warning: ` prefix.\n  // React 19 does not.\n  if (msg.startsWith('Warning: ')) {\n    msg = msg.slice('Warning: '.length)\n  }\n  return hydrationWarningRegexes.some((regex) => regex.test(msg))\n}\n\nexport function getHydrationErrorStackInfo(rawMessage: string): {\n  message: string | null\n  stack?: string\n  diff?: string\n} {\n  rawMessage = rawMessage.replace(/^Error: /, '')\n  rawMessage = rawMessage.replace('Warning: ', '')\n  const isReactHydrationWarning = testReactHydrationWarning(rawMessage)\n\n  if (!isReactHydrationErrorMessage(rawMessage) && !isReactHydrationWarning) {\n    return {\n      message: null,\n      stack: rawMessage,\n      diff: '',\n    }\n  }\n\n  if (isReactHydrationWarning) {\n    const [message, diffLog] = rawMessage.split('\\n\\n')\n    return {\n      message: message.trim(),\n      stack: '',\n      diff: (diffLog || '').trim(),\n    }\n  }\n\n  const firstLineBreak = rawMessage.indexOf('\\n')\n  rawMessage = rawMessage.slice(firstLineBreak + 1).trim()\n\n  const [message, trailing] = rawMessage.split(`${REACT_HYDRATION_ERROR_LINK}`)\n  const trimmedMessage = message.trim()\n  // React built-in hydration diff starts with a newline, checking if length is > 1\n  if (trailing && trailing.length > 1) {\n    const stacks: string[] = []\n    const diffs: string[] = []\n    trailing.split('\\n').forEach((line) => {\n      if (line.trim() === '') return\n      if (line.trim().startsWith('at ')) {\n        stacks.push(line)\n      } else {\n        diffs.push(line)\n      }\n    })\n\n    return {\n      message: trimmedMessage,\n      diff: diffs.join('\\n'),\n      stack: stacks.join('\\n'),\n    }\n  } else {\n    return {\n      message: trimmedMessage,\n      stack: trailing, // without hydration diff\n    }\n  }\n}\n","import { parse } from 'next/dist/compiled/stacktrace-parser'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport {\n  getHydrationErrorStackInfo,\n  isReactHydrationErrorMessage,\n} from '../../is-hydration-error'\n\nconst regexNextStatic = /\\/_next(\\/static\\/.+)/\n\nexport function parseStack(stack: string | undefined): StackFrame[] {\n  if (!stack) return []\n  const messageAndStack = stack.replace(/^Error: /, '')\n  if (isReactHydrationErrorMessage(messageAndStack)) {\n    const { stack: parsedStack } = getHydrationErrorStackInfo(messageAndStack)\n    if (parsedStack) {\n      stack = parsedStack\n    }\n  }\n\n  // throw away eval information that stacktrace-parser doesn't support\n  // adapted from https://github.com/stacktracejs/error-stack-parser/blob/9f33c224b5d7b607755eb277f9d51fcdb7287e24/error-stack-parser.js#L59C33-L59C62\n  stack = stack\n    .split('\\n')\n    .map((line) => {\n      if (line.includes('(eval ')) {\n        line = line\n          .replace(/eval code/g, 'eval')\n          .replace(/\\(eval at [^()]* \\(/, '(file://')\n          .replace(/\\),.*$/g, ')')\n      }\n\n      return line\n    })\n    .join('\\n')\n\n  const frames = parse(stack)\n  return frames.map((frame) => {\n    try {\n      const url = new URL(frame.file!)\n      const res = regexNextStatic.exec(url.pathname)\n      if (res) {\n        const distDir = process.env.__NEXT_DIST_DIR\n          ?.replace(/\\\\/g, '/')\n          ?.replace(/\\/$/, '')\n        if (distDir) {\n          frame.file = 'file://' + distDir.concat(res.pop()!) + url.search\n        }\n      }\n    } catch {}\n    return frame\n  })\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","import {\n  findSourceMap as nativeFindSourceMap,\n  type SourceMapPayload,\n} from 'module'\nimport * as path from 'path'\nimport * as url from 'url'\nimport type * as util from 'util'\nimport { SourceMapConsumer as SyncSourceMapConsumer } from 'next/dist/compiled/source-map'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport { parseStack } from '../client/components/react-dev-overlay/server/middleware-webpack'\nimport { getOriginalCodeFrame } from '../client/components/react-dev-overlay/server/shared'\nimport { workUnitAsyncStorage } from './app-render/work-unit-async-storage.external'\nimport { dim } from '../lib/picocolors'\n\ntype FindSourceMapPayload = (\n  sourceURL: string\n) => ModernSourceMapPayload | undefined\n// Find a source map using the bundler's API.\n// This is only a fallback for when Node.js fails to due to bugs e.g. https://github.com/nodejs/node/issues/52102\n// TODO: Remove once all supported Node.js versions are fixed.\n// TODO(veil): Set from Webpack as well\nlet bundlerFindSourceMapPayload: FindSourceMapPayload = () => undefined\n\nexport function setBundlerFindSourceMapImplementation(\n  findSourceMapImplementation: FindSourceMapPayload\n): void {\n  bundlerFindSourceMapPayload = findSourceMapImplementation\n}\n\n/**\n * https://tc39.es/source-map/#index-map\n */\ninterface IndexSourceMapSection {\n  offset: {\n    line: number\n    column: number\n  }\n  map: ModernRawSourceMap\n}\n\n// TODO(veil): Upstream types\ninterface IndexSourceMap {\n  version: number\n  file: string\n  sections: IndexSourceMapSection[]\n}\n\ninterface ModernRawSourceMap extends SourceMapPayload {\n  ignoreList?: number[]\n}\n\nexport type ModernSourceMapPayload = ModernRawSourceMap | IndexSourceMap\n\ninterface IgnoreableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\ntype SourceMapCache = Map<\n  string,\n  null | { map: SyncSourceMapConsumer; payload: ModernSourceMapPayload }\n>\n\nfunction frameToString(frame: StackFrame): string {\n  let sourceLocation = frame.lineNumber !== null ? `:${frame.lineNumber}` : ''\n  if (frame.column !== null && sourceLocation !== '') {\n    sourceLocation += `:${frame.column}`\n  }\n\n  let fileLocation: string | null\n  if (\n    frame.file !== null &&\n    frame.file.startsWith('file://') &&\n    URL.canParse(frame.file)\n  ) {\n    // If not relative to CWD, the path is ambiguous to IDEs and clicking will prompt to select the file first.\n    // In a multi-app repo, this leads to potentially larger file names but will make clicking snappy.\n    // There's no tradeoff for the cases where `dir` in `next dev [dir]` is omitted\n    // since relative to cwd is both the shortest and snappiest.\n    fileLocation = path.relative(process.cwd(), url.fileURLToPath(frame.file))\n  } else if (frame.file !== null && frame.file.startsWith('/')) {\n    fileLocation = path.relative(process.cwd(), frame.file)\n  } else {\n    fileLocation = frame.file\n  }\n\n  return frame.methodName\n    ? `    at ${frame.methodName} (${fileLocation}${sourceLocation})`\n    : `    at ${fileLocation}${sourceLocation}`\n}\n\nfunction computeErrorName(error: Error): string {\n  // TODO: Node.js seems to use a different algorithm\n  // class ReadonlyRequestCookiesError extends Error {}` would read `ReadonlyRequestCookiesError: [...]`\n  // in the stack i.e. seems like under certain conditions it favors the constructor name.\n  return error.name || 'Error'\n}\n\nfunction prepareUnsourcemappedStackTrace(\n  error: Error,\n  structuredStackTrace: any[]\n): string {\n  const name = computeErrorName(error)\n  const message = error.message || ''\n  let stack = name + ': ' + message\n  for (let i = 0; i < structuredStackTrace.length; i++) {\n    stack += '\\n    at ' + structuredStackTrace[i].toString()\n  }\n  return stack\n}\n\nfunction shouldIgnoreListGeneratedFrame(file: string): boolean {\n  return file.startsWith('node:') || file.includes('node_modules')\n}\n\nfunction shouldIgnoreListOriginalFrame(file: string): boolean {\n  return file.includes('node_modules')\n}\n\n/**\n * Finds the sourcemap payload applicable to a given frame.\n * Equal to the input unless an Index Source Map is used.\n */\nfunction findApplicableSourceMapPayload(\n  frame: StackFrame,\n  payload: ModernSourceMapPayload\n): ModernRawSourceMap | undefined {\n  if ('sections' in payload) {\n    const frameLine = frame.lineNumber ?? 0\n    const frameColumn = frame.column ?? 0\n    // Sections must not overlap and must be sorted: https://tc39.es/source-map/#section-object\n    // Therefore the last section that has an offset less than or equal to the frame is the applicable one.\n    // TODO(veil): Binary search\n    let section: IndexSourceMapSection | undefined = payload.sections[0]\n    for (\n      let i = 0;\n      i < payload.sections.length &&\n      payload.sections[i].offset.line <= frameLine &&\n      payload.sections[i].offset.column <= frameColumn;\n      i++\n    ) {\n      section = payload.sections[i]\n    }\n\n    return section === undefined ? undefined : section.map\n  } else {\n    return payload\n  }\n}\n\ninterface SourcemappableStackFrame extends StackFrame {\n  file: NonNullable<StackFrame['file']>\n}\n\ninterface SourceMappedFrame {\n  stack: IgnoreableStackFrame\n  // DEV only\n  code: string | null\n}\n\nfunction createUnsourcemappedFrame(\n  frame: SourcemappableStackFrame\n): SourceMappedFrame {\n  return {\n    stack: {\n      arguments: frame.arguments,\n      column: frame.column,\n      file: frame.file,\n      lineNumber: frame.lineNumber,\n      methodName: frame.methodName,\n      ignored: shouldIgnoreListGeneratedFrame(frame.file),\n    },\n    code: null,\n  }\n}\n\n/**\n * @param frame\n * @param sourceMapCache\n * @returns The original frame if not sourcemapped.\n */\nfunction getSourcemappedFrameIfPossible(\n  frame: SourcemappableStackFrame,\n  sourceMapCache: SourceMapCache,\n  inspectOptions: util.InspectOptions\n): {\n  stack: IgnoreableStackFrame\n  // DEV only\n  code: string | null\n} {\n  const sourceMapCacheEntry = sourceMapCache.get(frame.file)\n  let sourceMapConsumer: SyncSourceMapConsumer\n  let sourceMapPayload: ModernSourceMapPayload\n  if (sourceMapCacheEntry === undefined) {\n    let sourceURL = frame.file\n    // e.g. \"/APP/.next/server/chunks/ssr/[root-of-the-server]__2934a0._.js\"\n    // will be keyed by Node.js as \"file:///APP/.next/server/chunks/ssr/[root-of-the-server]__2934a0._.js\".\n    // This is likely caused by `callsite.toString()` in `Error.prepareStackTrace converting file URLs to paths.\n    if (sourceURL.startsWith('/')) {\n      sourceURL = url.pathToFileURL(frame.file).toString()\n    }\n    let maybeSourceMapPayload: ModernSourceMapPayload | undefined\n    try {\n      const sourceMap = nativeFindSourceMap(sourceURL)\n      maybeSourceMapPayload = sourceMap?.payload\n    } catch (cause) {\n      // We should not log an actual error instance here because that will re-enter\n      // this codepath during error inspection and could lead to infinite recursion.\n      console.error(\n        `${sourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n      // If loading fails once, it'll fail every time.\n      // So set the cache to avoid duplicate errors.\n      sourceMapCache.set(frame.file, null)\n      // Don't even fall back to the bundler because it might be not as strict\n      // with regards to parsing and then we fail later once we consume the\n      // source map payload.\n      // This essentially avoids a redundant error where we fail here and then\n      // later on consumption because the bundler just handed back an invalid\n      // source map.\n      return createUnsourcemappedFrame(frame)\n    }\n    if (maybeSourceMapPayload === undefined) {\n      maybeSourceMapPayload = bundlerFindSourceMapPayload(sourceURL)\n    }\n\n    if (maybeSourceMapPayload === undefined) {\n      return createUnsourcemappedFrame(frame)\n    }\n    sourceMapPayload = maybeSourceMapPayload\n    try {\n      sourceMapConsumer = new SyncSourceMapConsumer(\n        // @ts-expect-error -- Module.SourceMap['version'] is number but SyncSourceMapConsumer wants a string\n        sourceMapPayload\n      )\n    } catch (cause) {\n      // We should not log an actual error instance here because that will re-enter\n      // this codepath during error inspection and could lead to infinite recursion.\n      console.error(\n        `${sourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n      // If creating the consumer fails once, it'll fail every time.\n      // So set the cache to avoid duplicate errors.\n      sourceMapCache.set(frame.file, null)\n      return createUnsourcemappedFrame(frame)\n    }\n    sourceMapCache.set(frame.file, {\n      map: sourceMapConsumer,\n      payload: sourceMapPayload,\n    })\n  } else if (sourceMapCacheEntry === null) {\n    // We failed earlier getting the payload or consumer.\n    // Just return an unsourcemapped frame.\n    // Errors will already be logged.\n    return createUnsourcemappedFrame(frame)\n  } else {\n    sourceMapConsumer = sourceMapCacheEntry.map\n    sourceMapPayload = sourceMapCacheEntry.payload\n  }\n\n  const sourcePosition = sourceMapConsumer.originalPositionFor({\n    column: frame.column ?? 0,\n    line: frame.lineNumber ?? 1,\n  })\n\n  if (sourcePosition.source === null) {\n    return {\n      stack: {\n        arguments: frame.arguments,\n        column: frame.column,\n        file: frame.file,\n        lineNumber: frame.lineNumber,\n        methodName: frame.methodName,\n        ignored: shouldIgnoreListGeneratedFrame(frame.file),\n      },\n      code: null,\n    }\n  }\n\n  const sourceContent: string | null =\n    sourceMapConsumer.sourceContentFor(\n      sourcePosition.source,\n      /* returnNullOnMissing */ true\n    ) ?? null\n\n  const applicableSourceMap = findApplicableSourceMapPayload(\n    frame,\n    sourceMapPayload\n  )\n  // TODO(veil): Upstream a method to sourcemap consumer that immediately says if a frame is ignored or not.\n  let ignored = false\n  if (applicableSourceMap === undefined) {\n    console.error('No applicable source map found in sections for frame', frame)\n  } else if (shouldIgnoreListOriginalFrame(sourcePosition.source)) {\n    // Externals may be libraries that don't ship ignoreLists.\n    // This is really taking control away from libraries.\n    // They should still ship `ignoreList` so that attached debuggers ignore-list their frames.\n    // TODO: Maybe only ignore library sourcemaps if `ignoreList` is absent?\n    // Though keep in mind that Turbopack omits empty `ignoreList`.\n    // So if we establish this convention, we should communicate it to the ecosystem.\n    ignored = true\n  } else {\n    // TODO: O(n^2). Consider moving `ignoreList` into a Set\n    const sourceIndex = applicableSourceMap.sources.indexOf(\n      sourcePosition.source\n    )\n    ignored = applicableSourceMap.ignoreList?.includes(sourceIndex) ?? false\n  }\n\n  const originalFrame: IgnoreableStackFrame = {\n    // We ignore the sourcemapped name since it won't be the correct name.\n    // The callsite will point to the column of the variable name instead of the\n    // name of the enclosing function.\n    // TODO(NDX-531): Spy on prepareStackTrace to get the enclosing line number for method name mapping.\n    methodName: frame.methodName\n      ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n      ?.replace('__webpack_exports__.', ''),\n    column: sourcePosition.column,\n    file: sourcePosition.source,\n    lineNumber: sourcePosition.line,\n    // TODO: c&p from async createOriginalStackFrame but why not frame.arguments?\n    arguments: [],\n    ignored,\n  }\n\n  const codeFrame =\n    process.env.NODE_ENV !== 'production'\n      ? getOriginalCodeFrame(\n          originalFrame,\n          sourceContent,\n          inspectOptions.colors\n        )\n      : null\n\n  return {\n    stack: originalFrame,\n    code: codeFrame,\n  }\n}\n\nfunction parseAndSourceMap(\n  error: Error,\n  inspectOptions: util.InspectOptions\n): string {\n  // TODO(veil): Expose as CLI arg or config option. Useful for local debugging.\n  const showIgnoreListed = false\n  // We overwrote Error.prepareStackTrace earlier so error.stack is not sourcemapped.\n  let unparsedStack = String(error.stack)\n  // We could just read it from `error.stack`.\n  // This works around cases where a 3rd party `Error.prepareStackTrace` implementation\n  // doesn't implement the name computation correctly.\n  const errorName = computeErrorName(error)\n\n  let idx = unparsedStack.indexOf('react-stack-bottom-frame')\n  if (idx !== -1) {\n    idx = unparsedStack.lastIndexOf('\\n', idx)\n  }\n  if (idx !== -1 && !showIgnoreListed) {\n    // Cut off everything after the bottom frame since it'll be React internals.\n    unparsedStack = unparsedStack.slice(0, idx)\n  }\n\n  const unsourcemappedStack = parseStack(unparsedStack)\n  const sourceMapCache: SourceMapCache = new Map()\n\n  let sourceMappedStack = ''\n  let sourceFrameDEV: null | string = null\n  for (const frame of unsourcemappedStack) {\n    if (frame.file === null) {\n      sourceMappedStack += '\\n' + frameToString(frame)\n    } else {\n      const sourcemappedFrame = getSourcemappedFrameIfPossible(\n        // We narrowed this earlier by bailing if `frame.file` is null.\n        frame as SourcemappableStackFrame,\n        sourceMapCache,\n        inspectOptions\n      )\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        sourcemappedFrame.code !== null &&\n        sourceFrameDEV === null &&\n        // TODO: Is this the right choice?\n        !sourcemappedFrame.stack.ignored\n      ) {\n        sourceFrameDEV = sourcemappedFrame.code\n      }\n      if (!sourcemappedFrame.stack.ignored) {\n        // TODO: Consider what happens if every frame is ignore listed.\n        sourceMappedStack += '\\n' + frameToString(sourcemappedFrame.stack)\n      } else if (showIgnoreListed && !inspectOptions.colors) {\n        sourceMappedStack += '\\n' + frameToString(sourcemappedFrame.stack)\n      } else if (showIgnoreListed) {\n        sourceMappedStack += '\\n' + dim(frameToString(sourcemappedFrame.stack))\n      }\n    }\n  }\n\n  return (\n    errorName +\n    ': ' +\n    error.message +\n    sourceMappedStack +\n    (sourceFrameDEV !== null ? '\\n' + sourceFrameDEV : '')\n  )\n}\n\nfunction sourceMapError(\n  this: void,\n  error: Error,\n  inspectOptions: util.InspectOptions\n): Error {\n  // Create a new Error object with the source mapping applied and then use native\n  // Node.js formatting on the result.\n  const newError =\n    error.cause !== undefined\n      ? // Setting an undefined `cause` would print `[cause]: undefined`\n        new Error(error.message, { cause: error.cause })\n      : new Error(error.message)\n\n  // TODO: Ensure `class MyError extends Error {}` prints `MyError` as the name\n  newError.stack = parseAndSourceMap(error, inspectOptions)\n\n  for (const key in error) {\n    if (!Object.prototype.hasOwnProperty.call(newError, key)) {\n      // @ts-expect-error -- We're copying all enumerable properties.\n      // So they definitely exist on `this` and obviously have no type on `newError` (yet)\n      newError[key] = error[key]\n    }\n  }\n\n  return newError\n}\n\nexport function patchErrorInspectNodeJS(\n  errorConstructor: ErrorConstructor\n): void {\n  const inspectSymbol = Symbol.for('nodejs.util.inspect.custom')\n\n  errorConstructor.prepareStackTrace = prepareUnsourcemappedStackTrace\n\n  // @ts-expect-error -- TODO upstream types\n  // eslint-disable-next-line no-extend-native -- We're not extending but overriding.\n  errorConstructor.prototype[inspectSymbol] = function (\n    depth: number,\n    inspectOptions: util.InspectOptions,\n    inspect: typeof util.inspect\n  ): string {\n    // avoid false-positive dynamic i/o warnings e.g. due to usage of `Math.random` in `source-map`.\n    return workUnitAsyncStorage.exit(() => {\n      const newError = sourceMapError(this, inspectOptions)\n\n      const originalCustomInspect = (newError as any)[inspectSymbol]\n      // Prevent infinite recursion.\n      // { customInspect: false } would result in `error.cause` not using our inspect.\n      Object.defineProperty(newError, inspectSymbol, {\n        value: undefined,\n        enumerable: false,\n        writable: true,\n      })\n      try {\n        return inspect(newError, {\n          ...inspectOptions,\n          depth:\n            (inspectOptions.depth ??\n              // Default in Node.js\n              2) - depth,\n        })\n      } finally {\n        ;(newError as any)[inspectSymbol] = originalCustomInspect\n      }\n    })\n  }\n}\n\nexport function patchErrorInspectEdgeLite(\n  errorConstructor: ErrorConstructor\n): void {\n  const inspectSymbol = Symbol.for('edge-runtime.inspect.custom')\n\n  errorConstructor.prepareStackTrace = prepareUnsourcemappedStackTrace\n\n  // @ts-expect-error -- TODO upstream types\n  // eslint-disable-next-line no-extend-native -- We're not extending but overriding.\n  errorConstructor.prototype[inspectSymbol] = function ({\n    format,\n  }: {\n    format: (...args: unknown[]) => string\n  }): string {\n    // avoid false-positive dynamic i/o warnings e.g. due to usage of `Math.random` in `source-map`.\n    return workUnitAsyncStorage.exit(() => {\n      const newError = sourceMapError(this, {})\n\n      const originalCustomInspect = (newError as any)[inspectSymbol]\n      // Prevent infinite recursion.\n      Object.defineProperty(newError, inspectSymbol, {\n        value: undefined,\n        enumerable: false,\n        writable: true,\n      })\n      try {\n        return format(newError)\n      } finally {\n        ;(newError as any)[inspectSymbol] = originalCustomInspect\n      }\n    })\n  }\n}\n","import { patchErrorInspectNodeJS } from '../patch-error-inspect'\n\npatchErrorInspectNodeJS(globalThis.Error)\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/server/app-render/work-async-storage.external.js\");","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../lib/metadata/metadata-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicExpression: undefined | string\n  syncDynamicErrorWithStack: null | Error\n  // Dev only\n  syncDynamicLogged?: boolean\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspendedDynamic: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasSyncDynamicErrors: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicExpression: undefined,\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspendedDynamic: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasSyncDynamicErrors: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender-ppr') {\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      workUnitStore.revalidate = 0\n\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */\nexport function trackFallbackParamAccessed(\n  store: WorkStore,\n  expression: string\n): void {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return\n\n  postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking)\n}\n\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(\n  _store: WorkStore,\n  workUnitStore: void | WorkUnitStore\n) {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      workUnitStore.revalidate = 0\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicExpression = expression\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n        if (prerenderStore.validating === true) {\n          // We always log Request Access in dev at the point of calling the function\n          // So we mark the dynamic validation as not requiring it to be printed\n          dynamicTracking.syncDynamicLogged = true\n        }\n      }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createPostponedAbortSignal(reason: string): AbortSignal {\n  assertPostpone()\n  const controller = new AbortController()\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    React.unstable_postpone(reason)\n  } catch (x: unknown) {\n    controller.abort(x)\n  }\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: PrerenderStoreModern\n): AbortSignal {\n  const controller = new AbortController()\n\n  if (workUnitStore.cacheSignal) {\n    // If we have a cacheSignal it means we're in a prospective render. If the input\n    // we're waiting on is coming from another cache, we do want to wait for it so that\n    // we can resolve this cache entry too.\n    workUnitStore.cacheSignal.inputReady().then(() => {\n      controller.abort()\n    })\n  } else {\n    // Otherwise we're in the final render and we should already have all our caches\n    // filled. We might still be waiting on some microtasks so we wait one tick before\n    // giving up. When we give up, we still want to render the content of this cache\n    // as deeply as we can so that we can suspend as deeply as possible in the tree\n    // or not at all if we don't end up waiting for the input.\n    scheduleOnNextTick(() => controller.abort())\n  }\n\n  return controller.signal\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n\n  if (\n    workStore &&\n    workStore.isStaticGeneration &&\n    workStore.fallbackRouteParams &&\n    workStore.fallbackRouteParams.size > 0\n  ) {\n    // There are fallback route params, we should track these as dynamic\n    // accesses.\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (workUnitStore) {\n      // We're prerendering with dynamicIO or PPR or both\n      if (workUnitStore.type === 'prerender') {\n        // We are in a prerender with dynamicIO semantics\n        // We are going to hang here and never resolve. This will cause the currently\n        // rendering component to effectively be a dynamic hole\n        React.use(makeHangingPromise(workUnitStore.renderSignal, expression))\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // We're prerendering with PPR\n        postponeWithTracking(\n          workStore.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        throwToInterruptStaticGeneration(expression, workStore, workUnitStore)\n      }\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  route: string,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    dynamicValidation.hasSuspendedDynamic = true\n    return\n  } else if (\n    serverDynamic.syncDynamicErrorWithStack ||\n    clientDynamic.syncDynamicErrorWithStack\n  ) {\n    dynamicValidation.hasSyncDynamicErrors = true\n    return\n  } else {\n    const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\nfunction createErrorWithComponentStack(\n  message: string,\n  componentStack: string\n) {\n  const error = new Error(message)\n  error.stack = 'Error: ' + message + componentStack\n  return error\n}\n\nexport function throwIfDisallowedDynamic(\n  route: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): void {\n  let syncError: null | Error\n  let syncExpression: undefined | string\n  let syncLogged: boolean\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    syncError = serverDynamic.syncDynamicErrorWithStack\n    syncExpression = serverDynamic.syncDynamicExpression!\n    syncLogged = serverDynamic.syncDynamicLogged === true\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    syncError = clientDynamic.syncDynamicErrorWithStack\n    syncExpression = clientDynamic.syncDynamicExpression!\n    syncLogged = clientDynamic.syncDynamicLogged === true\n  } else {\n    syncError = null\n    syncExpression = undefined\n    syncLogged = false\n  }\n\n  if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n    if (!syncLogged) {\n      // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n      // the offending sync error is logged before we exit the build\n      console.error(syncError)\n    }\n    // The actual error should have been logged when the sync access ocurred\n    throw new StaticGenBailoutError()\n  }\n\n  const dynamicErrors = dynamicValidation.dynamicErrors\n  if (dynamicErrors.length) {\n    for (let i = 0; i < dynamicErrors.length; i++) {\n      console.error(dynamicErrors[i])\n    }\n\n    throw new StaticGenBailoutError()\n  }\n\n  if (!dynamicValidation.hasSuspendedDynamic) {\n    if (dynamicValidation.hasDynamicMetadata) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    } else if (dynamicValidation.hasDynamicViewport) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    }\n  }\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(public readonly expression: string) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","import { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport {\n  abortOnSynchronousPlatformIOAccess,\n  trackSynchronousPlatformIOAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\ntype ApiType = 'time' | 'random' | 'crypto'\n\nexport function io(expression: string, type: ApiType) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender') {\n      const prerenderSignal = workUnitStore.controller.signal\n      if (prerenderSignal.aborted === false) {\n        // If the prerender signal is already aborted we don't need to construct any stacks\n        // because something else actually terminated the prerender.\n        const workStore = workAsyncStorage.getStore()\n        if (workStore) {\n          let message: string\n          switch (type) {\n            case 'time':\n              message = `Route \"${workStore.route}\" used ${expression} instead of using \\`performance\\` or without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-current-time`\n              break\n            case 'random':\n              message = `Route \"${workStore.route}\" used ${expression} outside of \\`\"use cache\"\\` and without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-random`\n              break\n            case 'crypto':\n              message = `Route \"${workStore.route}\" used ${expression} outside of \\`\"use cache\"\\` and without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-crypto`\n              break\n            default:\n              throw new InvariantError(\n                'Unknown expression type in abortOnSynchronousPlatformIOAccess.'\n              )\n          }\n          const errorWithStack = new Error(message)\n\n          abortOnSynchronousPlatformIOAccess(\n            workStore.route,\n            expression,\n            errorWithStack,\n            workUnitStore\n          )\n        }\n      }\n    } else if (\n      workUnitStore.type === 'request' &&\n      workUnitStore.prerenderPhase === true\n    ) {\n      const requestStore = workUnitStore\n      trackSynchronousPlatformIOAccessInDev(requestStore)\n    }\n  }\n}\n","/**\n * We extend Math.random() during builds and revalidates to ensure that prerenders don't observe randomness\n * When dynamicIO is enabled. randomness is a form of IO even though it resolves synchronously. When dyanmicIO is\n * enabled we need to ensure that randomness is excluded from prerenders.\n *\n * The extensions here never error nor alter the random generation itself and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nconst expression = '`Math.random()`'\ntry {\n  const _random = Math.random\n  Math.random = function random() {\n    io(expression, 'random')\n    return _random.apply(null, arguments as any)\n\n    // We bind here to alter the `toString` printing to match `Math.random`'s native `toString`.\n    // eslint-disable-next-line no-extra-bind\n  }.bind(null)\n  Object.defineProperty(Math.random, 'name', { value: 'random' })\n} catch {\n  console.error(\n    `Failed to install ${expression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n","/**\n * We extend `Date` during builds and revalidates to ensure that prerenders don't observe the clock as a source of IO\n * When dynamicIO is enabled. The current time is a form of IO even though it resolves synchronously. When dyanmicIO is\n * enabled we need to ensure that clock time is excluded from prerenders unless it is cached.\n *\n * There is tension here because time is used for both output and introspection. While arbitrary we intend to reserve\n * `Date` for output use cases and `performance` for introspection use cases. If you want to measure\n * how long something takes use `performance.timeOrigin` and `performance.now()` rather than `Date.now()` for instance.\n *\n * The extensions here never error nor alter the underlying Date objects, strings, and numbers created and thus should be transparent to callers.\n */\nimport { io } from './utils'\n\nfunction createNow(originalNow: typeof Date.now) {\n  return {\n    now: function now() {\n      io('`Date.now()`', 'time')\n      return originalNow()\n    },\n  }['now'.slice() as 'now'].bind(null)\n}\n\nfunction createDate(originalConstructor: typeof Date): typeof Date {\n  const properties = Object.getOwnPropertyDescriptors(originalConstructor)\n  properties.now.value = createNow(originalConstructor.now)\n\n  const apply = Reflect.apply\n  const construct = Reflect.construct\n\n  const newConstructor = Object.defineProperties(\n    // Ideally this should not minify the name.\n    function Date() {\n      if (new.target === undefined) {\n        io('`Date()`', 'time')\n        return apply(originalConstructor, undefined, arguments)\n      }\n      if (arguments.length === 0) {\n        io('`new Date()`', 'time')\n      }\n      return construct(originalConstructor, arguments, new.target)\n    },\n    properties\n  )\n  Object.defineProperty(originalConstructor.prototype, 'constructor', {\n    value: newConstructor,\n  })\n  return newConstructor as typeof Date\n}\n\ntry {\n  // eslint-disable-next-line no-native-reassign\n  Date = createDate(Date)\n} catch {\n  console.error(\n    'Failed to install `Date` class extension. When using `experimental.dynamicIO`, APIs that read the current time will not correctly trigger dynamic behavior.'\n  )\n}\n","/**\n * We extend node:crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When dynamicIO is enabled. Random bytes are a form of IO even if they resolve synchronously. When dyanmicIO is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  // nothing to patch\n} else {\n  const nodeCrypto = require('node:crypto')\n\n  // require('node:crypto').getRandomValues is an alias for\n  // crypto.getRandomValues which is extended in web-crypto.tsx\n\n  // require('node:crypto').randomUUID is not an alias for crypto.randomUUID\n\n  const randomUUIDExpression = \"`require('node:crypto').randomUUID()`\"\n  try {\n    const _randomUUID = nodeCrypto.randomUUID\n    nodeCrypto.randomUUID = function randomUUID() {\n      io(randomUUIDExpression, 'random')\n      return _randomUUID.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomUUIDExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomBytesExpression = \"`require('node:crypto').randomBytes(size)`\"\n  try {\n    const _randomBytes = nodeCrypto.randomBytes\n    nodeCrypto.randomBytes = function randomBytes() {\n      if (typeof arguments[1] !== 'function') {\n        // randomBytes is sync if the second arg is undefined\n        io(randomBytesExpression, 'random')\n      }\n      return _randomBytes.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomBytesExpression} extension. When using \\`experimental.dynamicIO\\` calling this function without a callback argument will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomFillSyncExpression =\n    \"`require('node:crypto').randomFillSync(...)`\"\n  try {\n    const _randomFillSync = nodeCrypto.randomFillSync\n    nodeCrypto.randomFillSync = function randomFillSync() {\n      io(randomFillSyncExpression, 'random')\n      return _randomFillSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomFillSyncExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomIntExpression = \"`require('node:crypto').randomInt(min, max)`\"\n  try {\n    const _randomInt = nodeCrypto.randomInt\n    nodeCrypto.randomInt = function randomInt() {\n      if (typeof arguments[2] !== 'function') {\n        // randomInt is sync if the third arg is undefined\n        io(randomIntExpression, 'random')\n      }\n      return _randomInt.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomBytesExpression} extension. When using \\`experimental.dynamicIO\\` calling this function without a callback argument will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generatePrimeSyncExpression =\n    \"`require('node:crypto').generatePrimeSync(...)`\"\n  try {\n    const _generatePrimeSync = nodeCrypto.generatePrimeSync\n    nodeCrypto.generatePrimeSync = function generatePrimeSync() {\n      io(generatePrimeSyncExpression, 'random')\n      return _generatePrimeSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generatePrimeSyncExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generateKeyPairSyncExpression =\n    \"`require('node:crypto').generateKeyPairSync(...)`\"\n  try {\n    const _generateKeyPairSync = nodeCrypto.generateKeyPairSync\n    nodeCrypto.generateKeyPairSync = function generateKeyPairSync() {\n      io(generateKeyPairSyncExpression, 'random')\n      return _generateKeyPairSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generateKeyPairSyncExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generateKeySyncExpression =\n    \"`require('node:crypto').generateKeySync(...)`\"\n  try {\n    const _generateKeySync = nodeCrypto.generateKeySync\n    nodeCrypto.generateKeySync = function generateKeySync() {\n      io(generateKeySyncExpression, 'random')\n      return _generateKeySync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generateKeySyncExpression} extension. When using \\`experimental.dynamicIO\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n}\n","// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n\n// This module will only be loaded once per process.\nconst path = require('path')\nconst mod = require('module')\nconst originalRequire = mod.prototype.require\nconst resolveFilename = mod._resolveFilename\n\nlet resolve: typeof require.resolve = process.env.NEXT_MINIMAL\n  ? // @ts-ignore\n    __non_webpack_require__.resolve\n  : require.resolve\n\nexport const hookPropertyMap = new Map()\n\nexport const defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style'),\n}\n\nconst toResolveMap = (map: Record<string, string>): [string, string][] =>\n  Object.entries(map).map(([key, value]) => [key, resolve(value)])\n\nexport function addHookAliases(aliases: [string, string][] = []) {\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value)\n  }\n}\n\naddHookAliases(toResolveMap(defaultOverrides))\n\nmod._resolveFilename = function (\n  originalResolveFilename: (\n    request: string,\n    parent: string,\n    isMain: boolean,\n    opts: any\n  ) => string,\n  requestMap: Map<string, string>,\n  request: string,\n  parent: string,\n  isMain: boolean,\n  options: any\n) {\n  const hookResolved = requestMap.get(request)\n  if (hookResolved) request = hookResolved\n\n  return originalResolveFilename.call(mod, request, parent, isMain, options)\n\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap)\n\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request: string) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(\n      this,\n      `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(\n        request,\n        '.shared-runtime'\n      )}`\n    )\n  }\n\n  return originalRequire.call(this, request)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  return (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the default route matches were set on the request during routing.\n   */\n  didSetDefaultRouteMatches?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import fs from 'fs'\nimport path from 'path'\n\nexport function findDir(dir: string, name: 'pages' | 'app'): string | null {\n  // prioritize ./${name} over ./src/${name}\n  let curDir = path.join(dir, name)\n  if (fs.existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src', name)\n  if (fs.existsSync(curDir)) return curDir\n\n  return null\n}\n\nexport function findPagesDir(dir: string): {\n  pagesDir: string | undefined\n  appDir: string | undefined\n} {\n  const pagesDir = findDir(dir, 'pages') || undefined\n  const appDir = findDir(dir, 'app') || undefined\n\n  if (appDir == null && pagesDir == null) {\n    throw new Error(\n      \"> Couldn't find any `pages` or `app` directory. Please create one under the project root\"\n    )\n  }\n\n  return {\n    pagesDir,\n    appDir,\n  }\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } = require('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { I18NConfig } from '../config-shared'\n\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport type { NextApiRequestCookies } from '../api-utils'\nimport { getCookieParser } from '../api-utils/get-cookie-parser'\n\nexport interface BaseNextRequestConfig {\n  basePath: string | undefined\n  i18n?: I18NConfig\n  trailingSlash?: boolean | undefined\n}\n\nexport type FetchMetric = {\n  url: string\n  idx: number\n  end: number\n  start: number\n  method: string\n  status: number\n  cacheReason: string\n  cacheStatus: 'hit' | 'miss' | 'skip' | 'hmr'\n  cacheWarning?: string\n}\n\nexport type FetchMetrics = Array<FetchMetric>\n\nexport abstract class BaseNextRequest<Body = any> {\n  protected _cookies: NextApiRequestCookies | undefined\n  public abstract headers: IncomingHttpHeaders\n  public abstract fetchMetrics: FetchMetric[] | undefined\n\n  constructor(\n    public method: string,\n    public url: string,\n    public body: Body\n  ) {}\n\n  // Utils implemented using the abstract methods above\n\n  public get cookies() {\n    if (this._cookies) return this._cookies\n    return (this._cookies = getCookieParser(this.headers)())\n  }\n}\n\nexport abstract class BaseNextResponse<Destination = any> {\n  abstract statusCode: number | undefined\n  abstract statusMessage: string | undefined\n  abstract get sent(): boolean\n\n  constructor(public destination: Destination) {}\n\n  /**\n   * Sets a value for the header overwriting existing values\n   */\n  abstract setHeader(name: string, value: string | string[]): this\n\n  /**\n   * Removes a header\n   */\n  abstract removeHeader(name: string): this\n\n  /**\n   * Appends value for the given header name\n   */\n  abstract appendHeader(name: string, value: string): this\n\n  /**\n   * Get all values for a header as an array or undefined if no value is present\n   */\n  abstract getHeaderValues(name: string): string[] | undefined\n\n  abstract hasHeader(name: string): boolean\n\n  /**\n   * Get values for a header concatenated using `,` or undefined if no value is present\n   */\n  abstract getHeader(name: string): string | undefined\n\n  abstract getHeaders(): OutgoingHttpHeaders\n\n  abstract body(value: string): this\n\n  abstract send(): void\n\n  abstract onClose(callback: () => void): void\n\n  // Utils implemented using the abstract methods above\n\n  public redirect(destination: string, statusCode: number) {\n    this.setHeader('Location', destination)\n    this.statusCode = statusCode\n\n    // Since IE11 doesn't support the 308 header add backwards\n    // compatibility using refresh header\n    if (statusCode === RedirectStatusCode.PermanentRedirect) {\n      this.setHeader('Refresh', `0;url=${destination}`)\n    }\n\n    return this\n  }\n}\n","import type { ServerResponse, IncomingMessage } from 'http'\nimport type { Writable, Readable } from 'stream'\n\nimport { SYMBOL_CLEARED_COOKIES } from '../api-utils'\nimport type { NextApiRequestCookies } from '../api-utils'\n\nimport { NEXT_REQUEST_META } from '../request-meta'\nimport type { RequestMeta } from '../request-meta'\n\nimport { BaseNextRequest, BaseNextResponse, type FetchMetric } from './index'\nimport type { OutgoingHttpHeaders } from 'node:http'\n\ntype Req = IncomingMessage & {\n  [NEXT_REQUEST_META]?: RequestMeta\n  cookies?: NextApiRequestCookies\n  fetchMetrics?: FetchMetric[]\n}\n\nexport class NodeNextRequest extends BaseNextRequest<Readable> {\n  public headers = this._req.headers\n  public fetchMetrics: FetchMetric[] | undefined = this._req?.fetchMetrics;\n\n  [NEXT_REQUEST_META]: RequestMeta = this._req[NEXT_REQUEST_META] || {}\n\n  constructor(private _req: Req) {\n    super(_req.method!.toUpperCase(), _req.url!, _req)\n  }\n\n  get originalRequest() {\n    // Need to mimic these changes to the original req object for places where we use it:\n    // render.tsx, api/ssg requests\n    this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META]\n    this._req.url = this.url\n    this._req.cookies = this.cookies\n    return this._req\n  }\n\n  set originalRequest(value: Req) {\n    this._req = value\n  }\n\n  private streaming = false\n\n  /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */\n  public stream() {\n    if (this.streaming) {\n      throw new Error(\n        'Invariant: NodeNextRequest.stream() can only be called once'\n      )\n    }\n    this.streaming = true\n\n    return new ReadableStream({\n      start: (controller) => {\n        this._req.on('data', (chunk) => {\n          controller.enqueue(new Uint8Array(chunk))\n        })\n        this._req.on('end', () => {\n          controller.close()\n        })\n        this._req.on('error', (err) => {\n          controller.error(err)\n        })\n      },\n    })\n  }\n}\n\nexport class NodeNextResponse extends BaseNextResponse<Writable> {\n  private textBody: string | undefined = undefined\n\n  public [SYMBOL_CLEARED_COOKIES]?: boolean\n\n  get originalResponse() {\n    if (SYMBOL_CLEARED_COOKIES in this) {\n      this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES]\n    }\n\n    return this._res\n  }\n\n  constructor(\n    private _res: ServerResponse & { [SYMBOL_CLEARED_COOKIES]?: boolean }\n  ) {\n    super(_res)\n  }\n\n  get sent() {\n    return this._res.finished || this._res.headersSent\n  }\n\n  get statusCode() {\n    return this._res.statusCode\n  }\n\n  set statusCode(value: number) {\n    this._res.statusCode = value\n  }\n\n  get statusMessage() {\n    return this._res.statusMessage\n  }\n\n  set statusMessage(value: string) {\n    this._res.statusMessage = value\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this._res.setHeader(name, value)\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this._res.removeHeader(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    const values = this._res.getHeader(name)\n\n    if (values === undefined) return undefined\n\n    return (Array.isArray(values) ? values : [values]).map((value) =>\n      value.toString()\n    )\n  }\n\n  hasHeader(name: string): boolean {\n    return this._res.hasHeader(name)\n  }\n\n  getHeader(name: string): string | undefined {\n    const values = this.getHeaderValues(name)\n    return Array.isArray(values) ? values.join(',') : undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return this._res.getHeaders()\n  }\n\n  appendHeader(name: string, value: string): this {\n    const currentValues = this.getHeaderValues(name) ?? []\n\n    if (!currentValues.includes(value)) {\n      this._res.setHeader(name, [...currentValues, value])\n    }\n\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  send() {\n    this._res.end(this.textBody)\n  }\n\n  public onClose(callback: () => void) {\n    this.originalResponse.on('close', callback)\n  }\n}\n","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { CacheControl } from './lib/cache-control'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { getCacheControlHeader } from './lib/cache-control'\nimport { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  type,\n  generateEtags,\n  poweredByHeader,\n  cacheControl,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  type: 'html' | 'json' | 'rsc'\n  generateEtags: boolean\n  poweredByHeader: boolean\n  cacheControl: CacheControl | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && type === 'html') {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  // If cache control is already set on the response we don't\n  // override it to allow users to customize it via next.config\n  if (cacheControl && !res.getHeader('Cache-Control')) {\n    res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (generateEtags && payload !== null) {\n    const etag = generateETag(payload)\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader(\n      'Content-Type',\n      result.contentType\n        ? result.contentType\n        : type === 'rsc'\n          ? RSC_CONTENT_TYPE_HEADER\n          : type === 'json'\n            ? 'application/json'\n            : 'text/html; charset=utf-8'\n    )\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","export class LRUCache<T> {\n  private cache: Map<string, T>\n  private sizes: Map<string, number>\n  private totalSize: number\n  private maxSize: number\n  private calculateSize: (value: T) => number\n\n  constructor(maxSize: number, calculateSize?: (value: T) => number) {\n    this.cache = new Map()\n    this.sizes = new Map()\n    this.totalSize = 0\n    this.maxSize = maxSize\n    this.calculateSize = calculateSize || (() => 1)\n  }\n\n  set(key?: string | null, value?: T): void {\n    if (!key || !value) return\n\n    const size = this.calculateSize(value)\n\n    if (size > this.maxSize) {\n      console.warn('Single item size exceeds maxSize')\n      return\n    }\n\n    if (this.cache.has(key)) {\n      this.totalSize -= this.sizes.get(key) || 0\n    }\n\n    this.cache.set(key, value)\n    this.sizes.set(key, size)\n    this.totalSize += size\n\n    this.touch(key)\n  }\n\n  has(key?: string | null): boolean {\n    if (!key) return false\n\n    this.touch(key)\n    return Boolean(this.cache.get(key))\n  }\n\n  get(key?: string | null): T | undefined {\n    if (!key) return\n\n    const value = this.cache.get(key)\n    if (value === undefined) {\n      return undefined\n    }\n\n    this.touch(key)\n    return value\n  }\n\n  private touch(key: string): void {\n    const value = this.cache.get(key)\n    if (value !== undefined) {\n      this.cache.delete(key)\n      this.cache.set(key, value)\n      this.evictIfNecessary()\n    }\n  }\n\n  private evictIfNecessary(): void {\n    while (this.totalSize > this.maxSize && this.cache.size > 0) {\n      this.evictLeastRecentlyUsed()\n    }\n  }\n\n  private evictLeastRecentlyUsed(): void {\n    const lruKey = this.cache.keys().next().value\n    if (lruKey !== undefined) {\n      const lruSize = this.sizes.get(lruKey) || 0\n      this.totalSize -= lruSize\n      this.cache.delete(lruKey)\n      this.sizes.delete(lruKey)\n    }\n  }\n\n  reset() {\n    this.cache.clear()\n    this.sizes.clear()\n    this.totalSize = 0\n  }\n\n  keys() {\n    return [...this.cache.keys()]\n  }\n\n  remove(key: string): void {\n    if (this.cache.has(key)) {\n      this.totalSize -= this.sizes.get(key) || 0\n      this.cache.delete(key)\n      this.sizes.delete(key)\n    }\n  }\n\n  clear(): void {\n    this.cache.clear()\n    this.sizes.clear()\n    this.totalSize = 0\n  }\n\n  get size(): number {\n    return this.cache.size\n  }\n\n  get currentSize(): number {\n    return this.totalSize\n  }\n}\n","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\nimport { LRUCache } from '../../server/lib/lru-cache'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    // Ensure if there's ANSI escape codes it's concatenated into one string.\n    // Chrome DevTool can only handle color if it's in one string.\n    if (message.length === 1 && typeof message[0] === 'string') {\n      console[consoleMethod](' ' + prefix + ' ' + message[0])\n    } else {\n      console[consoleMethod](' ' + prefix, ...message)\n    }\n  }\n}\n\nexport function bootstrap(...message: string[]) {\n  // logging format: ' <prefix> <message>'\n  // e.g. ' ✓ Compiled successfully'\n  // Add spaces to align with the indent of other logs\n  console.log('   ' + message.join(' '))\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceCache = new LRUCache<string>(10_000, (value) => value.length)\nexport function warnOnce(...message: any[]) {\n  const key = message.join(' ')\n  if (!warnOnceCache.has(key)) {\n    warnOnceCache.set(key, key)\n    warn(...message)\n  }\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  isFallback: boolean | undefined\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n  isFallback: boolean | undefined\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n","import { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encodedTags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\nexport type ReactReadableStream = ReadableStream<Uint8Array> & {\n  allReady?: Promise<void> | undefined\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // We could encode this invariant in the arguments but current uses of this function pass\n  // use spread so it would be missed by\n  if (streams.length === 0) {\n    throw new Error('Invariant: chainStreams requires at least one stream')\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n\n  while (true) {\n    const { done, value } = await reader.read()\n    if (done) {\n      break\n    }\n\n    chunks.push(value)\n  }\n\n  return Buffer.concat(chunks)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>,\n  signal?: AbortSignal\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    if (signal?.aborted) {\n      return string\n    }\n\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: typeof import('react-dom/server.edge')\n  element: React.ReactElement\n  streamOptions?: Parameters<typeof ReactDOMServer.renderToReadableStream>[1]\n}): Promise<ReactReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n\n      const insertion = await insert()\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            // Get the total count of the bytes in the chunk and the insertion\n            // e.g.\n            // chunk = <head><meta charset=\"utf-8\"></head>\n            // insertion = <script>...</script>\n            // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            // Append the first part of the chunk, before the head tag\n            insertedHeadContent.set(chunk.slice(0, index))\n            // Append the server inserted content\n            insertedHeadContent.set(encodedInsertion, index)\n            // Append the rest of the chunk\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          inserted = true\n        } else {\n          // This will happens in PPR rendering during next start, when the page is partially rendered.\n          // When the page resumes, the head tag will be found in the middle of the chunk.\n          // Where we just need to append the insertion and chunk to the current stream.\n          // e.g.\n          // PPR-static: <head>...</head><body> [ resume content ] </body>\n          // PPR-resume: [ insertion ] [ rest content ]\n          if (insertion) {\n            controller.enqueue(encoder.encode(insertion))\n          }\n          controller.enqueue(chunk)\n          inserted = true\n        }\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(\n  stream: ReadableStream<Uint8Array>\n): TransformStream<Uint8Array, Uint8Array> {\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    if (pull) {\n      return\n    }\n\n    const reader = stream.getReader()\n\n    // NOTE: streaming flush\n    // We are buffering here for the inlined data stream because the\n    // \"shell\" stream might be chunkenized again by the underlying stream\n    // implementation, e.g. with a specific high-water mark. To ensure it's\n    // the safe timing to pipe the data stream, this extra tick is\n    // necessary.\n\n    // We don't start reading until we've left the current Task to ensure\n    // that it's inserted after flushing the shell. Note that this implementation\n    // might get stale if impl details of Fizz change in the future.\n    await atLeastOneTask()\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (!pull) {\n        pull = startPulling(controller)\n      }\n    },\n    flush(controller) {\n      if (donePulling) {\n        return\n      }\n      return pull || startPulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: ('html' | 'body')[] = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags\n                .map((c) => `<${c}>`)\n                .join(\n                  missingTags.length > 1 ? ' and ' : ''\n                )} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML and there's an `allReady` promise on the\n  // stream, we need to wait for it to resolve before continuing.\n  if (isStaticGeneration && 'allReady' in renderStream) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Insert generated metadata\n    createHeadInsertionTransformStream(getServerInsertedMetadata),\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    createHeadInsertionTransformStream(getServerInsertedHTML),\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert generated metadata\n      .pipeThrough(\n        createHeadInsertionTransformStream(getServerInsertedMetadata)\n      )\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert generated metadata to head\n      .pipeThrough(\n        createHeadInsertionTransformStream(getServerInsertedMetadata)\n      )\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert generated metadata to body\n      .pipeThrough(\n        createHeadInsertionTransformStream(getServerInsertedMetadata)\n      )\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport function createDocumentClosingStream(): ReadableStream<Uint8Array> {\n  return streamFromString(CLOSE_TAG)\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n} as const\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest, BaseNextResponse } from './'\nimport type { NodeNextRequest, NodeNextResponse } from './node'\nimport type { WebNextRequest, WebNextResponse } from './web'\n\n/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */\n\n/**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */\nexport const isWebNextRequest = (req: BaseNextRequest): req is WebNextRequest =>\n  process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */\nexport const isWebNextResponse = (\n  res: BaseNextResponse\n): res is WebNextResponse => process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */\nexport const isNodeNextRequest = (\n  req: BaseNextRequest\n): req is NodeNextRequest => process.env.NEXT_RUNTIME !== 'edge'\n\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */\nexport const isNodeNextResponse = (\n  res: BaseNextResponse\n): res is NodeNextResponse => process.env.NEXT_RUNTIME !== 'edge'\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToBuffer,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\n\ntype ContentTypeOption = string | undefined\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the cache is warmed up before the render. This is attached\n   * to the metadata so that it can be used during the render.\n   */\n  devRenderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType?: ContentTypeOption\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(value: string | Buffer) {\n    return new RenderResult<StaticRenderResultMetadata>(value, { metadata: {} })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  public toUnchunkedBuffer(stream?: false): Buffer\n  public toUnchunkedBuffer(stream: true): Promise<Buffer>\n  public toUnchunkedBuffer(stream = false): Promise<Buffer> | Buffer {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToBuffer(this.readable)\n    }\n\n    return Buffer.from(this.response)\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be streamed')\n    }\n    if (typeof this.response === 'string') {\n      throw new Error('Invariant: static responses cannot be streamed')\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public chain(readable: ReadableStream<Uint8Array>) {\n    if (this.response === null) {\n      throw new Error('Invariant: response is null. This is a bug in Next.js')\n    }\n\n    // If the response is not an array of streams already, make it one.\n    let responses: ReadableStream<Uint8Array>[]\n    if (typeof this.response === 'string') {\n      responses = [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      responses = this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      responses = [streamFromBuffer(this.response)]\n    } else {\n      responses = [this.response]\n    }\n\n    // Add the new stream to the array.\n    responses.push(readable)\n\n    // Update the response.\n    this.response = responses\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    isFallback: response.isFallback,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(response.value.html),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    default:\n      throw new Error(`Unexpected route kind ${routeKind}`)\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  private minimalMode?: boolean\n\n  constructor(minimalMode: boolean) {\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({ hasResolved: false, previousCacheEntry: null })\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n    } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      async (cacheKey, resolve) => {\n        // We keep the previous cache entry around to leverage when the\n        // incremental cache is disabled in minimal mode.\n        if (\n          this.minimalMode &&\n          this.previousCacheItem?.key === cacheKey &&\n          this.previousCacheItem.expiresAt > Date.now()\n        ) {\n          return this.previousCacheItem.entry\n        }\n\n        // Coerce the kindHint into a given kind for the incremental cache.\n        const kind = routeKindToIncrementalCacheKind(context.routeKind)\n\n        let resolved = false\n        let cachedResponse: IncrementalResponseCacheEntry | null = null\n        try {\n          cachedResponse = !this.minimalMode\n            ? await incrementalCache.get(key, {\n                kind,\n                isRoutePPREnabled: context.isRoutePPREnabled,\n                isFallback,\n              })\n            : null\n\n          if (cachedResponse && !isOnDemandRevalidate) {\n            resolve(cachedResponse)\n            resolved = true\n\n            if (!cachedResponse.isStale || context.isPrefetch) {\n              // The cached value is still valid, so we don't need\n              // to update it yet.\n              return null\n            }\n          }\n\n          const cacheEntry = await responseGenerator({\n            hasResolved: resolved,\n            previousCacheEntry: cachedResponse,\n            isRevalidating: true,\n          })\n\n          // If the cache entry couldn't be generated, we don't want to cache\n          // the result.\n          if (!cacheEntry) {\n            // Unset the previous cache item if it was set.\n            if (this.minimalMode) this.previousCacheItem = undefined\n            return null\n          }\n\n          const resolveValue = await fromResponseCacheEntry({\n            ...cacheEntry,\n            isMiss: !cachedResponse,\n          })\n          if (!resolveValue) {\n            // Unset the previous cache item if it was set.\n            if (this.minimalMode) this.previousCacheItem = undefined\n            return null\n          }\n\n          // For on-demand revalidate wait to resolve until cache is set.\n          // Otherwise resolve now.\n          if (!isOnDemandRevalidate && !resolved) {\n            resolve(resolveValue)\n            resolved = true\n          }\n\n          // We want to persist the result only if it has a cache control value\n          // defined.\n          if (resolveValue.cacheControl) {\n            if (this.minimalMode) {\n              this.previousCacheItem = {\n                key: cacheKey,\n                entry: resolveValue,\n                expiresAt: Date.now() + 1000,\n              }\n            } else {\n              await incrementalCache.set(key, resolveValue.value, {\n                cacheControl: resolveValue.cacheControl,\n                isRoutePPREnabled,\n                isFallback,\n              })\n            }\n          }\n\n          return resolveValue\n        } catch (err) {\n          // When a path is erroring we automatically re-set the existing cache\n          // with new revalidate and expire times to prevent non-stop retrying.\n          if (cachedResponse?.cacheControl) {\n            const newRevalidate = Math.min(\n              Math.max(cachedResponse.cacheControl.revalidate || 3, 3),\n              30\n            )\n\n            const newExpire =\n              cachedResponse.cacheControl.expire === undefined\n                ? undefined\n                : Math.max(\n                    newRevalidate + 3,\n                    cachedResponse.cacheControl.expire\n                  )\n\n            await incrementalCache.set(key, cachedResponse.value, {\n              cacheControl: { revalidate: newRevalidate, expire: newExpire },\n              isRoutePPREnabled,\n              isFallback,\n            })\n          }\n\n          // While revalidating in the background we can't reject as we already\n          // resolved the cache entry so log the error here.\n          if (resolved) {\n            console.error(err)\n            return null\n          }\n\n          // We haven't resolved yet, so let's throw to indicate an error.\n          throw err\n        }\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})'\nconst IPv6Reg = new RegExp(\n  '^(' +\n    `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n    `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n    `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n    `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n    `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n    `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n    ')(%[0-9a-zA-Z-.:]{1,})?$'\n)\n\nexport function isIPv6(s: string) {\n  return IPv6Reg.test(s)\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/shared/lib/runtime-config.external.js\");","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\nexport const HTML_LIMITED_BOT_UA_RE =\n  /Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS\nconst HEADLESS_BROWSER_BOT_UA_RE =\n  /Googlebot|Google-PageRenderer|AdsBot-Google|googleweblight|Storebot-Google/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  const parsedDestination = parseDestination(args)\n\n  const { hostname: destHostname, query: destQuery } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    pathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = compile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\nimport { normalizeNextQueryParam } from './web/utils'\nimport type { IncomingHttpHeaders } from 'http'\n\nexport function normalizeVercelUrl(\n  req: BaseNextRequest,\n  paramKeys: string[],\n  defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  // make sure to normalize req.url on Vercel to strip dynamic and rewrite\n  // params from the query which are added during routing\n  const _parsedUrl = parseUrl(req.url!, true)\n  delete (_parsedUrl as any).search\n\n  for (const key of Object.keys(_parsedUrl.query)) {\n    const isNextQueryPrefix =\n      key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n    const isNextInterceptionMarkerPrefix =\n      key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n      key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n    if (\n      isNextQueryPrefix ||\n      isNextInterceptionMarkerPrefix ||\n      paramKeys.includes(key) ||\n      (defaultRouteRegex && Object.keys(defaultRouteRegex.groups).includes(key))\n    ) {\n      delete _parsedUrl.query[key]\n    }\n  }\n\n  req.url = formatUrl(_parsedUrl)\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    let paramValue: string\n    const value = params[param]\n\n    if (Array.isArray(value)) {\n      paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n    } else if (value) {\n      paramValue = encodeURIComponent(value)\n    } else {\n      paramValue = ''\n    }\n\n    pathname = pathname.replaceAll(builtParam, paramValue)\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  query: ParsedUrlQuery,\n  defaultRouteRegex: ReturnType<typeof getNamedRouteRegex>,\n  defaultRouteMatches: ParsedUrlQuery,\n  ignoreMissingOptional: boolean\n) {\n  let hasValidParams = true\n  let params: ParsedUrlQuery = {}\n\n  for (const key of Object.keys(defaultRouteRegex.groups)) {\n    let value: string | string[] | undefined = query[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    } else if (Array.isArray(value)) {\n      value = value.map(normalizeRscURL)\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreMissingOptional))\n    ) {\n      return { params: {}, hasValidParams: false }\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)))\n    ) {\n      value = undefined\n      delete query[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      params[key] = value\n    }\n  }\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: {\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, {\n      prefixRouteKeys: false,\n    })\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(req: BaseNextRequest, parsedUrl: UrlWithParsedQuery) {\n    const rewriteParams = {}\n    let fsPathname = parsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: Rewrite): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n\n      if (!parsedUrl.pathname) return false\n\n      let params = matcher(parsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          rewrite.has,\n          rewrite.missing\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: parsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(parsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        Object.assign(parsedUrl, parsedDestination)\n\n        fsPathname = parsedUrl.pathname\n        if (!fsPathname) return false\n\n        if (basePath) {\n          fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const result = normalizeLocalePath(fsPathname, i18n.locales)\n          fsPathname = result.pathname\n          parsedUrl.query.nextInternalLocale =\n            result.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            parsedUrl.query = {\n              ...parsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n    return rewriteParams\n  }\n\n  function getParamsFromRouteMatches(routeMatchesHeader: string) {\n    // If we don't have a default route regex, we can't get params from route\n    // matches\n    if (!defaultRouteRegex) return null\n\n    const { groups, routeKeys } = defaultRouteRegex\n\n    const matcher = getRouteMatcher({\n      re: {\n        // Simulate a RegExp match from the \\`req.url\\` input\n        exec: (str: string) => {\n          // Normalize all the prefixed query params.\n          const obj: Record<string, string> = Object.fromEntries(\n            new URLSearchParams(str)\n          )\n          for (const [key, value] of Object.entries(obj)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            obj[normalizedKey] = value\n            delete obj[key]\n          }\n\n          // Use all the named route keys.\n          const result = {} as RegExpExecArray\n          for (const keyName of Object.keys(routeKeys)) {\n            const paramName = routeKeys[keyName]\n\n            // If this param name is not a valid parameter name, then skip it.\n            if (!paramName) continue\n\n            const group = groups[paramName]\n            const value = obj[keyName]\n\n            // When we're missing a required param, we can't match the route.\n            if (!group.optional && !value) return null\n\n            result[group.pos] = value\n          }\n\n          return result\n        },\n      },\n      groups,\n    })\n\n    const routeMatches = matcher(routeMatchesHeader)\n    if (!routeMatches) return null\n\n    return routeMatches\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    getParamsFromRouteMatches,\n    /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */\n    normalizeDynamicRouteParams: (\n      query: ParsedUrlQuery,\n      ignoreMissingOptional: boolean\n    ) => {\n      if (!defaultRouteRegex || !defaultRouteMatches) {\n        return { params: {}, hasValidParams: false }\n      }\n\n      return normalizeDynamicRouteParams(\n        query,\n        defaultRouteRegex,\n        defaultRouteMatches,\n        ignoreMissingOptional\n      )\n    },\n    normalizeVercelUrl: (req: BaseNextRequest, paramKeys: string[]) =>\n      normalizeVercelUrl(req, paramKeys, defaultRouteRegex),\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n  }\n}\n\nexport function getPreviouslyRevalidatedTags(\n  headers: IncomingHttpHeaders,\n  previewModeId: string | undefined\n): string[] {\n  return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n    headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId\n    ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    : []\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Next.js errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nfunction safeStringify(obj: any) {\n  const seen = new WeakSet()\n\n  return JSON.stringify(obj, (_key, value) => {\n    // If value is an object and already seen, replace with \"[Circular]\"\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]'\n      }\n      seen.add(value)\n    }\n    return value\n  })\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? safeStringify(err) : err + '')\n}\n","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import type { I18NProvider } from '../lib/i18n-provider'\nimport type { Normalizer } from './normalizer'\n\n/**\n * Normalizes the pathname by removing the locale prefix if any.\n */\nexport class LocaleRouteNormalizer implements Normalizer {\n  constructor(private readonly provider: I18NProvider) {}\n\n  /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */\n  public normalize(pathname: string): string {\n    const match = this.provider.analyze(pathname)\n    return match.pathname\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { Params } from '../request/params'\n\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  getRouteMatcher,\n  type RouteMatchFn,\n} from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\ntype RouteMatchResult = {\n  params?: Params\n}\n\nexport class RouteMatcher<D extends RouteDefinition = RouteDefinition> {\n  private readonly dynamic?: RouteMatchFn\n\n  /**\n   * When set, this is an array of all the other matchers that are duplicates of\n   * this one. This is used by the managers to warn the users about possible\n   * duplicate matches on routes.\n   */\n  public duplicated?: Array<RouteMatcher>\n\n  constructor(public readonly definition: D) {\n    if (isDynamicRoute(definition.pathname)) {\n      this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname))\n    }\n  }\n\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */\n  public get identity(): string {\n    return this.definition.pathname\n  }\n\n  public get isDynamic() {\n    return this.dynamic !== undefined\n  }\n\n  public match(pathname: string): RouteMatch<D> | null {\n    const result = this.test(pathname)\n    if (!result) return null\n\n    return { definition: this.definition, params: result.params }\n  }\n\n  public test(pathname: string): RouteMatchResult | null {\n    if (this.dynamic) {\n      const params = this.dynamic(pathname)\n      if (!params) return null\n\n      return { params }\n    }\n\n    if (pathname === this.definition.pathname) {\n      return {}\n    }\n\n    return null\n  }\n}\n","import type { LocaleAnalysisResult } from '../lib/i18n-provider'\nimport type { LocaleRouteDefinition } from '../route-definitions/locale-route-definition'\nimport type { LocaleRouteMatch } from '../route-matches/locale-route-match'\nimport { RouteMatcher } from './route-matcher'\n\nexport type LocaleMatcherMatchOptions = {\n  /**\n   * If defined, this indicates to the matcher that the request should be\n   * treated as locale-aware. If this is undefined, it means that this\n   * application was not configured for additional locales.\n   */\n  i18n?: LocaleAnalysisResult\n}\n\nexport class LocaleRouteMatcher<\n  D extends LocaleRouteDefinition = LocaleRouteDefinition,\n> extends RouteMatcher<D> {\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextLocale=${this.definition.i18n?.locale}`\n  }\n\n  /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public match(\n    pathname: string,\n    options?: LocaleMatcherMatchOptions\n  ): LocaleRouteMatch<D> | null {\n    // This is like the parent `match` method but instead this injects the\n    // additional `options` into the\n    const result = this.test(pathname, options)\n    if (!result) return null\n\n    return {\n      definition: this.definition,\n      params: result.params,\n      detectedLocale:\n        // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        options?.i18n?.detectedLocale ?? this.definition.i18n?.locale,\n    }\n  }\n\n  /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public test(pathname: string, options?: LocaleMatcherMatchOptions) {\n    // If this route has locale information and we have detected a locale, then\n    // we need to compare the detected locale to the route's locale.\n    if (this.definition.i18n && options?.i18n) {\n      // If we have detected a locale and it does not match this route's locale,\n      // then this isn't a match!\n      if (\n        this.definition.i18n.locale &&\n        options.i18n.detectedLocale &&\n        this.definition.i18n.locale !== options.i18n.detectedLocale\n      ) {\n        return null\n      }\n\n      // Perform regular matching against the locale stripped pathname now, the\n      // locale information matches!\n      return super.test(options.i18n.pathname)\n    }\n\n    // If we don't have locale information, then we can just perform regular\n    // matching.\n    return super.test(pathname)\n  }\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils'\nimport type { RouteKind } from '../route-kind'\nimport type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { RouteMatcherProvider } from '../route-matcher-providers/route-matcher-provider'\nimport type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type { MatchOptions, RouteMatcherManager } from './route-matcher-manager'\nimport { getSortedRoutes } from '../../shared/lib/router/utils'\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { DetachedPromise } from '../../lib/detached-promise'\n\ninterface RouteMatchers {\n  static: ReadonlyArray<RouteMatcher>\n  dynamic: ReadonlyArray<RouteMatcher>\n  duplicates: Record<string, ReadonlyArray<RouteMatcher>>\n}\n\nexport class DefaultRouteMatcherManager implements RouteMatcherManager {\n  private readonly providers: Array<RouteMatcherProvider> = []\n  protected readonly matchers: RouteMatchers = {\n    static: [],\n    dynamic: [],\n    duplicates: {},\n  }\n  private lastCompilationID = this.compilationID\n\n  /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */\n  private get compilationID() {\n    return this.providers.length\n  }\n\n  private waitTillReadyPromise?: Promise<void>\n  public async waitTillReady(): Promise<void> {\n    if (this.waitTillReadyPromise) {\n      await this.waitTillReadyPromise\n      delete this.waitTillReadyPromise\n    }\n  }\n\n  private previousMatchers: ReadonlyArray<RouteMatcher> = []\n  public async reload() {\n    const { promise, resolve, reject } = new DetachedPromise<void>()\n    this.waitTillReadyPromise = promise\n\n    // Grab the compilation ID for this run, we'll verify it at the end to\n    // ensure that if any routes were added before reloading is finished that\n    // we error out.\n    const compilationID = this.compilationID\n\n    try {\n      // Collect all the matchers from each provider.\n      const matchers: Array<RouteMatcher> = []\n\n      // Get all the providers matchers.\n      const providersMatchers: ReadonlyArray<ReadonlyArray<RouteMatcher>> =\n        await Promise.all(this.providers.map((provider) => provider.matchers()))\n\n      // Use this to detect duplicate pathnames.\n      const all = new Map<string, RouteMatcher>()\n      const duplicates: Record<string, RouteMatcher[]> = {}\n      for (const providerMatchers of providersMatchers) {\n        for (const matcher of providerMatchers) {\n          // Reset duplicated matches when reloading from pages conflicting state.\n          if (matcher.duplicated) delete matcher.duplicated\n          // Test to see if the matcher being added is a duplicate.\n          const duplicate = all.get(matcher.definition.pathname)\n          if (duplicate) {\n            // This looks a little weird, but essentially if the pathname\n            // already exists in the duplicates map, then we got that array\n            // reference. Otherwise, we create a new array with the original\n            // duplicate first. Then we push the new matcher into the duplicate\n            // array, and reset it to the duplicates object (which may be a\n            // no-op if the pathname already existed in the duplicates object).\n            // Then we set the array of duplicates on both the original\n            // duplicate object and the new one, so we can keep them in sync.\n            // If a new duplicate is found, and it matches an existing pathname,\n            // the retrieval of the `other` will actually return the array\n            // reference used by all other duplicates. This is why ReadonlyArray\n            // is so important! Array's are always references!\n            const others = duplicates[matcher.definition.pathname] ?? [\n              duplicate,\n            ]\n            others.push(matcher)\n            duplicates[matcher.definition.pathname] = others\n\n            // Add duplicated details to each route.\n            duplicate.duplicated = others\n            matcher.duplicated = others\n\n            // TODO: see if we should error for duplicates in production?\n          }\n\n          matchers.push(matcher)\n\n          // Add the matcher's pathname to the set.\n          all.set(matcher.definition.pathname, matcher)\n        }\n      }\n\n      // Update the duplicate matchers. This is used in the development manager\n      // to warn about duplicates.\n      this.matchers.duplicates = duplicates\n\n      // If the cache is the same as what we just parsed, we can exit now. We\n      // can tell by using the `===` which compares object identity, which for\n      // the manifest matchers, will return the same matcher each time.\n      if (\n        this.previousMatchers.length === matchers.length &&\n        this.previousMatchers.every(\n          (cachedMatcher, index) => cachedMatcher === matchers[index]\n        )\n      ) {\n        return\n      }\n      this.previousMatchers = matchers\n\n      // For matchers that are for static routes, filter them now.\n      this.matchers.static = matchers.filter((matcher) => !matcher.isDynamic)\n\n      // For matchers that are for dynamic routes, filter them and sort them now.\n      const dynamic = matchers.filter((matcher) => matcher.isDynamic)\n\n      // As `getSortedRoutes` only takes an array of strings, we need to create\n      // a map of the pathnames (used for sorting) and the matchers. When we\n      // have locales, there may be multiple matches for the same pathname. To\n      // handle this, we keep a map of all the indexes (in `reference`) and\n      // merge them in later.\n\n      const reference = new Map<string, number[]>()\n      const pathnames = new Array<string>()\n      for (let index = 0; index < dynamic.length; index++) {\n        // Grab the pathname from the definition.\n        const pathname = dynamic[index].definition.pathname\n\n        // Grab the index in the dynamic array, push it into the reference.\n        const indexes = reference.get(pathname) ?? []\n        indexes.push(index)\n\n        // If this is the first one set it. If it isn't, we don't need to\n        // because pushing above on the array will mutate the array already\n        // stored there because array's are always a reference!\n        if (indexes.length === 1) reference.set(pathname, indexes)\n        // Otherwise, continue, we've already added this pathname before.\n        else continue\n\n        pathnames.push(pathname)\n      }\n\n      // Sort the array of pathnames.\n      const sorted = getSortedRoutes(pathnames)\n\n      // For each of the sorted pathnames, iterate over them, grabbing the list\n      // of indexes and merging them back into the new `sortedDynamicMatchers`\n      // array. The order of the same matching pathname doesn't matter because\n      // they will have other matching characteristics (like the locale) that\n      // is considered.\n      const sortedDynamicMatchers: Array<RouteMatcher> = []\n      for (const pathname of sorted) {\n        const indexes = reference.get(pathname)\n        if (!Array.isArray(indexes)) {\n          throw new Error('Invariant: expected to find identity in indexes map')\n        }\n\n        const dynamicMatches = indexes.map((index) => dynamic[index])\n\n        sortedDynamicMatchers.push(...dynamicMatches)\n      }\n\n      this.matchers.dynamic = sortedDynamicMatchers\n\n      // This means that there was a new matcher pushed while we were waiting\n      if (this.compilationID !== compilationID) {\n        throw new Error(\n          'Invariant: expected compilation to finish before new matchers were added, possible missing await'\n        )\n      }\n    } catch (err) {\n      reject(err)\n    } finally {\n      // The compilation ID matched, so mark the complication as finished.\n      this.lastCompilationID = compilationID\n      resolve()\n    }\n  }\n\n  public push(provider: RouteMatcherProvider): void {\n    this.providers.push(provider)\n  }\n\n  public async test(pathname: string, options: MatchOptions): Promise<boolean> {\n    // See if there's a match for the pathname...\n    const match = await this.match(pathname, options)\n\n    // This default implementation only needs to check to see if there _was_ a\n    // match. The development matcher actually changes it's behavior by not\n    // recompiling the routes.\n    return match !== null\n  }\n\n  public async match(\n    pathname: string,\n    options: MatchOptions\n  ): Promise<RouteMatch<RouteDefinition<RouteKind>> | null> {\n    // \"Iterate\" over the match options. Once we found a single match, exit with\n    // it, otherwise return null below. If no match is found, the inner block\n    // won't be called.\n    for await (const match of this.matchAll(pathname, options)) {\n      return match\n    }\n\n    return null\n  }\n\n  /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */\n  protected validate(\n    pathname: string,\n    matcher: RouteMatcher,\n    options: MatchOptions\n  ): RouteMatch | null {\n    if (matcher instanceof LocaleRouteMatcher) {\n      return matcher.match(pathname, options)\n    }\n\n    // If the locale was inferred from the default locale, then it will have\n    // already added a locale to the pathname. We need to remove it before\n    // matching because this matcher is not locale aware.\n    if (options.i18n?.inferredFromDefault) {\n      return matcher.match(options.i18n.pathname)\n    }\n\n    return matcher.match(pathname)\n  }\n\n  public async *matchAll(\n    pathname: string,\n    options: MatchOptions\n  ): AsyncGenerator<RouteMatch<RouteDefinition<RouteKind>>, null, undefined> {\n    // Guard against the matcher manager from being run before it needs to be\n    // recompiled. This was preferred to re-running the compilation here because\n    // it should be re-ran only when it changes. If a match is attempted before\n    // this is done, it indicates that there is a case where a provider is added\n    // before it was recompiled (an error). We also don't want to affect request\n    // times.\n    if (this.lastCompilationID !== this.compilationID) {\n      throw new Error(\n        'Invariant: expected routes to have been loaded before match'\n      )\n    }\n\n    // Ensure that path matching is done with a leading slash.\n    pathname = ensureLeadingSlash(pathname)\n\n    // If this pathname doesn't look like a dynamic route, and this pathname is\n    // listed in the normalized list of routes, then return it. This ensures\n    // that when a route like `/user/[id]` is encountered, it doesn't just match\n    // with the list of normalized routes.\n    if (!isDynamicRoute(pathname)) {\n      for (const matcher of this.matchers.static) {\n        const match = this.validate(pathname, matcher, options)\n        if (!match) continue\n\n        yield match\n      }\n    }\n\n    // If we should skip handling dynamic routes, exit now.\n    if (options?.skipDynamic) return null\n\n    // Loop over the dynamic matchers, yielding each match.\n    for (const matcher of this.matchers.dynamic) {\n      const match = this.validate(pathname, matcher, options)\n      if (!match) continue\n\n      yield match\n    }\n\n    // We tried direct matching against the pathname and against all the dynamic\n    // paths, so there was no match.\n    return null\n  }\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */\nexport class Normalizers implements Normalizer {\n  constructor(private readonly normalizers: Array<Normalizer> = []) {}\n\n  public push(normalizer: Normalizer) {\n    this.normalizers.push(normalizer)\n  }\n\n  public normalize(pathname: string): string {\n    return this.normalizers.reduce<string>(\n      (normalized, normalizer) => normalizer.normalize(normalized),\n      pathname\n    )\n  }\n}\n","import path from '../../shared/lib/isomorphic/path'\nimport type { Normalizer } from './normalizer'\n\nexport class PrefixingNormalizer implements Normalizer {\n  private readonly prefix: string\n\n  constructor(...prefixes: ReadonlyArray<string>) {\n    this.prefix = path.posix.join(...prefixes)\n  }\n\n  public normalize(pathname: string): string {\n    return path.posix.join(this.prefix, pathname)\n  }\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import { Normalizers } from '../../normalizers'\nimport type { Normalizer } from '../../normalizer'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\n\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n  constructor() {\n    super('app')\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(normalizePagePath(page))\n  }\n}\n\nexport class DevAppBundlePathNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","import type { PageExtensions } from '../../build/page-extensions-type'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { isAppRouteRoute } from '../is-app-route-route'\n\nexport const STATIC_METADATA_IMAGES = {\n  icon: {\n    filename: 'icon',\n    extensions: ['ico', 'jpg', 'jpeg', 'png', 'svg'],\n  },\n  apple: {\n    filename: 'apple-icon',\n    extensions: ['jpg', 'jpeg', 'png'],\n  },\n  favicon: {\n    filename: 'favicon',\n    extensions: ['ico'],\n  },\n  openGraph: {\n    filename: 'opengraph-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n  twitter: {\n    filename: 'twitter-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n} as const\n\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = ['js', 'jsx', 'ts', 'tsx']\n\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (\n  staticExtensions: readonly string[],\n  dynamicExtensions: readonly string[] | null\n) => {\n  // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n  if (!dynamicExtensions || dynamicExtensions.length === 0) {\n    return `(\\\\.(?:${staticExtensions.join('|')}))`\n  }\n  return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`\n}\n\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns {boolean} if the file is a metadata route file\n */\nexport function isMetadataRouteFile(\n  appDirRelativePath: string,\n  pageExtensions: PageExtensions,\n  strictlyMatchExtensions: boolean\n) {\n  // End with the extension or optional to have the extension\n  // When strictlyMatchExtensions is true, it's used for match file path;\n  // When strictlyMatchExtensions, the dynamic extension is skipped but\n  // static extension is kept, which is usually used for matching route path.\n  const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$'\n  // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n  const variantsMatcher = '\\\\d?'\n  // The -\\w{6} is the suffix that normalized from group routes;\n  const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?'\n\n  const suffixMatcher = `${variantsMatcher}${groupSuffix}`\n\n  const metadataRouteFilesRegex = [\n    new RegExp(\n      `^[\\\\\\\\/]robots${getExtensionRegexString(\n        pageExtensions.concat('txt'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `^[\\\\\\\\/]manifest${getExtensionRegexString(\n        pageExtensions.concat('webmanifest', 'json'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n    new RegExp(\n      `[\\\\\\\\/]sitemap${getExtensionRegexString(['xml'], pageExtensions)}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.icon.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.apple.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.openGraph.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.twitter.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n  ]\n\n  const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath)\n  const matched = metadataRouteFilesRegex.some((r) =>\n    r.test(normalizedAppDirRelativePath)\n  )\n\n  return matched\n}\n\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route: string) {\n  // extract ext with regex\n  const pathname = route.replace(/\\/route$/, '')\n\n  const matched =\n    isAppRouteRoute(route) &&\n    isMetadataRouteFile(pathname, [], true) &&\n    // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' &&\n    pathname !== '/manifest.webmanifest' &&\n    !pathname.endsWith('/sitemap.xml')\n\n  return matched\n}\n\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */\nexport function isMetadataPage(page: string) {\n  const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */\nexport function isMetadataRoute(route: string): boolean {\n  let page = normalizeAppPath(route)\n    .replace(/^\\/?app\\//, '')\n    // Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')\n    // Remove the /route suffix\n    .replace(/\\/route$/, '')\n\n  if (page[0] !== '/') page = '/' + page\n\n  const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n","import type { Normalizer } from './normalizer'\n\nexport function wrapNormalizerFn(fn: (pathname: string) => string): Normalizer {\n  return { normalize: fn }\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */\nexport class UnderscoreNormalizer implements Normalizer {\n  public normalize(pathname: string): string {\n    return pathname.replace(/%5F/g, '_')\n  }\n}\n","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths'\nimport { Normalizers } from '../../normalizers'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\nimport type { Normalizer } from '../../normalizer'\n\nexport class AppPathnameNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The pathname to match should have the trailing `/page` and other route\n      // group information stripped from it.\n      wrapNormalizerFn(normalizeAppPath),\n      // The page should have the `%5F` characters replaced with `_` characters.\n      new UnderscoreNormalizer(),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevAppPathnameNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppPathnameNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import {\n  AppBundlePathNormalizer,\n  DevAppBundlePathNormalizer,\n} from './app-bundle-path-normalizer'\nimport { AppFilenameNormalizer } from './app-filename-normalizer'\nimport { DevAppPageNormalizer } from './app-page-normalizer'\nimport {\n  AppPathnameNormalizer,\n  DevAppPathnameNormalizer,\n} from './app-pathname-normalizer'\n\nexport class AppNormalizers {\n  public readonly filename: AppFilenameNormalizer\n  public readonly pathname: AppPathnameNormalizer\n  public readonly bundlePath: AppBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new AppFilenameNormalizer(distDir)\n    this.pathname = new AppPathnameNormalizer()\n    this.bundlePath = new AppBundlePathNormalizer()\n  }\n}\n\nexport class DevAppNormalizers {\n  public readonly page: DevAppPageNormalizer\n  public readonly pathname: DevAppPathnameNormalizer\n  public readonly bundlePath: DevAppBundlePathNormalizer\n\n  constructor(appDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevAppPageNormalizer(appDir, extensions)\n    this.pathname = new DevAppPathnameNormalizer(this.page)\n    this.bundlePath = new DevAppBundlePathNormalizer(this.page)\n  }\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\n\nexport class AppPageRouteMatcher extends RouteMatcher<AppPageRouteDefinition> {\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextPage=${this.definition.page}`\n  }\n}\n","import type { RouteMatcherProvider } from '../route-matcher-provider'\nimport type { RouteMatcher } from '../../route-matchers/route-matcher'\n\ninterface LoaderComparable<D> {\n  load(): Promise<D>\n  compare(left: D, right: D): boolean\n}\n\n/**\n * This will memoize the matchers if the loaded data is comparable.\n */\nexport abstract class CachedRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n  D = any,\n> implements RouteMatcherProvider<M>\n{\n  private data?: D\n  private cached: ReadonlyArray<M> = []\n\n  constructor(private readonly loader: LoaderComparable<D>) {}\n\n  protected abstract transform(data: D): Promise<ReadonlyArray<M>>\n\n  public async matchers(): Promise<readonly M[]> {\n    const data = await this.loader.load()\n    if (!data) return []\n\n    // Return the cached matchers if the data has not changed.\n    if (this.data && this.loader.compare(this.data, data)) return this.cached\n    this.data = data\n\n    // Transform the manifest into matchers.\n    const matchers = await this.transform(data)\n\n    // Cache the matchers.\n    this.cached = matchers\n\n    return matchers\n  }\n}\n","import type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider'\n\nexport abstract class ManifestRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n> extends CachedRouteMatcherProvider<M, Manifest | null> {\n  constructor(manifestName: string, manifestLoader: ManifestLoader) {\n    super({\n      load: async () => manifestLoader.load(manifestName),\n      compare: (left, right) => left === right,\n    })\n  }\n}\n","import { isAppPageRoute } from '../../lib/is-app-page-route'\n\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { AppNormalizers } from '../normalizers/built/app'\nimport { RouteKind } from '../route-kind'\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\n\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider<AppPageRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppPageRouteMatcher>> {\n    // This matcher only matches app pages.\n    const pages = Object.keys(manifest).filter((page) => isAppPageRoute(page))\n\n    // Collect all the app paths for each page. This could include any parallel\n    // routes.\n    const allAppPaths: Record<string, string[]> = {}\n    for (const page of pages) {\n      const pathname = this.normalizers.pathname.normalize(page)\n      if (pathname in allAppPaths) allAppPaths[pathname].push(page)\n      else allAppPaths[pathname] = [page]\n    }\n\n    // Format the routes.\n    const matchers: Array<AppPageRouteMatcher> = []\n    for (const [pathname, appPaths] of Object.entries(allAppPaths)) {\n      // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n      const page = appPaths[0]\n\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppPageRouteMatcher({\n          kind: RouteKind.APP_PAGE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n          appPaths,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppPageRoute(route: string): boolean {\n  return route.endsWith('/page')\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppRouteRouteDefinition } from '../route-definitions/app-route-route-definition'\n\nexport class AppRouteRouteMatcher extends RouteMatcher<AppRouteRouteDefinition> {}\n","import { isAppRouteRoute } from '../../lib/is-app-route-route'\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport { AppNormalizers } from '../normalizers/built/app'\n\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider<AppRouteRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppRouteRouteMatcher>> {\n    // This matcher only matches app routes.\n    const pages = Object.keys(manifest).filter((page) => isAppRouteRoute(page))\n\n    // Format the routes.\n    const matchers: Array<AppRouteRouteMatcher> = []\n    for (const page of pages) {\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const pathname = this.normalizers.pathname.normalize(page)\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppRouteRouteMatcher({\n          kind: RouteKind.APP_ROUTE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n","import type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesAPIRouteMatcher extends RouteMatcher<PagesAPIRouteDefinition> {}\n\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher<PagesAPIRouteDefinition> {}\n","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport type { Normalizer } from '../../normalizer'\nimport { Normalizers } from '../../normalizers'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\n\nexport class PagesBundlePathNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The bundle path should have the trailing `/index` stripped from\n      // it.\n      wrapNormalizerFn(normalizePagePath),\n      // The page should prefixed with `pages/`.\n      new PrefixingNormalizer('pages'),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n  constructor(pagesNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pagesNormalizer,\n      // Normalize the app page to a pathname.\n      new PagesBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import {\n  DevPagesBundlePathNormalizer,\n  PagesBundlePathNormalizer,\n} from './pages-bundle-path-normalizer'\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer'\nimport { DevPagesPageNormalizer } from './pages-page-normalizer'\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer'\n\nexport class PagesNormalizers {\n  public readonly filename: PagesFilenameNormalizer\n  public readonly bundlePath: PagesBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new PagesFilenameNormalizer(distDir)\n    this.bundlePath = new PagesBundlePathNormalizer()\n\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n  }\n}\n\nexport class DevPagesNormalizers {\n  public readonly page: DevPagesPageNormalizer\n  public readonly pathname: DevPagesPathnameNormalizer\n  public readonly bundlePath: DevPagesBundlePathNormalizer\n\n  constructor(pagesDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevPagesPageNormalizer(pagesDir, extensions)\n    this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions)\n    this.bundlePath = new DevPagesBundlePathNormalizer(this.page)\n  }\n}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesAPILocaleRouteMatcher,\n  PagesAPIRouteMatcher,\n} from '../route-matchers/pages-api-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesAPIRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesAPIRouteMatcher>> {\n    // This matcher is only for Pages API routes.\n    const pathnames = Object.keys(manifest).filter((pathname) =>\n      isAPIRoute(pathname)\n    )\n\n    const matchers: Array<PagesAPIRouteMatcher> = []\n\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesAPILocaleRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesAPIRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { PagesRouteDefinition } from '../route-definitions/pages-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesRouteMatcher extends RouteMatcher<PagesRouteDefinition> {}\n\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher<PagesRouteDefinition> {}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesLocaleRouteMatcher,\n  PagesRouteMatcher,\n} from '../route-matchers/pages-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesRouteMatcher>> {\n    // This matcher is only for Pages routes, not Pages API routes which are\n    // included in this manifest.\n    const pathnames = Object.keys(manifest)\n      .filter((pathname) => !isAPIRoute(pathname))\n      // Remove any blocked pages (page that can't be routed to, like error or\n      // internal pages).\n      .filter((pathname) => {\n        const normalized =\n          this.i18nProvider?.analyze(pathname).pathname ?? pathname\n\n        // Skip any blocked pages.\n        if (BLOCKED_PAGES.includes(normalized)) return false\n\n        return true\n      })\n\n    const matchers: Array<PagesRouteMatcher> = []\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesLocaleRouteMatcher({\n            kind: RouteKind.PAGES,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesRouteMatcher({\n            kind: RouteKind.PAGES,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { Manifest, ManifestLoader } from './manifest-loader'\n\nexport class ServerManifestLoader implements ManifestLoader {\n  constructor(private readonly getter: (name: string) => Manifest | null) {}\n\n  public load(name: string): Manifest | null {\n    return this.getter(name)\n  }\n}\n","import type { DomainLocale, I18NConfig } from '../config-shared'\nimport { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\n/**\n * The result of matching a locale aware route.\n */\nexport interface LocaleAnalysisResult {\n  /**\n   * The pathname without the locale prefix (if any).\n   */\n  pathname: string\n\n  /**\n   * The detected locale. If no locale was detected, this will be `undefined`.\n   */\n  detectedLocale?: string\n\n  /**\n   * True if the locale was inferred from the default locale.\n   */\n  inferredFromDefault: boolean\n}\n\ntype LocaleAnalysisOptions = {\n  /**\n   * When provided, it will be used as the default locale if the locale\n   * cannot be inferred from the pathname.\n   */\n  defaultLocale?: string\n}\n\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */\nexport class I18NProvider {\n  private readonly lowerCaseLocales: ReadonlyArray<string>\n  private readonly lowerCaseDomains?: ReadonlyArray<\n    DomainLocale & {\n      // The configuration references a domain with an optional port, but the\n      // hostname is always the domain without the port and is used for\n      // matching.\n      hostname: string\n    }\n  >\n\n  constructor(public readonly config: Readonly<I18NConfig>) {\n    if (!config.locales.length) {\n      throw new Error('Invariant: No locales provided')\n    }\n\n    this.lowerCaseLocales = config.locales.map((locale) => locale.toLowerCase())\n    this.lowerCaseDomains = config.domains?.map((domainLocale) => {\n      const domain = domainLocale.domain.toLowerCase()\n      return {\n        defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n        hostname: domain.split(':', 1)[0],\n        domain,\n        locales: domainLocale.locales?.map((locale) => locale.toLowerCase()),\n        http: domainLocale.http,\n      }\n    })\n  }\n\n  /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */\n  public detectDomainLocale(\n    hostname?: string,\n    detectedLocale?: string\n  ): DomainLocale | undefined {\n    if (!hostname || !this.lowerCaseDomains || !this.config.domains) return\n\n    if (detectedLocale) detectedLocale = detectedLocale.toLowerCase()\n\n    for (let i = 0; i < this.lowerCaseDomains.length; i++) {\n      const domainLocale = this.lowerCaseDomains[i]\n      if (\n        // We assume that the hostname is already lowercased.\n        domainLocale.hostname === hostname ||\n        // Configuration validation ensures that the locale is not repeated in\n        // other domains locales.\n        domainLocale.locales?.some((locale) => locale === detectedLocale)\n      ) {\n        return this.config.domains[i]\n      }\n    }\n\n    return\n  }\n\n  /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param req the request object\n   * @param pathname the pathname that could contain a locale prefix\n   * @returns the locale analysis result\n   */\n  public fromRequest(\n    req: NextIncomingMessage,\n    pathname: string\n  ): LocaleAnalysisResult {\n    const detectedLocale = getRequestMeta(req, 'locale')\n\n    // If a locale was detected on the query, analyze the pathname to ensure\n    // that the locale matches.\n    if (detectedLocale) {\n      const analysis = this.analyze(pathname)\n\n      // If the analysis contained a locale we should validate it against the\n      // query and strip it from the pathname.\n      if (analysis.detectedLocale) {\n        if (analysis.detectedLocale !== detectedLocale) {\n          throw new Error(\n            `Invariant: The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`\n          )\n        }\n\n        pathname = analysis.pathname\n      }\n    }\n\n    return {\n      pathname,\n      detectedLocale,\n      inferredFromDefault:\n        getRequestMeta(req, 'localeInferredFromDefault') ?? false,\n    }\n  }\n\n  /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */\n  public analyze(\n    pathname: string,\n    options: LocaleAnalysisOptions = {}\n  ): LocaleAnalysisResult {\n    let detectedLocale: string | undefined = options.defaultLocale\n\n    // By default, we assume that the default locale was inferred if there was\n    // no detected locale.\n    let inferredFromDefault = typeof detectedLocale === 'string'\n\n    // The first segment will be empty, because it has a leading `/`. If\n    // there is no further segment, there is no locale (or it's the default).\n    const segments = pathname.split('/', 2)\n    if (!segments[1])\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // The second segment will contain the locale part if any.\n    const segment = segments[1].toLowerCase()\n\n    // See if the segment matches one of the locales. If it doesn't, there is\n    // no locale (or it's the default).\n    const index = this.lowerCaseLocales.indexOf(segment)\n    if (index < 0)\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // Return the case-sensitive locale.\n    detectedLocale = this.config.locales[index]\n    inferredFromDefault = false\n\n    // Remove the `/${locale}` part of the pathname.\n    pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n    return {\n      detectedLocale,\n      pathname,\n      inferredFromDefault,\n    }\n  }\n}\n","import type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport { isNodeNextResponse } from './base-http/helpers'\n\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { splitCookiesString } from './web/utils'\n\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */\nexport async function sendResponse(\n  req: BaseNextRequest,\n  res: BaseNextResponse,\n  response: Response,\n  waitUntil?: Promise<unknown>\n): Promise<void> {\n  if (\n    // The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' &&\n    isNodeNextResponse(res)\n  ) {\n    // Copy over the response status.\n    res.statusCode = response.status\n    res.statusMessage = response.statusText\n\n    // TODO: this is not spec-compliant behavior and we should not restrict\n    // headers that are allowed to appear many times.\n    //\n    // See:\n    // https://github.com/vercel/next.js/pull/70127\n    const headersWithMultipleValuesAllowed = [\n      // can add more headers to this list if needed\n      'set-cookie',\n      'www-authenticate',\n      'proxy-authenticate',\n      'vary',\n    ]\n\n    // Copy over the response headers.\n    response.headers?.forEach((value, name) => {\n      // `x-middleware-set-cookie` is an internal header not needed for the response\n      if (name.toLowerCase() === 'x-middleware-set-cookie') {\n        return\n      }\n\n      // The append handling is special cased for `set-cookie`.\n      if (name.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          res.appendHeader(name, cookie)\n        }\n      } else {\n        // only append the header if it is either not present in the outbound response\n        // or if the header supports multiple values\n        const isHeaderPresent = typeof res.getHeader(name) !== 'undefined'\n        if (\n          headersWithMultipleValuesAllowed.includes(name.toLowerCase()) ||\n          !isHeaderPresent\n        ) {\n          res.appendHeader(name, value)\n        }\n      }\n    })\n\n    /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */\n\n    const { originalResponse } = res\n\n    // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n    if (response.body && req.method !== 'HEAD') {\n      await pipeToNodeResponse(response.body, originalResponse, waitUntil)\n    } else {\n      originalResponse.end()\n    }\n  }\n}\n","import { getPathMatch } from '../../shared/lib/router/utils/path-match'\n\nconst matcher = getPathMatch('/_next/data/:path*')\n\nexport function matchNextDataPathname(pathname: string | null | undefined) {\n  if (typeof pathname !== 'string') return false\n\n  return matcher(pathname)\n}\n","import escapePathDelimiters from '../../../shared/lib/router/utils/escape-path-delimiters'\nimport { DecodeError } from '../../../shared/lib/utils'\n\n/**\n * We only encode path delimiters for path segments from\n * getStaticPaths so we need to attempt decoding the URL\n * to match against and only escape the path delimiters\n * this allows non-ascii values to be handled e.g.\n * Japanese characters.\n * */\nfunction decodePathParams(pathname: string): string {\n  // TODO: investigate adding this handling for non-SSG\n  // pages so non-ascii names also work there.\n  return pathname\n    .split('/')\n    .map((seg) => {\n      try {\n        seg = escapePathDelimiters(decodeURIComponent(seg), true)\n      } catch (_) {\n        // An improperly encoded URL was provided\n        throw new DecodeError('Failed to decode path param(s).')\n      }\n      return seg\n    })\n    .join('/')\n}\n\nexport { decodePathParams }\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f|5c)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class SuffixPathnameNormalizer implements Normalizer {\n  constructor(private readonly suffix: string) {}\n\n  public match(pathname: string) {\n    // If the pathname doesn't end in the suffix, we don't match.\n    if (!pathname.endsWith(this.suffix)) return false\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    return pathname.substring(0, pathname.length - this.suffix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class RSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_SUFFIX)\n  }\n}\n","import type { IncomingHttpHeaders } from 'node:http'\n\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\n\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */\nexport function stripFlightHeaders(headers: IncomingHttpHeaders) {\n  for (const header of FLIGHT_HEADERS) {\n    delete headers[header.toLowerCase()]\n  }\n}\n","import type { AppRouteRouteModule } from './app-route/module'\nimport type { AppPageRouteModule } from './app-page/module'\nimport type { PagesRouteModule } from './pages/module'\nimport type { PagesAPIRouteModule } from './pages-api/module'\n\nimport type { RouteModule } from './route-module'\n\nimport { RouteKind } from '../route-kind'\n\nexport function isAppRouteRouteModule(\n  routeModule: RouteModule\n): routeModule is AppRouteRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_ROUTE\n}\n\nexport function isAppPageRouteModule(\n  routeModule: RouteModule\n): routeModule is AppPageRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_PAGE\n}\n\nexport function isPagesRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES\n}\n\nexport function isPagesAPIRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesAPIRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES_API\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_PREFETCH_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class PrefetchRSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_PREFETCH_SUFFIX)\n  }\n\n  public match(pathname: string): boolean {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return true\n    }\n\n    return super.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return '/'\n    }\n\n    return super.normalize(pathname, matched)\n  }\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class PrefixPathnameNormalizer implements Normalizer {\n  constructor(private readonly prefix: string) {\n    if (prefix.endsWith('/')) {\n      throw new Error(\n        `PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`\n      )\n    }\n  }\n\n  public match(pathname: string) {\n    // If the pathname doesn't start with the prefix, we don't match.\n    if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n      return false\n    }\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    if (pathname.length === this.prefix.length) {\n      return '/'\n    }\n\n    return pathname.substring(this.prefix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport { PrefixPathnameNormalizer } from './prefix'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class NextDataPathnameNormalizer implements PathnameNormalizer {\n  private readonly prefix: PrefixPathnameNormalizer\n  private readonly suffix = new SuffixPathnameNormalizer('.json')\n  constructor(buildID: string) {\n    if (!buildID) {\n      throw new Error('Invariant: buildID is required')\n    }\n\n    this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`)\n  }\n\n  public match(pathname: string) {\n    return this.prefix.match(pathname) && this.suffix.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    pathname = this.prefix.normalize(pathname, true)\n    pathname = this.suffix.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n","import type { AsyncLocalStorage } from 'async_hooks'\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available'\n)\n\nclass FakeAsyncLocalStorage<Store extends {}>\n  implements AsyncLocalStorage<Store>\n{\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  static bind<T>(fn: T): T {\n    return fn\n  }\n}\n\nconst maybeGlobalAsyncLocalStorage =\n  typeof globalThis !== 'undefined' && (globalThis as any).AsyncLocalStorage\n\nexport function createAsyncLocalStorage<\n  Store extends {},\n>(): AsyncLocalStorage<Store> {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage()\n  }\n  return new FakeAsyncLocalStorage()\n}\n\nexport function bindSnapshot<T>(fn: T): T {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.bind(fn)\n  }\n  return FakeAsyncLocalStorage.bind(fn)\n}\n\nexport function createSnapshot(): <R, TArgs extends any[]>(\n  fn: (...args: TArgs) => R,\n  ...args: TArgs\n) => R {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.snapshot()\n  }\n  return function (fn: any, ...args: any[]) {\n    return fn(...args)\n  }\n}\n","import { createAsyncLocalStorage } from '../app-render/async-local-storage'\n\nexport function getBuiltinRequestContext():\n  | BuiltinRequestContextValue\n  | undefined {\n  const _globalThis = globalThis as GlobalThisWithRequestContext\n  const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL]\n  return ctx?.get()\n}\n\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context')\n\ntype GlobalThisWithRequestContext = typeof globalThis & {\n  [NEXT_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n}\n\n/** A request context provided by the platform. */\nexport type BuiltinRequestContext = {\n  get(): BuiltinRequestContextValue | undefined\n}\n\nexport type RunnableBuiltinRequestContext = BuiltinRequestContext & {\n  run<T>(value: BuiltinRequestContextValue, callback: () => T): T\n}\n\nexport type BuiltinRequestContextValue = {\n  waitUntil?: WaitUntil\n}\nexport type WaitUntil = (promise: Promise<any>) => void\n\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */\nexport function createLocalRequestContext(): RunnableBuiltinRequestContext {\n  const storage = createAsyncLocalStorage<BuiltinRequestContextValue>()\n  return {\n    get: () => storage.getStore(),\n    run: (value, callback) => storage.run(value, callback),\n  }\n}\n","import type { WaitUntil } from '../../after/builtin-request-context'\nimport { PageSignatureError } from '../error'\nimport type { NextRequest } from './request'\n\nconst responseSymbol = Symbol('response')\nconst passThroughSymbol = Symbol('passThrough')\nconst waitUntilSymbol = Symbol('waitUntil')\n\nclass FetchEvent {\n  // TODO(after): get rid of the 'internal' variant and always use an external waitUntil\n  // (this means removing `FetchEventResult.waitUntil` which also requires a builder change)\n  readonly [waitUntilSymbol]:\n    | { kind: 'internal'; promises: Promise<any>[] }\n    | { kind: 'external'; function: WaitUntil };\n\n  [responseSymbol]?: Promise<Response>;\n  [passThroughSymbol] = false\n\n  constructor(_request: Request, waitUntil?: WaitUntil) {\n    this[waitUntilSymbol] = waitUntil\n      ? { kind: 'external', function: waitUntil }\n      : { kind: 'internal', promises: [] }\n  }\n\n  // TODO: is this dead code? NextFetchEvent never lets this get called\n  respondWith(response: Response | Promise<Response>): void {\n    if (!this[responseSymbol]) {\n      this[responseSymbol] = Promise.resolve(response)\n    }\n  }\n\n  // TODO: is this dead code? passThroughSymbol is unused\n  passThroughOnException(): void {\n    this[passThroughSymbol] = true\n  }\n\n  waitUntil(promise: Promise<any>): void {\n    if (this[waitUntilSymbol].kind === 'external') {\n      // if we received an external waitUntil, we delegate to it\n      // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n      const waitUntil = this[waitUntilSymbol].function\n      return waitUntil(promise)\n    } else {\n      // if we didn't receive an external waitUntil, we make it work on our own\n      // (and expect the caller to do something with the promises)\n      this[waitUntilSymbol].promises.push(promise)\n    }\n  }\n}\n\nexport function getWaitUntilPromiseFromEvent(\n  event: FetchEvent\n): Promise<void> | undefined {\n  return event[waitUntilSymbol].kind === 'internal'\n    ? Promise.all(event[waitUntilSymbol].promises).then(() => {})\n    : undefined\n}\n\nexport class NextFetchEvent extends FetchEvent {\n  sourcePage: string\n\n  constructor(params: {\n    request: NextRequest\n    page: string\n    context: { waitUntil: WaitUntil } | undefined\n  }) {\n    super(params.request, params.context?.waitUntil)\n    this.sourcePage = params.page\n  }\n\n  /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  get request() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n\n  /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  respondWith() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n}\n","import { stringifyCookie } from '../../web/spec-extension/cookies'\nimport type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { ReflectAdapter } from './adapters/reflect'\n\nimport { ResponseCookies } from './cookies'\n\nconst INTERNALS = Symbol('internal response')\nconst REDIRECTS = new Set([301, 302, 303, 307, 308])\n\nfunction handleMiddlewareField(\n  init: MiddlewareResponseInit | undefined,\n  headers: Headers\n) {\n  if (init?.request?.headers) {\n    if (!(init.request.headers instanceof Headers)) {\n      throw new Error('request.headers must be an instance of Headers')\n    }\n\n    const keys = []\n    for (const [key, value] of init.request.headers) {\n      headers.set('x-middleware-request-' + key, value)\n      keys.push(key)\n    }\n\n    headers.set('x-middleware-override-headers', keys.join(','))\n  }\n}\n\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */\nexport class NextResponse<Body = unknown> extends Response {\n  [INTERNALS]: {\n    cookies: ResponseCookies\n    url?: NextURL\n    body?: Body\n  }\n\n  constructor(body?: BodyInit | null, init: ResponseInit = {}) {\n    super(body, init)\n\n    const headers = this.headers\n    const cookies = new ResponseCookies(headers)\n\n    const cookiesProxy = new Proxy(cookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'delete':\n          case 'set': {\n            return (...args: [string, string]) => {\n              const result = Reflect.apply(target[prop], target, args)\n              const newHeaders = new Headers(headers)\n\n              if (result instanceof ResponseCookies) {\n                headers.set(\n                  'x-middleware-set-cookie',\n                  result\n                    .getAll()\n                    .map((cookie) => stringifyCookie(cookie))\n                    .join(',')\n                )\n              }\n\n              handleMiddlewareField(init, newHeaders)\n              return result\n            }\n          }\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    this[INTERNALS] = {\n      cookies: cookiesProxy,\n      url: init.url\n        ? new NextURL(init.url, {\n            headers: toNodeOutgoingHttpHeaders(headers),\n            nextConfig: init.nextConfig,\n          })\n        : undefined,\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      url: this.url,\n      // rest of props come from Response\n      body: this.body,\n      bodyUsed: this.bodyUsed,\n      headers: Object.fromEntries(this.headers),\n      ok: this.ok,\n      redirected: this.redirected,\n      status: this.status,\n      statusText: this.statusText,\n      type: this.type,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  static json<JsonBody>(\n    body: JsonBody,\n    init?: ResponseInit\n  ): NextResponse<JsonBody> {\n    const response: Response = Response.json(body, init)\n    return new NextResponse(response.body, response)\n  }\n\n  static redirect(url: string | NextURL | URL, init?: number | ResponseInit) {\n    const status = typeof init === 'number' ? init : init?.status ?? 307\n    if (!REDIRECTS.has(status)) {\n      throw new RangeError(\n        'Failed to execute \"redirect\" on \"response\": Invalid status code'\n      )\n    }\n    const initObj = typeof init === 'object' ? init : {}\n    const headers = new Headers(initObj?.headers)\n    headers.set('Location', validateURL(url))\n\n    return new NextResponse(null, {\n      ...initObj,\n      headers,\n      status,\n    })\n  }\n\n  static rewrite(\n    destination: string | NextURL | URL,\n    init?: MiddlewareResponseInit\n  ) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-rewrite', validateURL(destination))\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n\n  static next(init?: MiddlewareResponseInit) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-next', '1')\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n}\n\ninterface ResponseInit extends globalThis.ResponseInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig\n    trailingSlash?: boolean\n  }\n  url?: string\n}\n\ninterface ModifiedRequest {\n  /**\n   * If this is set, the request headers will be overridden with this value.\n   */\n  headers?: Headers\n}\n\ninterface MiddlewareResponseInit extends globalThis.ResponseInit {\n  /**\n   * These fields will override the request from clients.\n   */\n  request?: ModifiedRequest\n}\n","import { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external'\nimport {\n  getExpectedRequestStore,\n  type RequestStore,\n} from '../../../app-render/work-unit-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// We use this to type some APIs but we don't construct instances directly\nexport type { ResponseCookies }\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\ntype SetCookieArgs =\n  | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n  | [options: ResponseCookie]\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting workStore\n      const workStore = workAsyncStorage.getStore()\n      if (workStore) {\n        workStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    const wrappedCookies = new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (...args: SetCookieArgs) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.set(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    return wrappedCookies\n  }\n}\n\nexport function wrapWithMutableAccessCheck(\n  responseCookies: ResponseCookies\n): ResponseCookies {\n  const wrappedCookies = new Proxy(responseCookies, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'delete':\n          return function (...args: [string] | [ResponseCookie]) {\n            ensureCookiesAreStillMutable('cookies().delete')\n            target.delete(...args)\n            return wrappedCookies\n          }\n        case 'set':\n          return function (...args: SetCookieArgs) {\n            ensureCookiesAreStillMutable('cookies().set')\n            target.set(...args)\n            return wrappedCookies\n          }\n\n        default:\n          return ReflectAdapter.get(target, prop, receiver)\n      }\n    },\n  })\n  return wrappedCookies\n}\n\nexport function areCookiesMutableInCurrentPhase(requestStore: RequestStore) {\n  return requestStore.phase === 'action'\n}\n\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */\nfunction ensureCookiesAreStillMutable(callingExpression: string) {\n  const requestStore = getExpectedRequestStore(callingExpression)\n  if (!areCookiesMutableInCurrentPhase(requestStore)) {\n    // TODO: maybe we can give a more precise error message based on callingExpression?\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\nexport function responseCookiesToRequestCookies(\n  responseCookies: ResponseCookies\n): RequestCookies {\n  const requestCookies = new RequestCookies(new Headers())\n  for (const cookie of responseCookies.getAll()) {\n    requestCookies.set(cookie)\n  }\n  return requestCookies\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/server/lib/incremental-cache/tags-manifest.external.js\");","/**\n * This is the default \"use cache\" handler it defaults to an in-memory store.\n * In-memory caches are fragile and should not use stale-while-revalidate\n * semantics on the caches because it's not worth warming up an entry that's\n * likely going to get evicted before we get to use it anyway. However, we also\n * don't want to reuse a stale entry for too long so stale entries should be\n * considered expired/missing in such cache handlers.\n */\n\nimport { LRUCache } from '../lru-cache'\nimport type { CacheEntry, CacheHandlerV2 } from './types'\nimport {\n  isStale,\n  tagsManifest,\n} from '../incremental-cache/tags-manifest.external'\n\ntype PrivateCacheEntry = {\n  entry: CacheEntry\n\n  // For the default cache we store errored cache\n  // entries and allow them to be used up to 3 times\n  // after that we want to dispose it and try for fresh\n\n  // If an entry is errored we return no entry\n  // three times so that we retry hitting origin (MISS)\n  // and then if it still fails to set after the third we\n  // return the errored content and use expiration of\n  // Math.min(30, entry.expiration)\n  isErrored: boolean\n  errorRetryCount: number\n\n  // compute size on set since we need to read size\n  // of the ReadableStream for LRU evicting\n  size: number\n}\n\n// LRU cache default to max 50 MB but in future track\nconst memoryCache = new LRUCache<PrivateCacheEntry>(\n  50 * 1024 * 1024,\n  (entry) => entry.size\n)\nconst pendingSets = new Map<string, Promise<void>>()\n\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE\n  ? console.debug.bind(console, 'DefaultCacheHandler:')\n  : undefined\n\nconst DefaultCacheHandler: CacheHandlerV2 = {\n  async get(cacheKey) {\n    const pendingPromise = pendingSets.get(cacheKey)\n\n    if (pendingPromise) {\n      debug?.('get', cacheKey, 'pending')\n      await pendingPromise\n    }\n\n    const privateEntry = memoryCache.get(cacheKey)\n\n    if (!privateEntry) {\n      debug?.('get', cacheKey, 'not found')\n      return undefined\n    }\n\n    const entry = privateEntry.entry\n    if (\n      performance.timeOrigin + performance.now() >\n      entry.timestamp + entry.revalidate * 1000\n    ) {\n      // In-memory caches should expire after revalidate time because it is\n      // unlikely that a new entry will be able to be used before it is dropped\n      // from the cache.\n      debug?.('get', cacheKey, 'expired')\n\n      return undefined\n    }\n\n    if (isStale(entry.tags, entry.timestamp)) {\n      debug?.('get', cacheKey, 'had stale tag')\n\n      return undefined\n    }\n    const [returnStream, newSaved] = entry.value.tee()\n    entry.value = newSaved\n\n    debug?.('get', cacheKey, 'found', {\n      tags: entry.tags,\n      timestamp: entry.timestamp,\n      revalidate: entry.revalidate,\n      expire: entry.expire,\n    })\n\n    return {\n      ...entry,\n      value: returnStream,\n    }\n  },\n\n  async set(cacheKey, pendingEntry) {\n    debug?.('set', cacheKey, 'start')\n\n    let resolvePending: () => void = () => {}\n    const pendingPromise = new Promise<void>((resolve) => {\n      resolvePending = resolve\n    })\n    pendingSets.set(cacheKey, pendingPromise)\n\n    const entry = await pendingEntry\n\n    let size = 0\n\n    try {\n      const [value, clonedValue] = entry.value.tee()\n      entry.value = value\n      const reader = clonedValue.getReader()\n\n      for (let chunk; !(chunk = await reader.read()).done; ) {\n        size += Buffer.from(chunk.value).byteLength\n      }\n\n      memoryCache.set(cacheKey, {\n        entry,\n        isErrored: false,\n        errorRetryCount: 0,\n        size,\n      })\n\n      debug?.('set', cacheKey, 'done')\n    } catch (err) {\n      // TODO: store partial buffer with error after we retry 3 times\n      debug?.('set', cacheKey, 'failed', err)\n    } finally {\n      resolvePending()\n      pendingSets.delete(cacheKey)\n    }\n  },\n\n  async refreshTags() {\n    // Nothing to do for an in-memory cache handler.\n  },\n\n  async getExpiration(...tags) {\n    const expiration = Math.max(\n      ...tags.map((tag) => tagsManifest.get(tag) ?? 0)\n    )\n\n    debug?.('getExpiration', { tags, expiration })\n\n    return expiration\n  },\n\n  async expireTags(...tags) {\n    const timestamp = Math.round(performance.timeOrigin + performance.now())\n    debug?.('expireTags', { tags, timestamp })\n\n    for (const tag of tags) {\n      // TODO: update file-system-cache?\n      tagsManifest.set(tag, timestamp)\n    }\n  },\n}\n\nexport default DefaultCacheHandler\n","import DefaultCacheHandler from '../lib/cache-handlers/default'\nimport type { CacheHandlerCompat } from '../lib/cache-handlers/types'\n\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE\n  ? (message: string, ...args: any[]) => {\n      console.log(`use-cache: ${message}`, ...args)\n    }\n  : undefined\n\nconst handlersSymbol = Symbol.for('@next/cache-handlers')\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map')\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set')\n\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */\nconst reference: typeof globalThis & {\n  [handlersSymbol]?: {\n    RemoteCache?: CacheHandlerCompat\n    DefaultCache?: CacheHandlerCompat\n  }\n  [handlersMapSymbol]?: Map<string, CacheHandlerCompat>\n  [handlersSetSymbol]?: Set<CacheHandlerCompat>\n} = globalThis\n\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */\nexport function initializeCacheHandlers(): boolean {\n  // If the cache handlers have already been initialized, don't do it again.\n  if (reference[handlersMapSymbol]) {\n    debug?.('cache handlers already initialized')\n    return false\n  }\n\n  debug?.('initializing cache handlers')\n  reference[handlersMapSymbol] = new Map<string, CacheHandlerCompat>()\n\n  // Initialize the cache from the symbol contents first.\n  if (reference[handlersSymbol]) {\n    let fallback: CacheHandlerCompat\n    if (reference[handlersSymbol].DefaultCache) {\n      debug?.('setting \"default\" cache handler from symbol')\n      fallback = reference[handlersSymbol].DefaultCache\n    } else {\n      debug?.('setting \"default\" cache handler from default')\n      fallback = DefaultCacheHandler\n    }\n\n    reference[handlersMapSymbol].set('default', fallback)\n\n    if (reference[handlersSymbol].RemoteCache) {\n      debug?.('setting \"remote\" cache handler from symbol')\n      reference[handlersMapSymbol].set(\n        'remote',\n        reference[handlersSymbol].RemoteCache\n      )\n    } else {\n      debug?.('setting \"remote\" cache handler from default')\n      reference[handlersMapSymbol].set('remote', fallback)\n    }\n  } else {\n    debug?.('setting \"default\" cache handler from default')\n    reference[handlersMapSymbol].set('default', DefaultCacheHandler)\n    debug?.('setting \"remote\" cache handler from default')\n    reference[handlersMapSymbol].set('remote', DefaultCacheHandler)\n  }\n\n  // Create a set of the cache handlers.\n  reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values())\n\n  return true\n}\n\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandler(kind: string): CacheHandlerCompat | undefined {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  return reference[handlersMapSymbol].get(kind)\n}\n\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */\nexport function getCacheHandlers():\n  | SetIterator<CacheHandlerCompat>\n  | undefined {\n  if (!reference[handlersSetSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersSetSymbol].values()\n}\n\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandlerEntries():\n  | MapIterator<[string, CacheHandlerCompat]>\n  | undefined {\n  if (!reference[handlersMapSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersMapSymbol].entries()\n}\n\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */\nexport function setCacheHandler(\n  kind: string,\n  cacheHandler: CacheHandlerCompat\n): void {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  debug?.('setting cache handler for \"%s\"', kind)\n  reference[handlersMapSymbol].set(kind, cacheHandler)\n  reference[handlersSetSymbol].add(cacheHandler)\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","import type { RequestData, FetchEventResult } from './types'\nimport type { RequestInit } from './spec-extension/request'\nimport { PageSignatureError } from './error'\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils'\nimport {\n  NextFetchEvent,\n  getWaitUntilPromiseFromEvent,\n} from './spec-extension/fetch-event'\nimport { NextRequest } from './spec-extension/request'\nimport { NextResponse } from './spec-extension/response'\nimport {\n  parseRelativeURL,\n  getRelativeURL,\n} from '../../shared/lib/router/utils/relativize-url'\nimport { NextURL } from './next-url'\nimport { stripInternalSearchParams } from '../internal-utils'\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths'\nimport {\n  FLIGHT_HEADERS,\n  NEXT_REWRITTEN_PATH_HEADER,\n  NEXT_REWRITTEN_QUERY_HEADER,\n  RSC_HEADER,\n} from '../../client/components/app-router-headers'\nimport { ensureInstrumentationRegistered } from './globals'\nimport { createRequestStoreForAPI } from '../async-storage/request-store'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport { createWorkStore } from '../async-storage/work-store'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers'\nimport { getTracer } from '../lib/trace/tracer'\nimport type { TextMapGetter } from 'next/dist/compiled/@opentelemetry/api'\nimport { MiddlewareSpan } from '../lib/trace/constants'\nimport { CloseController } from './web-on-close'\nimport { getEdgePreviewProps } from './get-edge-preview-props'\nimport { getBuiltinRequestContext } from '../after/builtin-request-context'\nimport { getImplicitTags } from '../lib/implicit-tags'\n\nexport class NextRequestHint extends NextRequest {\n  sourcePage: string\n  fetchMetrics: FetchEventResult['fetchMetrics'] | undefined\n\n  constructor(params: {\n    init: RequestInit\n    input: Request | string\n    page: string\n  }) {\n    super(params.input, params.init)\n    this.sourcePage = params.page\n  }\n\n  get request() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  respondWith() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  waitUntil() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n}\n\nconst headersGetter: TextMapGetter<Headers> = {\n  keys: (headers) => Array.from(headers.keys()),\n  get: (headers, key) => headers.get(key) ?? undefined,\n}\n\nexport type AdapterOptions = {\n  handler: (req: NextRequestHint, event: NextFetchEvent) => Promise<Response>\n  page: string\n  request: RequestData\n  IncrementalCache?: typeof import('../lib/incremental-cache').IncrementalCache\n}\n\nlet propagator: <T>(request: NextRequestHint, fn: () => T) => T = (\n  request,\n  fn\n) => {\n  const tracer = getTracer()\n  return tracer.withPropagatedContext(request.headers, fn, headersGetter)\n}\n\nlet testApisIntercepted = false\n\nfunction ensureTestApisIntercepted() {\n  if (!testApisIntercepted) {\n    testApisIntercepted = true\n    if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n      const {\n        interceptTestApis,\n        wrapRequestHandler,\n      } = require('next/dist/experimental/testmode/server-edge')\n      interceptTestApis()\n      propagator = wrapRequestHandler(propagator)\n    }\n  }\n}\n\nexport async function adapter(\n  params: AdapterOptions\n): Promise<FetchEventResult> {\n  ensureTestApisIntercepted()\n  await ensureInstrumentationRegistered()\n\n  // TODO-APP: use explicit marker for this\n  const isEdgeRendering =\n    typeof (globalThis as any).__BUILD_MANIFEST !== 'undefined'\n\n  params.request.url = normalizeRscURL(params.request.url)\n\n  const requestURL = new NextURL(params.request.url, {\n    headers: params.request.headers,\n    nextConfig: params.request.nextConfig,\n  })\n\n  // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n  // Instead we use the keys before iteration.\n  const keys = [...requestURL.searchParams.keys()]\n  for (const key of keys) {\n    const value = requestURL.searchParams.getAll(key)\n\n    const normalizedKey = normalizeNextQueryParam(key)\n    if (normalizedKey) {\n      requestURL.searchParams.delete(normalizedKey)\n      for (const val of value) {\n        requestURL.searchParams.append(normalizedKey, val)\n      }\n      requestURL.searchParams.delete(key)\n    }\n  }\n\n  // Ensure users only see page requests, never data requests.\n  const buildId = requestURL.buildId\n  requestURL.buildId = ''\n\n  const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers)\n  const isNextDataRequest = requestHeaders.has('x-nextjs-data')\n  const isRSCRequest = requestHeaders.get(RSC_HEADER) === '1'\n\n  if (isNextDataRequest && requestURL.pathname === '/index') {\n    requestURL.pathname = '/'\n  }\n\n  const flightHeaders = new Map()\n\n  // Headers should only be stripped for middleware\n  if (!isEdgeRendering) {\n    for (const header of FLIGHT_HEADERS) {\n      const key = header.toLowerCase()\n      const value = requestHeaders.get(key)\n      if (value !== null) {\n        flightHeaders.set(key, value)\n        requestHeaders.delete(key)\n      }\n    }\n  }\n\n  const normalizeURL = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n    ? new URL(params.request.url)\n    : requestURL\n\n  const request = new NextRequestHint({\n    page: params.page,\n    // Strip internal query parameters off the request.\n    input: stripInternalSearchParams(normalizeURL).toString(),\n    init: {\n      body: params.request.body,\n      headers: requestHeaders,\n      method: params.request.method,\n      nextConfig: params.request.nextConfig,\n      signal: params.request.signal,\n    },\n  })\n\n  /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */\n  if (isNextDataRequest) {\n    Object.defineProperty(request, '__isData', {\n      enumerable: false,\n      value: true,\n    })\n  }\n\n  if (\n    !(globalThis as any).__incrementalCache &&\n    (params as any).IncrementalCache\n  ) {\n    ;(globalThis as any).__incrementalCache = new (\n      params as any\n    ).IncrementalCache({\n      appDir: true,\n      fetchCache: true,\n      minimalMode: process.env.NODE_ENV !== 'development',\n      fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n      dev: process.env.NODE_ENV === 'development',\n      requestHeaders: params.request.headers as any,\n      requestProtocol: 'https',\n      getPrerenderManifest: () => {\n        return {\n          version: -1 as any, // letting us know this doesn't conform to spec\n          routes: {},\n          dynamicRoutes: {},\n          notFoundRoutes: [],\n          preview: getEdgePreviewProps(),\n        }\n      },\n    })\n  }\n\n  // if we're in an edge runtime sandbox, we should use the waitUntil\n  // that we receive from the enclosing NextServer\n  const outerWaitUntil =\n    params.request.waitUntil ?? getBuiltinRequestContext()?.waitUntil\n\n  const event = new NextFetchEvent({\n    request,\n    page: params.page,\n    context: outerWaitUntil ? { waitUntil: outerWaitUntil } : undefined,\n  })\n  let response\n  let cookiesFromResponse\n\n  response = await propagator(request, () => {\n    // we only care to make async storage available for middleware\n    const isMiddleware =\n      params.page === '/middleware' || params.page === '/src/middleware'\n\n    if (isMiddleware) {\n      // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n      // so we have to inject it via DefinePlugin.\n      // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n\n      const waitUntil = event.waitUntil.bind(event)\n      const closeController = new CloseController()\n\n      return getTracer().trace(\n        MiddlewareSpan.execute,\n        {\n          spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n          attributes: {\n            'http.target': request.nextUrl.pathname,\n            'http.method': request.method,\n          },\n        },\n        async () => {\n          try {\n            const onUpdateCookies = (cookies: Array<string>) => {\n              cookiesFromResponse = cookies\n            }\n            const previewProps = getEdgePreviewProps()\n            const page = '/' // Fake Work\n            const fallbackRouteParams = null\n\n            const implicitTags = await getImplicitTags(\n              page,\n              request.nextUrl,\n              fallbackRouteParams\n            )\n\n            const requestStore = createRequestStoreForAPI(\n              request,\n              request.nextUrl,\n              implicitTags,\n              onUpdateCookies,\n              previewProps\n            )\n\n            const workStore = createWorkStore({\n              page,\n              fallbackRouteParams,\n              renderOpts: {\n                cacheLifeProfiles:\n                  params.request.nextConfig?.experimental?.cacheLife,\n                experimental: {\n                  isRoutePPREnabled: false,\n                  dynamicIO: false,\n                  authInterrupts:\n                    !!params.request.nextConfig?.experimental?.authInterrupts,\n                },\n                supportsDynamicResponse: true,\n                waitUntil,\n                onClose: closeController.onClose.bind(closeController),\n                onAfterTaskError: undefined,\n              },\n              requestEndedState: { ended: false },\n              isPrefetchRequest: request.headers.has(\n                NEXT_ROUTER_PREFETCH_HEADER\n              ),\n              buildId: buildId ?? '',\n              previouslyRevalidatedTags: [],\n            })\n\n            return await workAsyncStorage.run(workStore, () =>\n              workUnitAsyncStorage.run(\n                requestStore,\n                params.handler,\n                request,\n                event\n              )\n            )\n          } finally {\n            // middleware cannot stream, so we can consider the response closed\n            // as soon as the handler returns.\n            // we can delay running it until a bit later --\n            // if it's needed, we'll have a `waitUntil` lock anyway.\n            setTimeout(() => {\n              closeController.dispatchClose()\n            }, 0)\n          }\n        }\n      )\n    }\n    return params.handler(request, event)\n  })\n\n  // check if response is a Response object\n  if (response && !(response instanceof Response)) {\n    throw new TypeError('Expected an instance of Response to be returned')\n  }\n\n  if (response && cookiesFromResponse) {\n    response.headers.set('set-cookie', cookiesFromResponse)\n  }\n\n  /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */\n  const rewrite = response?.headers.get('x-middleware-rewrite')\n  if (response && rewrite && (isRSCRequest || !isEdgeRendering)) {\n    const destination = new NextURL(rewrite, {\n      forceLocale: true,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE && !isEdgeRendering) {\n      if (destination.host === request.nextUrl.host) {\n        destination.buildId = buildId || destination.buildId\n        response.headers.set('x-middleware-rewrite', String(destination))\n      }\n    }\n\n    /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */\n    const { url: relativeDestination, isRelative } = parseRelativeURL(\n      destination.toString(),\n      requestURL.toString()\n    )\n\n    if (\n      !isEdgeRendering &&\n      isNextDataRequest &&\n      // if the rewrite is external and external rewrite\n      // resolving config is enabled don't add this header\n      // so the upstream app can set it instead\n      !(\n        process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE &&\n        relativeDestination.match(/http(s)?:\\/\\//)\n      )\n    ) {\n      response.headers.set('x-nextjs-rewrite', relativeDestination)\n    }\n\n    // If this is an RSC request, and the pathname or search has changed, and\n    // this isn't an external rewrite, we need to set the rewritten pathname and\n    // query headers.\n    if (isRSCRequest && isRelative) {\n      if (requestURL.pathname !== destination.pathname) {\n        response.headers.set(NEXT_REWRITTEN_PATH_HEADER, destination.pathname)\n      }\n      if (requestURL.search !== destination.search) {\n        response.headers.set(\n          NEXT_REWRITTEN_QUERY_HEADER,\n          // remove the leading ? from the search string\n          destination.search.slice(1)\n        )\n      }\n    }\n  }\n\n  /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */\n  const redirect = response?.headers.get('Location')\n  if (response && redirect && !isEdgeRendering) {\n    const redirectURL = new NextURL(redirect, {\n      forceLocale: false,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */\n    response = new Response(response.body, response)\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n      if (redirectURL.host === requestURL.host) {\n        redirectURL.buildId = buildId || redirectURL.buildId\n        response.headers.set('Location', redirectURL.toString())\n      }\n    }\n\n    /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */\n    if (isNextDataRequest) {\n      response.headers.delete('Location')\n      response.headers.set(\n        'x-nextjs-redirect',\n        getRelativeURL(redirectURL.toString(), requestURL.toString())\n      )\n    }\n  }\n\n  const finalResponse = response ? response : NextResponse.next()\n\n  // Flight headers are not overridable / removable so they are applied at the end.\n  const middlewareOverrideHeaders = finalResponse.headers.get(\n    'x-middleware-override-headers'\n  )\n  const overwrittenHeaders: string[] = []\n  if (middlewareOverrideHeaders) {\n    for (const [key, value] of flightHeaders) {\n      finalResponse.headers.set(`x-middleware-request-${key}`, value)\n      overwrittenHeaders.push(key)\n    }\n\n    if (overwrittenHeaders.length > 0) {\n      finalResponse.headers.set(\n        'x-middleware-override-headers',\n        middlewareOverrideHeaders + ',' + overwrittenHeaders.join(',')\n      )\n    }\n  }\n\n  return {\n    response: finalResponse,\n    waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n    fetchMetrics: request.fetchMetrics,\n  }\n}\n","export function getRevalidateReason(params: {\n  isOnDemandRevalidate?: boolean\n  isRevalidate?: boolean\n}): 'on-demand' | 'stale' | undefined {\n  if (params.isOnDemandRevalidate) {\n    return 'on-demand'\n  }\n  if (params.isRevalidate) {\n    return 'stale'\n  }\n  return undefined\n}\n","/**\n * Describes the different fallback modes that a given page can have.\n */\nexport const enum FallbackMode {\n  /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */\n  BLOCKING_STATIC_RENDER = 'BLOCKING_STATIC_RENDER',\n\n  /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */\n  NOT_FOUND = 'NOT_FOUND',\n}\n\n/**\n * The fallback value returned from the `getStaticPaths` function.\n */\nexport type GetStaticPathsFallback = boolean | 'blocking'\n\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */\nexport function parseFallbackField(\n  fallbackField: string | boolean | null | undefined\n): FallbackMode | undefined {\n  if (typeof fallbackField === 'string') {\n    return FallbackMode.PRERENDER\n  } else if (fallbackField === null) {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else if (fallbackField === false) {\n    return FallbackMode.NOT_FOUND\n  } else if (fallbackField === undefined) {\n    return undefined\n  } else {\n    throw new Error(\n      `Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`\n    )\n  }\n}\n\nexport function fallbackModeToFallbackField(\n  fallback: FallbackMode,\n  page: string | undefined\n): string | false | null {\n  switch (fallback) {\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return null\n    case FallbackMode.NOT_FOUND:\n      return false\n    case FallbackMode.PRERENDER:\n      if (!page) {\n        throw new Error(\n          `Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`\n        )\n      }\n\n      return page\n    default:\n      throw new Error(`Invalid fallback mode: ${fallback}`)\n  }\n}\n\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */\nexport function parseStaticPathsResult(\n  result: GetStaticPathsFallback\n): FallbackMode {\n  if (result === true) {\n    return FallbackMode.PRERENDER\n  } else if (result === 'blocking') {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else {\n    return FallbackMode.NOT_FOUND\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport {\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n} from '../../../lib/constants'\n\nconst PATTERN = new RegExp(\n  `^(/.*)${RSC_SEGMENTS_DIR_SUFFIX}(/.*)${RSC_SEGMENT_SUFFIX}$`\n)\n\nexport class SegmentPrefixRSCPathnameNormalizer implements PathnameNormalizer {\n  public match(pathname: string): boolean {\n    return PATTERN.test(pathname)\n  }\n\n  public extract(pathname: string) {\n    const match = pathname.match(PATTERN)\n    if (!match) return null\n\n    return { originalPathname: match[1], segmentPath: match[2] }\n  }\n\n  public normalize(pathname: string): string {\n    const match = this.extract(pathname)\n    if (!match) return pathname\n\n    return match.originalPathname\n  }\n}\n","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */\nexport function decodeQueryPathParameter(value: string) {\n  // When deployed to Vercel, the value may be encoded, so this attempts to\n  // decode it and returns the original value if it fails.\n  try {\n    return decodeURIComponent(value)\n  } catch {\n    return value\n  }\n}\n","import type { __ApiPreviewProps } from './api-utils'\nimport type { LoadComponentsReturnType } from './load-components'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { Params } from './request/params'\nimport {\n  type FallbackRouteParams,\n  getFallbackRouteParams,\n} from './request/fallback-params'\nimport type { NextConfig, NextConfigComplete } from './config-shared'\nimport type {\n  NextParsedUrlQuery,\n  NextUrlWithParsedQuery,\n  RequestMeta,\n} from './request-meta'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RenderOptsPartial as PagesRenderOptsPartial } from './render'\nimport type {\n  RenderOptsPartial as AppRenderOptsPartial,\n  ServerOnInstrumentationRequestError,\n} from './app-render/types'\nimport {\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type ServerComponentsHmrCache,\n  type ResponseCacheBase,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n  CachedRouteKind,\n  type CachedRedirectValue,\n} from './response-cache'\nimport type { UrlWithParsedQuery } from 'url'\nimport {\n  NormalizeError,\n  DecodeError,\n  normalizeRepeatedSlashes,\n  MissingStaticPage,\n} from '../shared/lib/utils'\nimport type { PreviewData } from '../types'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport type {\n  ManifestRewriteRoute,\n  ManifestRoute,\n  PrerenderManifest,\n} from '../build'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport type {\n  AppPageRouteHandlerContext,\n  AppPageRouteModule,\n} from './route-modules/app-page/module'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { AppRouteRouteHandlerContext } from './route-modules/app-route/module'\nimport type {\n  Server as HTTPServer,\n  IncomingMessage,\n  ServerResponse as HTTPServerResponse,\n} from 'http'\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info'\nimport type { TLSSocket } from 'tls'\nimport type { PathnameNormalizer } from './normalizers/request/pathname-normalizer'\nimport type { InstrumentationModule } from './instrumentation/types'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { formatHostname } from './lib/format-hostname'\nimport { getRedirectStatus } from '../lib/redirect-status'\nimport { isEdgeRuntime } from '../lib/is-edge-runtime'\nimport {\n  APP_PATHS_MANIFEST,\n  NEXT_BUILTIN_DOCUMENT,\n  PAGES_MANIFEST,\n  STATIC_STATUS_PAGES,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport { setConfig } from '../shared/lib/runtime-config.external'\nimport { getCacheControlHeader, type CacheControl } from './lib/cache-control'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage } from './utils'\nimport { getBotType, isBot } from '../shared/lib/router/utils/is-bot'\nimport RenderResult from './render-result'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport * as Log from '../build/output/log'\nimport { getPreviouslyRevalidatedTags, getUtils } from './server-utils'\nimport isError, { getProperError } from '../lib/is-error'\nimport {\n  addRequestMeta,\n  getRequestMeta,\n  removeRequestMeta,\n  setRequestMeta,\n} from './request-meta'\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\nimport { getHostname } from '../shared/lib/get-hostname'\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport {\n  RSC_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_URL,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_IS_PRERENDER_HEADER,\n} from '../client/components/app-router-headers'\nimport type {\n  MatchOptions,\n  RouteMatcherManager,\n} from './route-matcher-managers/route-matcher-manager'\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer'\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager'\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider'\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider'\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider'\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider'\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader'\nimport { getTracer, isBubbledError, SpanKind } from './lib/trace/tracer'\nimport { BaseServerSpan } from './lib/trace/constants'\nimport { I18NProvider } from './lib/i18n-provider'\nimport { sendResponse } from './send-response'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  normalizeNextQueryParam,\n  toNodeOutgoingHttpHeaders,\n} from './web/utils'\nimport {\n  CACHE_ONE_YEAR,\n  INFINITE_CACHE,\n  MATCHED_PATH_HEADER,\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_RESUME_HEADER,\n} from '../lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from './web/spec-extension/adapters/next-request'\nimport { matchNextDataPathname } from './lib/match-next-data-pathname'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { decodePathParams } from './lib/router-utils/decode-path-params'\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc'\nimport { stripFlightHeaders } from './app-render/strip-flight-headers'\nimport {\n  isAppPageRouteModule,\n  isAppRouteRouteModule,\n  isPagesRouteModule,\n} from './route-modules/checks'\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc'\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data'\nimport { getIsPossibleServerAction } from './lib/server-action-request-meta'\nimport { isInterceptionRouteAppPath } from '../shared/lib/router/utils/interception-routes'\nimport { toRoute } from './lib/to-route'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers'\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header'\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr'\nimport {\n  getBuiltinRequestContext,\n  type WaitUntil,\n} from './after/builtin-request-context'\nimport { ENCODED_TAGS } from './stream-utils/encodedTags'\nimport { NextRequestHint } from './web/adapter'\nimport { getRevalidateReason } from './instrumentation/utils'\nimport { RouteKind } from './route-kind'\nimport type { RouteModule } from './route-modules/route-module'\nimport { FallbackMode, parseFallbackField } from '../lib/fallback'\nimport { toResponseCacheEntry } from './response-cache/utils'\nimport { scheduleOnNextTick } from '../lib/scheduler'\nimport { SegmentPrefixRSCPathnameNormalizer } from './normalizers/request/segment-prefix-rsc'\nimport {\n  shouldServeStreamingMetadata,\n  isHtmlBotRequest,\n} from './lib/streaming-metadata'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport { getCacheHandlers } from './use-cache/handlers'\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: NextParsedUrlQuery\n}\n\nexport interface MiddlewareRoutingItem {\n  page: string\n  match: MiddlewareRouteMatch\n  matchers?: MiddlewareMatcher[]\n}\n\nexport type RouteHandler<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = (\n  req: ServerRequest,\n  res: ServerResponse,\n  parsedUrl: NextUrlWithParsedQuery\n) => PromiseLike<boolean> | boolean\n\n/**\n * The normalized route manifest is the same as the route manifest, but with\n * the rewrites normalized to the object shape that the router expects.\n */\nexport type NormalizedRouteManifest = {\n  readonly dynamicRoutes: ReadonlyArray<ManifestRoute>\n  readonly rewrites: {\n    readonly beforeFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly afterFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly fallback: ReadonlyArray<ManifestRewriteRoute>\n  }\n}\n\nexport interface Options {\n  /**\n   * Object containing the configuration next.config.js\n   */\n  conf: NextConfig\n  /**\n   * Set to false when the server was created by Next.js\n   */\n  customServer?: boolean\n  /**\n   * Tells if Next.js is running in dev mode\n   */\n  dev?: boolean\n  /**\n   * Enables the experimental testing mode.\n   */\n  experimentalTestProxy?: boolean\n\n  /**\n   * Whether or not the dev server is running in experimental HTTPS mode\n   */\n  experimentalHttpsServer?: boolean\n  /**\n   * Where the Next project is located\n   */\n  dir?: string\n  /**\n   * Tells if Next.js is at the platform-level\n   */\n  minimalMode?: boolean\n  /**\n   * Hide error messages containing server information\n   */\n  quiet?: boolean\n  /**\n   * The hostname the server is running behind\n   */\n  hostname?: string\n  /**\n   * The port the server is running behind\n   */\n  port?: number\n  /**\n   * The HTTP Server that Next.js is running behind\n   */\n  httpServer?: HTTPServer\n}\n\nexport type RenderOpts = PagesRenderOptsPartial & AppRenderOptsPartial\n\nexport type LoadedRenderOpts = RenderOpts &\n  LoadComponentsReturnType &\n  RequestLifecycleOpts\n\nexport type RequestLifecycleOpts = {\n  waitUntil: ((promise: Promise<any>) => void) | undefined\n  onClose: (callback: () => void) => void\n  onAfterTaskError: ((error: unknown) => void) | undefined\n}\n\ntype BaseRenderOpts = RenderOpts & {\n  poweredByHeader: boolean\n  generateEtags: boolean\n  previewProps: __ApiPreviewProps\n}\n\n/**\n * The public interface for rendering with the server programmatically. This\n * would typically only allow the base request or response to extend it, but\n * because this can be programmatically accessed, we assume that it could also\n * be the base Node.js request and response types.\n */\nexport interface BaseRequestHandler<\n  ServerRequest extends BaseNextRequest | IncomingMessage = BaseNextRequest,\n  ServerResponse extends\n    | BaseNextResponse\n    | HTTPServerResponse = BaseNextResponse,\n> {\n  (\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void> | void\n}\n\nexport type RequestContext<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = {\n  req: ServerRequest\n  res: ServerResponse\n  pathname: string\n  query: NextParsedUrlQuery\n  renderOpts: RenderOpts\n}\n\nexport class NoFallbackError extends Error {}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  type: 'html' | 'json' | 'rsc'\n  body: RenderResult\n  cacheControl?: CacheControl\n}\n\nexport type NextEnabledDirectories = {\n  readonly pages: boolean\n  readonly app: boolean\n}\n\nexport default abstract class Server<\n  ServerOptions extends Options = Options,\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> {\n  public readonly hostname?: string\n  public readonly fetchHostname?: string\n  public readonly port?: number\n  protected readonly dir: string\n  protected readonly quiet: boolean\n  protected readonly nextConfig: NextConfigComplete\n  protected readonly distDir: string\n  protected readonly publicDir: string\n  protected readonly hasStaticDir: boolean\n  protected readonly pagesManifest?: PagesManifest\n  protected readonly appPathsManifest?: PagesManifest\n  protected readonly buildId: string\n  protected readonly minimalMode: boolean\n  protected readonly renderOpts: BaseRenderOpts\n  protected readonly serverOptions: Readonly<ServerOptions>\n  protected readonly appPathRoutes?: Record<string, string[]>\n  protected readonly clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  protected interceptionRoutePatterns: RegExp[]\n  protected nextFontManifest?: DeepReadonly<NextFontManifest>\n  protected instrumentation: InstrumentationModule | undefined\n  private readonly responseCache: ResponseCacheBase\n\n  protected abstract getPublicDir(): string\n  protected abstract getHasStaticDir(): boolean\n  protected abstract getPagesManifest(): PagesManifest | undefined\n  protected abstract getAppPathsManifest(): PagesManifest | undefined\n  protected abstract getBuildId(): string\n  protected abstract getinterceptionRoutePatterns(): RegExp[]\n\n  protected readonly enabledDirectories: NextEnabledDirectories\n  protected abstract getEnabledDirectories(dev: boolean): NextEnabledDirectories\n\n  protected readonly experimentalTestProxy?: boolean\n\n  protected abstract findPageComponents(params: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure?: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null>\n  protected abstract getPrerenderManifest(): DeepReadonly<PrerenderManifest>\n  protected abstract getNextFontManifest():\n    | DeepReadonly<NextFontManifest>\n    | undefined\n  protected abstract attachRequestMeta(\n    req: ServerRequest,\n    parsedUrl: NextUrlWithParsedQuery\n  ): void\n  protected abstract hasPage(pathname: string): Promise<boolean>\n\n  protected abstract sendRenderResult(\n    req: ServerRequest,\n    res: ServerResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json' | 'rsc'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      cacheControl: CacheControl | undefined\n    }\n  ): Promise<void>\n\n  protected abstract runApi(\n    req: ServerRequest,\n    res: ServerResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean>\n\n  protected abstract renderHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult>\n\n  protected abstract getIncrementalCache(options: {\n    requestHeaders: Record<string, undefined | string | string[]>\n    requestProtocol: 'http' | 'https'\n  }): Promise<import('./lib/incremental-cache').IncrementalCache>\n\n  protected abstract getResponseCache(options: {\n    dev: boolean\n  }): ResponseCacheBase\n\n  protected getServerComponentsHmrCache():\n    | ServerComponentsHmrCache\n    | undefined {\n    return this.nextConfig.experimental.serverComponentsHmrCache\n      ? (globalThis as any).__serverComponentsHmrCache\n      : undefined\n  }\n\n  protected abstract loadEnvConfig(params: {\n    dev: boolean\n    forceReload?: boolean\n  }): void\n\n  // TODO-APP: (wyattjoh): Make protected again. Used for turbopack in route-resolver.ts right now.\n  public readonly matchers: RouteMatcherManager\n  protected readonly i18nProvider?: I18NProvider\n  protected readonly localeNormalizer?: LocaleRouteNormalizer\n\n  protected readonly normalizers: {\n    readonly rsc: RSCPathnameNormalizer | undefined\n    readonly prefetchRSC: PrefetchRSCPathnameNormalizer | undefined\n    readonly segmentPrefetchRSC: SegmentPrefixRSCPathnameNormalizer | undefined\n    readonly data: NextDataPathnameNormalizer | undefined\n  }\n\n  private readonly isAppPPREnabled: boolean\n  private readonly isAppSegmentPrefetchEnabled: boolean\n\n  /**\n   * This is used to persist cache scopes across\n   * prefetch -> full route requests for dynamic IO\n   * it's only fully used in dev\n   */\n\n  public constructor(options: ServerOptions) {\n    const {\n      dir = '.',\n      quiet = false,\n      conf,\n      dev = false,\n      minimalMode = false,\n      hostname,\n      port,\n      experimentalTestProxy,\n    } = options\n\n    this.experimentalTestProxy = experimentalTestProxy\n    this.serverOptions = options\n\n    this.dir =\n      process.env.NEXT_RUNTIME === 'edge' ? dir : require('path').resolve(dir)\n\n    this.quiet = quiet\n    this.loadEnvConfig({ dev })\n\n    // TODO: should conf be normalized to prevent missing\n    // values from causing issues as this can be user provided\n    this.nextConfig = conf as NextConfigComplete\n    this.hostname = hostname\n    if (this.hostname) {\n      // we format the hostname so that it can be fetched\n      this.fetchHostname = formatHostname(this.hostname)\n    }\n    this.port = port\n    this.distDir =\n      process.env.NEXT_RUNTIME === 'edge'\n        ? this.nextConfig.distDir\n        : require('path').join(this.dir, this.nextConfig.distDir)\n    this.publicDir = this.getPublicDir()\n    this.hasStaticDir = !minimalMode && this.getHasStaticDir()\n\n    this.i18nProvider = this.nextConfig.i18n?.locales\n      ? new I18NProvider(this.nextConfig.i18n)\n      : undefined\n\n    // Configure the locale normalizer, it's used for routes inside `pages/`.\n    this.localeNormalizer = this.i18nProvider\n      ? new LocaleRouteNormalizer(this.i18nProvider)\n      : undefined\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n    } = this.nextConfig\n\n    this.buildId = this.getBuildId()\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] =\n      minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE\n\n    this.enabledDirectories = this.getEnabledDirectories(dev)\n\n    this.isAppPPREnabled =\n      this.enabledDirectories.app &&\n      checkIsAppPPREnabled(this.nextConfig.experimental.ppr)\n\n    this.isAppSegmentPrefetchEnabled =\n      this.enabledDirectories.app &&\n      this.nextConfig.experimental.clientSegmentCache === true\n\n    this.normalizers = {\n      // We should normalize the pathname from the RSC prefix only in minimal\n      // mode as otherwise that route is not exposed external to the server as\n      // we instead only rely on the headers.\n      rsc:\n        this.enabledDirectories.app && this.minimalMode\n          ? new RSCPathnameNormalizer()\n          : undefined,\n      prefetchRSC:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PrefetchRSCPathnameNormalizer()\n          : undefined,\n      segmentPrefetchRSC:\n        this.isAppSegmentPrefetchEnabled && this.minimalMode\n          ? new SegmentPrefixRSCPathnameNormalizer()\n          : undefined,\n      data: this.enabledDirectories.pages\n        ? new NextDataPathnameNormalizer(this.buildId)\n        : undefined,\n    }\n\n    this.nextFontManifest = this.getNextFontManifest()\n\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n    }\n\n    this.renderOpts = {\n      supportsDynamicResponse: true,\n      trailingSlash: this.nextConfig.trailingSlash,\n      deploymentId: this.nextConfig.deploymentId,\n      strictNextHead: this.nextConfig.experimental.strictNextHead ?? true,\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      generateEtags,\n      previewProps: this.getPrerenderManifest().preview,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: this.nextConfig.images,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      nextConfigOutput: this.nextConfig.output,\n      nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n      disableOptimizedLoading:\n        this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n      serverComponents: this.enabledDirectories.app,\n      cacheLifeProfiles: this.nextConfig.experimental.cacheLife,\n      enableTainting: this.nextConfig.experimental.taint,\n      crossOrigin: this.nextConfig.crossOrigin\n        ? this.nextConfig.crossOrigin\n        : undefined,\n      largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n      // Only the `publicRuntimeConfig` key is exposed to the client side\n      // It'll be rendered as part of __NEXT_DATA__ on the client side\n      runtimeConfig:\n        Object.keys(publicRuntimeConfig).length > 0\n          ? publicRuntimeConfig\n          : undefined,\n\n      // @ts-expect-error internal field not publicly exposed\n      isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n      // `htmlLimitedBots` is passed to server as serialized config in string format\n      htmlLimitedBots: this.nextConfig.htmlLimitedBots,\n      experimental: {\n        expireTime: this.nextConfig.expireTime,\n        staleTimes: this.nextConfig.experimental.staleTimes,\n        clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n        dynamicIO: this.nextConfig.experimental.dynamicIO ?? false,\n        clientSegmentCache:\n          this.nextConfig.experimental.clientSegmentCache === 'client-only'\n            ? 'client-only'\n            : Boolean(this.nextConfig.experimental.clientSegmentCache),\n        dynamicOnHover: this.nextConfig.experimental.dynamicOnHover ?? false,\n        inlineCss: this.nextConfig.experimental.inlineCss ?? false,\n        authInterrupts: !!this.nextConfig.experimental.authInterrupts,\n      },\n      onInstrumentationRequestError:\n        this.instrumentationOnRequestError.bind(this),\n      reactMaxHeadersLength: this.nextConfig.reactMaxHeadersLength,\n    }\n\n    // Initialize next/config with the environment configuration\n    setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.pagesManifest = this.getPagesManifest()\n    this.appPathsManifest = this.getAppPathsManifest()\n    this.appPathRoutes = this.getAppPathRoutes()\n    this.interceptionRoutePatterns = this.getinterceptionRoutePatterns()\n\n    // Configure the routes.\n    this.matchers = this.getRouteMatchers()\n\n    // Start route compilation. We don't wait for the routes to finish loading\n    // because we use the `waitTillReady` promise below in `handleRequest` to\n    // wait. Also we can't `await` in the constructor.\n    void this.matchers.reload()\n\n    this.setAssetPrefix(assetPrefix)\n    this.responseCache = this.getResponseCache({ dev })\n  }\n\n  protected reloadMatchers() {\n    return this.matchers.reload()\n  }\n\n  private handleRSCRequest: RouteHandler<ServerRequest, ServerResponse> = (\n    req,\n    _res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname) return false\n\n    if (this.normalizers.segmentPrefetchRSC?.match(parsedUrl.pathname)) {\n      const result = this.normalizers.segmentPrefetchRSC.extract(\n        parsedUrl.pathname\n      )\n      if (!result) return false\n\n      const { originalPathname, segmentPath } = result\n      parsedUrl.pathname = originalPathname\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1'\n      req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()] =\n        segmentPath\n\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n      addRequestMeta(req, 'segmentPrefetchRSCRequest', segmentPath)\n    } else if (this.normalizers.prefetchRSC?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n    } else if (this.normalizers.rsc?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.rsc.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a RSC request.\n      req.headers[RSC_HEADER.toLowerCase()] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n    } else if (req.headers['x-now-route-matches']) {\n      // If we didn't match, return with the flight headers stripped. If in\n      // minimal mode we didn't match based on the path, this can't be a RSC\n      // request. This is because Vercel only sends this header during\n      // revalidation requests and we want the cache to instead depend on the\n      // request path for flight information.\n      stripFlightHeaders(req.headers)\n\n      return false\n    } else if (req.headers[RSC_HEADER.toLowerCase()] === '1') {\n      addRequestMeta(req, 'isRSCRequest', true)\n\n      if (req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] === '1') {\n        addRequestMeta(req, 'isPrefetchRSCRequest', true)\n\n        const segmentPrefetchRSCRequest =\n          req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()]\n        if (typeof segmentPrefetchRSCRequest === 'string') {\n          addRequestMeta(\n            req,\n            'segmentPrefetchRSCRequest',\n            segmentPrefetchRSCRequest\n          )\n        }\n      }\n    } else {\n      // Otherwise just return without doing anything.\n      return false\n    }\n\n    if (req.url) {\n      const parsed = parseUrl(req.url)\n      parsed.pathname = parsedUrl.pathname\n      req.url = formatUrl(parsed)\n    }\n\n    return false\n  }\n\n  private handleNextDataRequest: RouteHandler<ServerRequest, ServerResponse> =\n    async (req, res, parsedUrl) => {\n      const middleware = await this.getMiddleware()\n      const params = matchNextDataPathname(parsedUrl.pathname)\n\n      // ignore for non-next data URLs\n      if (!params || !params.path) {\n        return false\n      }\n\n      if (params.path[0] !== this.buildId) {\n        // Ignore if its a middleware request when we aren't on edge.\n        if (\n          process.env.NEXT_RUNTIME !== 'edge' &&\n          getRequestMeta(req, 'middlewareInvoke')\n        ) {\n          return false\n        }\n\n        // Make sure to 404 if the buildId isn't correct\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // remove buildId from URL\n      params.path.shift()\n\n      const lastParam = params.path[params.path.length - 1]\n\n      // show 404 if it doesn't end with .json\n      if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // re-create page's pathname\n      let pathname = `/${params.path.join('/')}`\n      pathname = getRouteFromAssetPath(pathname, '.json')\n\n      // ensure trailing slash is normalized per config\n      if (middleware) {\n        if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n          pathname += '/'\n        }\n        if (\n          !this.nextConfig.trailingSlash &&\n          pathname.length > 1 &&\n          pathname.endsWith('/')\n        ) {\n          pathname = pathname.substring(0, pathname.length - 1)\n        }\n      }\n\n      if (this.i18nProvider) {\n        // Remove the port from the hostname if present.\n        const hostname = req?.headers.host?.split(':', 1)[0].toLowerCase()\n\n        const domainLocale = this.i18nProvider.detectDomainLocale(hostname)\n        const defaultLocale =\n          domainLocale?.defaultLocale ?? this.i18nProvider.config.defaultLocale\n\n        const localePathResult = this.i18nProvider.analyze(pathname)\n\n        // If the locale is detected from the path, we need to remove it\n        // from the pathname.\n        if (localePathResult.detectedLocale) {\n          pathname = localePathResult.pathname\n        }\n\n        // Update the query with the detected locale and default locale.\n        addRequestMeta(req, 'locale', localePathResult.detectedLocale)\n        addRequestMeta(req, 'defaultLocale', defaultLocale)\n\n        // If the locale is not detected from the path, we need to mark that\n        // it was not inferred from default.\n        if (!localePathResult.detectedLocale) {\n          removeRequestMeta(req, 'localeInferredFromDefault')\n        }\n\n        // If no locale was detected and we don't have middleware, we need\n        // to render a 404 page.\n        if (!localePathResult.detectedLocale && !middleware) {\n          addRequestMeta(req, 'locale', defaultLocale)\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n      }\n\n      parsedUrl.pathname = pathname\n      addRequestMeta(req, 'isNextDataReq', true)\n\n      return false\n    }\n\n  protected handleNextImageRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallRenderRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallMiddlewareRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected getRouteMatchers(): RouteMatcherManager {\n    // Create a new manifest loader that get's the manifests from the server.\n    const manifestLoader = new ServerManifestLoader((name) => {\n      switch (name) {\n        case PAGES_MANIFEST:\n          return this.getPagesManifest() ?? null\n        case APP_PATHS_MANIFEST:\n          return this.getAppPathsManifest() ?? null\n        default:\n          return null\n      }\n    })\n\n    // Configure the matchers and handlers.\n    const matchers: RouteMatcherManager = new DefaultRouteMatcherManager()\n\n    // Match pages under `pages/`.\n    matchers.push(\n      new PagesRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // Match api routes under `pages/api/`.\n    matchers.push(\n      new PagesAPIRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // If the app directory is enabled, then add the app matchers and handlers.\n    if (this.enabledDirectories.app) {\n      // Match app pages under `app/`.\n      matchers.push(\n        new AppPageRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n      matchers.push(\n        new AppRouteRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n    }\n\n    return matchers\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    const [err, req, ctx] = args\n\n    if (this.instrumentation) {\n      try {\n        await this.instrumentation.onRequestError?.(\n          err,\n          {\n            path: req.url || '',\n            method: req.method || 'GET',\n            // Normalize middleware headers and other server request headers\n            headers:\n              req instanceof NextRequestHint\n                ? Object.fromEntries(req.headers.entries())\n                : req.headers,\n          },\n          ctx\n        )\n      } catch (handlerErr) {\n        // Log the soft error and continue, since errors can thrown from react stream handler\n        console.error('Error in instrumentation.onRequestError:', handlerErr)\n      }\n    }\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    Log.error(err)\n  }\n\n  public async handleRequest(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    await this.prepare()\n    const method = req.method.toUpperCase()\n\n    const tracer = getTracer()\n    return tracer.withPropagatedContext(req.headers, () => {\n      return tracer.trace(\n        BaseServerSpan.handleRequest,\n        {\n          spanName: `${method} ${req.url}`,\n          kind: SpanKind.SERVER,\n          attributes: {\n            'http.method': method,\n            'http.target': req.url,\n          },\n        },\n        async (span) =>\n          this.handleRequestImpl(req, res, parsedUrl).finally(() => {\n            if (!span) return\n\n            const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n            span.setAttributes({\n              'http.status_code': res.statusCode,\n              'next.rsc': isRSCRequest,\n            })\n\n            const rootSpanAttributes = tracer.getRootSpanAttributes()\n            // We were unable to get attributes, probably OTEL is not enabled\n            if (!rootSpanAttributes) return\n\n            if (\n              rootSpanAttributes.get('next.span_type') !==\n              BaseServerSpan.handleRequest\n            ) {\n              console.warn(\n                `Unexpected root span type '${rootSpanAttributes.get(\n                  'next.span_type'\n                )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n              )\n              return\n            }\n\n            const route = rootSpanAttributes.get('next.route')\n            if (route) {\n              const name = isRSCRequest\n                ? `RSC ${method} ${route}`\n                : `${method} ${route}`\n\n              span.setAttributes({\n                'next.route': route,\n                'http.route': route,\n                'next.span_name': name,\n              })\n              span.updateName(name)\n            } else {\n              span.updateName(\n                isRSCRequest\n                  ? `RSC ${method} ${req.url}`\n                  : `${method} ${req.url}`\n              )\n            }\n          })\n      )\n    })\n  }\n\n  private async handleRequestImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    try {\n      // Wait for the matchers to be ready.\n      await this.matchers.waitTillReady()\n\n      // ensure cookies set in middleware are merged and\n      // not overridden by API routes/getServerSideProps\n      patchSetHeaderWithCookieSupport(\n        req,\n        isNodeNextResponse(res) ? res.originalResponse : res\n      )\n\n      const urlParts = (req.url || '').split('?', 1)\n      const urlNoQuery = urlParts[0]\n\n      // this normalizes repeated slashes in the path e.g. hello//world ->\n      // hello/world or backslashes to forward slashes, this does not\n      // handle trailing slash as that is handled the same as a next.config.js\n      // redirect\n      if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n        const cleanUrl = normalizeRepeatedSlashes(req.url!)\n        res.redirect(cleanUrl, 308).body(cleanUrl).send()\n        return\n      }\n\n      // Parse url if parsedUrl not provided\n      if (!parsedUrl || typeof parsedUrl !== 'object') {\n        if (!req.url) {\n          throw new Error('Invariant: url can not be undefined')\n        }\n\n        parsedUrl = parseUrl(req.url!, true)\n      }\n\n      if (!parsedUrl.pathname) {\n        throw new Error(\"Invariant: pathname can't be empty\")\n      }\n\n      // Parse the querystring ourselves if the user doesn't handle querystring parsing\n      if (typeof parsedUrl.query === 'string') {\n        parsedUrl.query = Object.fromEntries(\n          new URLSearchParams(parsedUrl.query)\n        )\n      }\n\n      // Update the `x-forwarded-*` headers.\n      const { originalRequest = null } = isNodeNextRequest(req) ? req : {}\n      const xForwardedProto = originalRequest?.headers['x-forwarded-proto']\n      const isHttps = xForwardedProto\n        ? xForwardedProto === 'https'\n        : !!(originalRequest?.socket as TLSSocket)?.encrypted\n\n      req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname\n      req.headers['x-forwarded-port'] ??= this.port\n        ? this.port.toString()\n        : isHttps\n          ? '443'\n          : '80'\n      req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http'\n      req.headers['x-forwarded-for'] ??= originalRequest?.socket?.remoteAddress\n\n      // This should be done before any normalization of the pathname happens as\n      // it captures the initial URL.\n      this.attachRequestMeta(req, parsedUrl)\n\n      let finished = await this.handleRSCRequest(req, res, parsedUrl)\n      if (finished) return\n\n      const domainLocale = this.i18nProvider?.detectDomainLocale(\n        getHostname(parsedUrl, req.headers)\n      )\n\n      const defaultLocale =\n        domainLocale?.defaultLocale || this.nextConfig.i18n?.defaultLocale\n      addRequestMeta(req, 'defaultLocale', defaultLocale)\n\n      const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'))\n      const pathnameInfo = getNextPathnameInfo(url.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider,\n      })\n      url.pathname = pathnameInfo.pathname\n\n      if (pathnameInfo.basePath) {\n        req.url = removePathPrefix(req.url!, this.nextConfig.basePath)\n      }\n\n      const useMatchedPathHeader =\n        this.minimalMode && typeof req.headers[MATCHED_PATH_HEADER] === 'string'\n\n      // TODO: merge handling with invokePath\n      if (useMatchedPathHeader) {\n        try {\n          if (this.enabledDirectories.app) {\n            // ensure /index path is normalized for prerender\n            // in minimal mode\n            if (req.url.match(/^\\/index($|\\?)/)) {\n              req.url = req.url.replace(/^\\/index/, '/')\n            }\n            parsedUrl.pathname =\n              parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname\n          }\n\n          // x-matched-path is the source of truth, it tells what page\n          // should be rendered because we don't process rewrites in minimalMode\n          let { pathname: matchedPath } = new URL(\n            req.headers[MATCHED_PATH_HEADER] as string,\n            'http://localhost'\n          )\n\n          let { pathname: urlPathname } = new URL(req.url, 'http://localhost')\n\n          // For ISR the URL is normalized to the prerenderPath so if\n          // it's a data request the URL path will be the data URL,\n          // basePath is already stripped by this point\n          if (this.normalizers.data?.match(urlPathname)) {\n            addRequestMeta(req, 'isNextDataReq', true)\n          }\n          // In minimal mode, if PPR is enabled, then we should check to see if\n          // the request should be a resume request.\n          else if (\n            this.isAppPPREnabled &&\n            this.minimalMode &&\n            req.headers[NEXT_RESUME_HEADER] === '1' &&\n            req.method === 'POST'\n          ) {\n            // Decode the postponed state from the request body, it will come as\n            // an array of buffers, so collect them and then concat them to form\n            // the string.\n            const body: Array<Buffer> = []\n            for await (const chunk of req.body) {\n              body.push(chunk)\n            }\n            const postponed = Buffer.concat(body).toString('utf8')\n\n            addRequestMeta(req, 'postponed', postponed)\n          }\n\n          matchedPath = this.normalize(matchedPath)\n          const normalizedUrlPath = this.stripNextDataPath(urlPathname)\n\n          // Perform locale detection and normalization.\n          const localeAnalysisResult = this.i18nProvider?.analyze(matchedPath, {\n            defaultLocale,\n          })\n\n          // The locale result will be defined even if the locale was not\n          // detected for the request because it will be inferred from the\n          // default locale.\n          if (localeAnalysisResult) {\n            addRequestMeta(req, 'locale', localeAnalysisResult.detectedLocale)\n\n            // If the detected locale was inferred from the default locale, we\n            // need to modify the metadata on the request to indicate that.\n            if (localeAnalysisResult.inferredFromDefault) {\n              addRequestMeta(req, 'localeInferredFromDefault', true)\n            } else {\n              removeRequestMeta(req, 'localeInferredFromDefault')\n            }\n          }\n\n          // TODO: check if this is needed any more?\n          matchedPath = denormalizePagePath(matchedPath)\n\n          let srcPathname = matchedPath\n          let pageIsDynamic = isDynamicRoute(srcPathname)\n\n          if (!pageIsDynamic) {\n            const match = await this.matchers.match(srcPathname, {\n              i18n: localeAnalysisResult,\n            })\n\n            // Update the source pathname to the matched page's pathname.\n            if (match) {\n              srcPathname = match.definition.pathname\n              // The page is dynamic if the params are defined.\n              pageIsDynamic = typeof match.params !== 'undefined'\n            }\n          }\n\n          // The rest of this function can't handle i18n properly, so ensure we\n          // restore the pathname with the locale information stripped from it\n          // now that we're done matching if we're using i18n.\n          if (localeAnalysisResult) {\n            matchedPath = localeAnalysisResult.pathname\n          }\n\n          const utils = getUtils({\n            pageIsDynamic,\n            page: srcPathname,\n            i18n: this.nextConfig.i18n,\n            basePath: this.nextConfig.basePath,\n            rewrites: this.getRoutesManifest()?.rewrites || {\n              beforeFiles: [],\n              afterFiles: [],\n              fallback: [],\n            },\n            caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes,\n          })\n\n          // Ensure parsedUrl.pathname includes locale before processing\n          // rewrites or they won't match correctly.\n          if (defaultLocale && !pathnameInfo.locale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n          }\n\n          const pathnameBeforeRewrite = parsedUrl.pathname\n          const rewriteParamKeys = Object.keys(\n            utils.handleRewrites(req, parsedUrl)\n          )\n          const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname\n\n          if (didRewrite && parsedUrl.pathname) {\n            addRequestMeta(req, 'rewroteURL', parsedUrl.pathname)\n          }\n\n          // Create a copy of the query params to avoid mutating the original\n          // object. This prevents any overlapping query params that have the\n          // same normalized key from causing issues.\n          const queryParams = { ...parsedUrl.query }\n\n          for (const [key, value] of Object.entries(parsedUrl.query)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            // Remove the prefixed key from the query params because we want\n            // to consume it for the dynamic route matcher.\n            delete parsedUrl.query[key]\n\n            if (typeof value === 'undefined') continue\n\n            queryParams[normalizedKey] = Array.isArray(value)\n              ? value.map((v) => decodeQueryPathParameter(v))\n              : decodeQueryPathParameter(value)\n          }\n\n          // interpolate dynamic params and normalize URL if needed\n          if (pageIsDynamic) {\n            let params: ParsedUrlQuery | false = {}\n\n            let paramsResult = utils.normalizeDynamicRouteParams(\n              queryParams,\n              false\n            )\n\n            // for prerendered ISR paths we attempt parsing the route\n            // params from the URL directly as route-matches may not\n            // contain the correct values due to the filesystem path\n            // matching before the dynamic route has been matched\n            if (\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(normalizedUrlPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(normalizedUrlPath)\n\n              if (matcherParams) {\n                utils.normalizeDynamicRouteParams(matcherParams, false)\n                Object.assign(paramsResult.params, matcherParams)\n                paramsResult.hasValidParams = true\n              }\n            }\n\n            // if an action request is bypassing a prerender and we\n            // don't have the params in the URL since it was prerendered\n            // and matched during handle: 'filesystem' rather than dynamic route\n            // resolving we need to parse the params from the matched-path.\n            // Note: this is similar to above case but from match-path instead\n            // of from the request URL since a rewrite could cause that to not\n            // match the src pathname\n            if (\n              // we can have a collision with /index and a top-level /[slug]\n              matchedPath !== '/index' &&\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(matchedPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(matchedPath)\n\n              if (matcherParams) {\n                const curParamsResult = utils.normalizeDynamicRouteParams(\n                  matcherParams,\n                  false\n                )\n\n                if (curParamsResult.hasValidParams) {\n                  Object.assign(params, matcherParams)\n                  paramsResult = curParamsResult\n                }\n              }\n            }\n\n            if (paramsResult.hasValidParams) {\n              params = paramsResult.params\n            }\n\n            const routeMatchesHeader = req.headers['x-now-route-matches']\n            if (\n              typeof routeMatchesHeader === 'string' &&\n              routeMatchesHeader &&\n              isDynamicRoute(matchedPath) &&\n              !paramsResult.hasValidParams\n            ) {\n              const routeMatches =\n                utils.getParamsFromRouteMatches(routeMatchesHeader)\n\n              if (routeMatches) {\n                paramsResult = utils.normalizeDynamicRouteParams(\n                  routeMatches,\n                  true\n                )\n\n                if (paramsResult.hasValidParams) {\n                  params = paramsResult.params\n                }\n              }\n            }\n\n            // Try to parse the params from the query if we couldn't parse them\n            // from the route matches but ignore missing optional params.\n            if (!paramsResult.hasValidParams) {\n              paramsResult = utils.normalizeDynamicRouteParams(\n                queryParams,\n                true\n              )\n\n              if (paramsResult.hasValidParams) {\n                params = paramsResult.params\n              }\n            }\n\n            // handle the actual dynamic route name being requested\n            if (\n              utils.defaultRouteMatches &&\n              normalizedUrlPath === srcPathname &&\n              !paramsResult.hasValidParams &&\n              !utils.normalizeDynamicRouteParams({ ...params }, true)\n                .hasValidParams\n            ) {\n              params = utils.defaultRouteMatches\n\n              // Mark that the default route matches were set on the request\n              // during routing.\n              addRequestMeta(req, 'didSetDefaultRouteMatches', true)\n            }\n\n            if (params) {\n              matchedPath = utils.interpolateDynamicPath(srcPathname, params)\n              req.url = utils.interpolateDynamicPath(req.url!, params)\n\n              // If the request is for a segment prefetch, we need to update the\n              // segment prefetch request path to include the interpolated\n              // params.\n              let segmentPrefetchRSCRequest = getRequestMeta(\n                req,\n                'segmentPrefetchRSCRequest'\n              )\n              if (\n                segmentPrefetchRSCRequest &&\n                isDynamicRoute(segmentPrefetchRSCRequest, false)\n              ) {\n                segmentPrefetchRSCRequest = utils.interpolateDynamicPath(\n                  segmentPrefetchRSCRequest,\n                  params\n                )\n\n                req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()] =\n                  segmentPrefetchRSCRequest\n                addRequestMeta(\n                  req,\n                  'segmentPrefetchRSCRequest',\n                  segmentPrefetchRSCRequest\n                )\n              }\n            }\n          }\n\n          if (pageIsDynamic || didRewrite) {\n            utils.normalizeVercelUrl(req, [\n              ...rewriteParamKeys,\n              ...Object.keys(utils.defaultRouteRegex?.groups || {}),\n            ])\n          }\n          parsedUrl.pathname = matchedPath\n          url.pathname = parsedUrl.pathname\n          finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n          if (finished) return\n        } catch (err) {\n          if (err instanceof DecodeError || err instanceof NormalizeError) {\n            res.statusCode = 400\n            return this.renderError(null, req, res, '/_error', {})\n          }\n          throw err\n        }\n      }\n\n      addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale))\n\n      if (pathnameInfo.locale) {\n        req.url = formatUrl(url)\n        addRequestMeta(req, 'didStripLocale', true)\n      }\n\n      // If we aren't in minimal mode or there is no locale in the query\n      // string, add the locale to the query string.\n      if (!this.minimalMode || !getRequestMeta(req, 'locale')) {\n        // If the locale is in the pathname, add it to the query string.\n        if (pathnameInfo.locale) {\n          addRequestMeta(req, 'locale', pathnameInfo.locale)\n        }\n        // If the default locale is available, add it to the query string and\n        // mark it as inferred rather than implicit.\n        else if (defaultLocale) {\n          addRequestMeta(req, 'locale', defaultLocale)\n          addRequestMeta(req, 'localeInferredFromDefault', true)\n        }\n      }\n\n      // set incremental cache to request meta so it can\n      // be passed down for edge functions and the fetch disk\n      // cache can be leveraged locally\n      if (\n        !(this.serverOptions as any).webServerConfig &&\n        !getRequestMeta(req, 'incrementalCache')\n      ) {\n        let protocol: 'http:' | 'https:' = 'https:'\n\n        try {\n          const parsedFullUrl = new URL(\n            getRequestMeta(req, 'initURL') || '/',\n            'http://n'\n          )\n          protocol = parsedFullUrl.protocol as 'https:' | 'http:'\n        } catch {}\n\n        const incrementalCache = await this.getIncrementalCache({\n          requestHeaders: Object.assign({}, req.headers),\n          requestProtocol: protocol.substring(0, protocol.length - 1) as\n            | 'http'\n            | 'https',\n        })\n\n        incrementalCache.resetRequestCache()\n        addRequestMeta(req, 'incrementalCache', incrementalCache)\n        ;(globalThis as any).__incrementalCache = incrementalCache\n      }\n\n      const cacheHandlers = getCacheHandlers()\n\n      if (cacheHandlers) {\n        await Promise.all(\n          [...cacheHandlers].map(async (cacheHandler) => {\n            if ('refreshTags' in cacheHandler) {\n              // Note: cacheHandler.refreshTags() is called lazily before the\n              // first cache entry is retrieved. It allows us to skip the\n              // refresh request if no caches are read at all.\n            } else {\n              const previouslyRevalidatedTags = getPreviouslyRevalidatedTags(\n                req.headers,\n                this.getPrerenderManifest().preview.previewModeId\n              )\n\n              await cacheHandler.receiveExpiredTags(\n                ...previouslyRevalidatedTags\n              )\n            }\n          })\n        )\n      }\n\n      // set server components HMR cache to request meta so it can be passed\n      // down for edge functions\n      if (!getRequestMeta(req, 'serverComponentsHmrCache')) {\n        addRequestMeta(\n          req,\n          'serverComponentsHmrCache',\n          this.getServerComponentsHmrCache()\n        )\n      }\n\n      // when invokePath is specified we can short short circuit resolving\n      // we only honor this header if we are inside of a render worker to\n      // prevent external users coercing the routing path\n      const invokePath = getRequestMeta(req, 'invokePath')\n      const useInvokePath =\n        !useMatchedPathHeader &&\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        invokePath\n\n      if (useInvokePath) {\n        const invokeStatus = getRequestMeta(req, 'invokeStatus')\n        if (invokeStatus) {\n          const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n          if (invokeQuery) {\n            Object.assign(parsedUrl.query, invokeQuery)\n          }\n\n          res.statusCode = invokeStatus\n          let err: Error | null = getRequestMeta(req, 'invokeError') || null\n\n          return this.renderError(err, req, res, '/_error', parsedUrl.query)\n        }\n\n        const parsedMatchedPath = new URL(invokePath || '/', 'http://n')\n        const invokePathnameInfo = getNextPathnameInfo(\n          parsedMatchedPath.pathname,\n          {\n            nextConfig: this.nextConfig,\n            parseData: false,\n          }\n        )\n\n        if (invokePathnameInfo.locale) {\n          addRequestMeta(req, 'locale', invokePathnameInfo.locale)\n        }\n\n        if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n          parsedUrl.pathname = parsedMatchedPath.pathname\n          addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname)\n        }\n        const normalizeResult = normalizeLocalePath(\n          removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''),\n          this.nextConfig.i18n?.locales\n        )\n\n        if (normalizeResult.detectedLocale) {\n          addRequestMeta(req, 'locale', normalizeResult.detectedLocale)\n        }\n        parsedUrl.pathname = normalizeResult.pathname\n\n        for (const key of Object.keys(parsedUrl.query)) {\n          delete parsedUrl.query[key]\n        }\n        const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n        if (invokeQuery) {\n          Object.assign(parsedUrl.query, invokeQuery)\n        }\n\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        await this.handleCatchallRenderRequest(req, res, parsedUrl)\n        return\n      }\n\n      if (\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        getRequestMeta(req, 'middlewareInvoke')\n      ) {\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        finished = await this.handleCatchallMiddlewareRequest(\n          req,\n          res,\n          parsedUrl\n        )\n        if (finished) return\n\n        const err = new Error()\n        ;(err as any).result = {\n          response: new Response(null, {\n            headers: {\n              'x-middleware-next': '1',\n            },\n          }),\n        }\n        ;(err as any).bubble = true\n        throw err\n      }\n\n      // This wasn't a request via the matched path or the invoke path, so\n      // prepare for a legacy run by removing the base path.\n\n      // ensure we strip the basePath when not using an invoke header\n      if (!useMatchedPathHeader && pathnameInfo.basePath) {\n        parsedUrl.pathname = removePathPrefix(\n          parsedUrl.pathname,\n          pathnameInfo.basePath\n        )\n      }\n\n      res.statusCode = 200\n      return await this.run(req, res, parsedUrl)\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      if (\n        (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL') ||\n        err instanceof DecodeError ||\n        err instanceof NormalizeError\n      ) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n\n      if (\n        this.minimalMode ||\n        this.renderOpts.dev ||\n        (isBubbledError(err) && err.bubble)\n      ) {\n        throw err\n      }\n      this.logError(getProperError(err))\n      res.statusCode = 500\n      res.body('Internal Server Error').send()\n    }\n  }\n\n  /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */\n  private normalize = (pathname: string) => {\n    const normalizers: Array<PathnameNormalizer> = []\n\n    if (this.normalizers.data) {\n      normalizers.push(this.normalizers.data)\n    }\n\n    // We have to put the segment prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.segmentPrefetchRSC) {\n      normalizers.push(this.normalizers.segmentPrefetchRSC)\n    }\n\n    // We have to put the prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.prefetchRSC) {\n      normalizers.push(this.normalizers.prefetchRSC)\n    }\n\n    if (this.normalizers.rsc) {\n      normalizers.push(this.normalizers.rsc)\n    }\n\n    for (const normalizer of normalizers) {\n      if (!normalizer.match(pathname)) continue\n\n      return normalizer.normalize(pathname, true)\n    }\n\n    return pathname\n  }\n\n  private normalizeAndAttachMetadata: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = async (req, res, url) => {\n    let finished = await this.handleNextImageRequest(req, res, url)\n    if (finished) return true\n\n    if (this.enabledDirectories.pages) {\n      finished = await this.handleNextDataRequest(req, res, url)\n      if (finished) return true\n    }\n\n    return false\n  }\n\n  /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */\n  public getRequestHandlerWithMetadata(\n    meta: RequestMeta\n  ): BaseRequestHandler<ServerRequest, ServerResponse> {\n    const handler = this.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      setRequestMeta(req, meta)\n      return handler(req, res, parsedUrl)\n    }\n  }\n\n  public getRequestHandler(): BaseRequestHandler<\n    ServerRequest,\n    ServerResponse\n  > {\n    return this.handleRequest.bind(this)\n  }\n\n  protected abstract handleUpgrade(\n    req: ServerRequest,\n    socket: any,\n    head?: any\n  ): Promise<void>\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  protected prepared: boolean = false\n  protected preparedPromise: Promise<void> | null = null\n  /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */\n  public async prepare(): Promise<void> {\n    if (this.prepared) return\n\n    if (this.preparedPromise === null) {\n      // Get instrumentation module\n      this.instrumentation = await this.loadInstrumentationModule()\n      this.preparedPromise = this.prepareImpl().then(() => {\n        this.prepared = true\n        this.preparedPromise = null\n      })\n    }\n    return this.preparedPromise\n  }\n  protected async prepareImpl(): Promise<void> {}\n  protected async loadInstrumentationModule(): Promise<any> {}\n\n  public async close(): Promise<void> {}\n\n  protected getAppPathRoutes(): Record<string, string[]> {\n    const appPathRoutes: Record<string, string[]> = {}\n\n    Object.keys(this.appPathsManifest || {}).forEach((entry) => {\n      const normalizedPath = normalizeAppPath(entry)\n      if (!appPathRoutes[normalizedPath]) {\n        appPathRoutes[normalizedPath] = []\n      }\n      appPathRoutes[normalizedPath].push(entry)\n    })\n    return appPathRoutes\n  }\n\n  protected async run(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.run, async () =>\n      this.runImpl(req, res, parsedUrl)\n    )\n  }\n\n  private async runImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.handleCatchallRenderRequest(req, res, parsedUrl)\n  }\n\n  private async pipe(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.pipe, async () =>\n      this.pipeImpl(fn, partialContext)\n    )\n  }\n\n  private async pipeImpl(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    const ua = partialContext.req.headers['user-agent'] || ''\n    const isBotRequest = isBot(ua)\n\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: !isBotRequest,\n        botType: getBotType(ua),\n        serveStreamingMetadata: shouldServeStreamingMetadata(\n          ua,\n          this.nextConfig.htmlLimitedBots\n        ),\n      },\n    }\n\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return\n    }\n    const { req, res } = ctx\n    const originalStatus = res.statusCode\n    const { body, type } = payload\n    let { cacheControl } = payload\n    if (!res.sent) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n\n      // In dev, we should not cache pages for any reason.\n      if (dev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n        cacheControl = undefined\n      }\n\n      if (cacheControl && cacheControl.expire === undefined) {\n        cacheControl.expire = this.nextConfig.expireTime\n      }\n\n      await this.sendRenderResult(req, res, {\n        result: body,\n        type,\n        generateEtags,\n        poweredByHeader,\n        cacheControl,\n      })\n      res.statusCode = originalStatus\n    }\n  }\n\n  private async getStaticHTML(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<string | null> {\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: false,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return null\n    }\n    return payload.body.toUnchunkedString()\n  }\n\n  public async render(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.render, async () =>\n      this.renderImpl(req, res, pathname, query, parsedUrl, internalRender)\n    )\n  }\n\n  protected getWaitUntil(): WaitUntil | undefined {\n    const builtinRequestContext = getBuiltinRequestContext()\n    if (builtinRequestContext) {\n      // the platform provided a request context.\n      // use the `waitUntil` from there, whether actually present or not --\n      // if not present, `after` will error.\n\n      // NOTE: if we're in an edge runtime sandbox, this context will be used to forward the outer waitUntil.\n      return builtinRequestContext.waitUntil\n    }\n\n    if (this.minimalMode) {\n      // we're built for a serverless environment, and `waitUntil` is not available,\n      // but using a noop would likely lead to incorrect behavior,\n      // because we have no way of keeping the invocation alive.\n      // return nothing, and `after` will error if used.\n      //\n      // NOTE: for edge functions, `NextWebServer` always runs in minimal mode.\n      //\n      // NOTE: if we're in an edge runtime sandbox, waitUntil will be passed in using \"@next/request-context\",\n      // so we won't get here.\n      return undefined\n    }\n\n    return this.getInternalWaitUntil()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil | undefined {\n    return undefined\n  }\n\n  private async renderImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.serverOptions.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !internalRender &&\n      !this.minimalMode &&\n      !getRequestMeta(req, 'isNextDataReq') &&\n      (req.url?.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && req.url!.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    return this.pipe((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async getStaticPaths({\n    pathname,\n  }: {\n    pathname: string\n    requestHeaders: import('./lib/incremental-cache').IncrementalCache['requestHeaders']\n    page: string\n    isAppPath: boolean\n  }): Promise<{\n    staticPaths?: string[]\n    fallbackMode?: FallbackMode\n  }> {\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField =\n      this.getPrerenderManifest().dynamicRoutes[pathname]?.fallback\n\n    return {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths: undefined,\n      fallbackMode: parseFallbackField(fallbackField),\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    requestContext: RequestContext<ServerRequest, ServerResponse>,\n    findComponentsResult: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponseWithComponents,\n      async () =>\n        this.renderToResponseWithComponentsImpl(\n          requestContext,\n          findComponentsResult\n        )\n    )\n  }\n\n  protected pathCouldBeIntercepted(resolvedPathname: string): boolean {\n    return (\n      isInterceptionRouteAppPath(resolvedPathname) ||\n      this.interceptionRoutePatterns.some((regexp) => {\n        return regexp.test(resolvedPathname)\n      })\n    )\n  }\n\n  protected setVaryHeader(\n    req: ServerRequest,\n    res: ServerResponse,\n    isAppPath: boolean,\n    resolvedPathname: string\n  ): void {\n    const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}, ${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}`\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    let addedNextUrlToVary = false\n\n    if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n      // Interception route responses can vary based on the `Next-URL` header.\n      // We use the Vary header to signal this behavior to the client to properly cache the response.\n      res.appendHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`)\n      addedNextUrlToVary = true\n    } else if (isAppPath || isRSCRequest) {\n      // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n      // We also set this header for pages to avoid caching issues when navigating between pages and app.\n      res.appendHeader('vary', baseVaryHeader)\n    }\n\n    if (!addedNextUrlToVary) {\n      // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n      // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n      delete req.headers[NEXT_URL]\n    }\n  }\n\n  private async renderToResponseWithComponentsImpl(\n    {\n      req,\n      res,\n      pathname,\n      renderOpts: opts,\n    }: RequestContext<ServerRequest, ServerResponse>,\n    { components, query }: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n      pathname = '/404'\n    }\n    const isErrorPathname = pathname === '/_error'\n    const is404Page =\n      pathname === '/404' || (isErrorPathname && res.statusCode === 404)\n    const is500Page =\n      pathname === '/500' || (isErrorPathname && res.statusCode === 500)\n    const isAppPath = components.isAppPath === true\n\n    const hasServerProps = !!components.getServerSideProps\n    let hasGetStaticPaths = !!components.getStaticPaths\n    const isPossibleServerAction = getIsPossibleServerAction(req)\n    const hasGetInitialProps = !!components.Component?.getInitialProps\n    let isSSG = !!components.getStaticProps\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname\n\n    this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname)\n\n    let staticPaths: string[] | undefined\n    let fallbackMode: FallbackMode | undefined\n    let hasFallback = false\n\n    const isDynamic = isDynamicRoute(components.page)\n\n    const prerenderManifest = this.getPrerenderManifest()\n\n    if (isAppPath && isDynamic) {\n      const pathsResult = await this.getStaticPaths({\n        pathname,\n        page: components.page,\n        isAppPath,\n        requestHeaders: req.headers,\n      })\n\n      staticPaths = pathsResult.staticPaths\n      fallbackMode = pathsResult.fallbackMode\n      hasFallback = typeof fallbackMode !== 'undefined'\n\n      if (this.nextConfig.output === 'export') {\n        const page = components.page\n        if (!staticPaths) {\n          throw new Error(\n            `Page \"${page}\" is missing exported function \"generateStaticParams()\", which is required with \"output: export\" config.`\n          )\n        }\n\n        const resolvedWithoutSlash = removeTrailingSlash(resolvedUrlPathname)\n        if (!staticPaths.includes(resolvedWithoutSlash)) {\n          throw new Error(\n            `Page \"${page}\" is missing param \"${resolvedWithoutSlash}\" in \"generateStaticParams()\", which is required with \"output: export\" config.`\n          )\n        }\n      }\n\n      if (hasFallback) {\n        hasGetStaticPaths = true\n      }\n    }\n\n    if (\n      hasFallback ||\n      staticPaths?.includes(resolvedUrlPathname) ||\n      // this signals revalidation in deploy environments\n      // TODO: make this more generic\n      req.headers['x-now-route-matches']\n    ) {\n      isSSG = true\n    } else if (!this.renderOpts.dev) {\n      isSSG ||= !!prerenderManifest.routes[toRoute(pathname)]\n    }\n\n    // Toggle whether or not this is a Data request\n    const isNextDataRequest =\n      !!(\n        getRequestMeta(req, 'isNextDataReq') ||\n        (req.headers['x-nextjs-data'] &&\n          (this.serverOptions as any).webServerConfig)\n      ) &&\n      (isSSG || hasServerProps)\n\n    /**\n     * If true, this indicates that the request being made is for an app\n     * prefetch request.\n     */\n    const isPrefetchRSCRequest =\n      getRequestMeta(req, 'isPrefetchRSCRequest') ?? false\n\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    // when we are handling a middleware prefetch and it doesn't\n    // resolve to a static data route we bail early to avoid\n    // unexpected SSR invocations\n    if (\n      !isSSG &&\n      req.headers['x-middleware-prefetch'] &&\n      !(is404Page || pathname === '/_error')\n    ) {\n      res.setHeader(MATCHED_PATH_HEADER, pathname)\n      res.setHeader('x-middleware-skip', '1')\n      res.setHeader(\n        'cache-control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n      res.body('{}').send()\n      return null\n    }\n\n    // normalize req.url for SSG paths as it is not exposed\n    // to getStaticProps and the asPath should not expose /_next/data\n    if (\n      isSSG &&\n      this.minimalMode &&\n      req.headers[MATCHED_PATH_HEADER] &&\n      req.url.startsWith('/_next/data')\n    ) {\n      req.url = this.stripNextDataPath(req.url)\n    }\n\n    const locale = getRequestMeta(req, 'locale')\n    const defaultLocale = isSSG\n      ? this.nextConfig.i18n?.defaultLocale\n      : getRequestMeta(req, 'defaultLocale')\n\n    if (\n      !!req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${locale ? `/${locale}` : ''}${pathname}`\n      )\n    }\n\n    let routeModule: RouteModule | undefined\n    if (components.routeModule) {\n      routeModule = components.routeModule\n    }\n\n    /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */\n    const couldSupportPPR: boolean =\n      this.isAppPPREnabled &&\n      typeof routeModule !== 'undefined' &&\n      isAppPageRouteModule(routeModule)\n\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =\n      process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' &&\n      typeof query.__nextppronly !== 'undefined' &&\n      couldSupportPPR\n\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery =\n      hasDebugStaticShellQuery && query.__nextppronly === 'fallback'\n\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled: boolean =\n      couldSupportPPR &&\n      ((\n        prerenderManifest.routes[pathname] ??\n        prerenderManifest.dynamicRoutes[pathname]\n      )?.renderingMode === 'PARTIALLY_STATIC' ||\n        // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        (hasDebugStaticShellQuery &&\n          (this.renderOpts.dev === true ||\n            this.experimentalTestProxy === true)))\n\n    const isDebugStaticShell: boolean =\n      hasDebugStaticShellQuery && isRoutePPREnabled\n\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses =\n      isDebugStaticShell && this.renderOpts.dev === true\n\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled\n\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled\n      ? getRequestMeta(req, 'postponed')\n      : undefined\n\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest =\n      isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest\n\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = getRequestMeta(\n      req,\n      'segmentPrefetchRSCRequest'\n    )\n\n    const isHtmlBot = isHtmlBotRequest(req)\n    if (isHtmlBot && isRoutePPREnabled) {\n      isSSG = false\n      this.renderOpts.serveStreamingMetadata = false\n    }\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isNextDataRequest && !isRSCRequest) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.slice(1), 10)\n    }\n\n    if (\n      // Server actions can use non-GET/HEAD methods.\n      !isPossibleServerAction &&\n      // Resume can use non-GET/HEAD methods.\n      !minimalPostponed &&\n      !is404Page &&\n      !is500Page &&\n      pathname !== '/_error' &&\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      (typeof components.Component === 'string' || isSSG)\n    ) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      res.body('Method Not Allowed').send()\n      return null\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        type: 'html',\n        // TODO: Static pages should be serialized as RenderResult\n        body: RenderResult.fromStatic(components.Component),\n      }\n    }\n\n    // Ensure that if the `amp` query parameter is falsy that we remove it from\n    // the query object. This ensures it won't be found by the `in` operator.\n    if ('amp' in query && !query.amp) delete query.amp\n\n    if (opts.supportsDynamicResponse === true) {\n      const ua = req.headers['user-agent'] || ''\n      const isBotRequest = isBot(ua)\n      const isSupportedDocument =\n        typeof components.Document?.getInitialProps !== 'function' ||\n        // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n        NEXT_BUILTIN_DOCUMENT in components.Document\n\n      // Disable dynamic HTML in cases that we know it won't be generated,\n      // so that we can continue generating a cache key when possible.\n      // TODO-APP: should the first render for a dynamic app path\n      // be static so we can collect revalidate and populate the\n      // cache if there are no dynamic data requirements\n      opts.supportsDynamicResponse =\n        !isSSG && !isBotRequest && !query.amp && isSupportedDocument\n    }\n\n    // In development, we always want to generate dynamic HTML.\n    if (!isNextDataRequest && isAppPath && opts.dev) {\n      opts.supportsDynamicResponse = true\n    }\n\n    const locales = this.nextConfig.i18n?.locales\n\n    let previewData: PreviewData\n    let isPreviewMode = false\n\n    if (hasServerProps || isSSG || isAppPath) {\n      // For the edge runtime, we don't support preview mode in SSG.\n      if (process.env.NEXT_RUNTIME !== 'edge') {\n        const { tryGetPreviewData } =\n          require('./api-utils/node/try-get-preview-data') as typeof import('./api-utils/node/try-get-preview-data')\n        previewData = tryGetPreviewData(\n          req,\n          res,\n          this.renderOpts.previewProps,\n          !!this.nextConfig.experimental.multiZoneDraftMode\n        )\n        isPreviewMode = previewData !== false\n      }\n    }\n\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (\n      isAppPath &&\n      !opts.dev &&\n      !isPreviewMode &&\n      isSSG &&\n      isRSCRequest &&\n      !isDynamicRSCRequest &&\n      (!isEdgeRuntime(opts.runtime) ||\n        (this.serverOptions as any).webServerConfig)\n    ) {\n      stripFlightHeaders(req.headers)\n    }\n\n    let { isOnDemandRevalidate, revalidateOnlyGenerated } =\n      checkIsOnDemandRevalidate(req, this.renderOpts.previewProps)\n\n    if (isSSG && this.minimalMode && req.headers[MATCHED_PATH_HEADER]) {\n      // the url value is already correct when the matched-path header is set\n      resolvedUrlPathname = urlPathname\n    }\n\n    urlPathname = removeTrailingSlash(urlPathname)\n    resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname)\n    if (this.localeNormalizer) {\n      resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname)\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n      }\n      const statusCode = getRedirectStatus(redirect)\n      const { basePath } = this.nextConfig\n\n      if (\n        basePath &&\n        redirect.basePath !== false &&\n        redirect.destination.startsWith('/')\n      ) {\n        redirect.destination = `${basePath}${redirect.destination}`\n      }\n\n      if (redirect.destination.startsWith('/')) {\n        redirect.destination = normalizeRepeatedSlashes(redirect.destination)\n      }\n\n      res\n        .redirect(redirect.destination, statusCode)\n        .body(redirect.destination)\n        .send()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isNextDataRequest) {\n      resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname)\n      urlPathname = this.stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey: string | null = null\n    if (\n      !isPreviewMode &&\n      isSSG &&\n      !opts.supportsDynamicResponse &&\n      !isPossibleServerAction &&\n      !minimalPostponed &&\n      !isDynamicRSCRequest\n    ) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${\n        (pathname === '/' || resolvedUrlPathname === '/') && locale\n          ? ''\n          : resolvedUrlPathname\n      }${query.amp ? '.amp' : ''}`\n    }\n\n    if ((is404Page || is500Page) && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    if (ssgCacheKey) {\n      ssgCacheKey = decodePathParams(ssgCacheKey)\n\n      // ensure /index and / is normalized to one key\n      ssgCacheKey =\n        ssgCacheKey === '/index' && pathname === '/' ? '/' : ssgCacheKey\n    }\n    let protocol: 'http:' | 'https:' = 'https:'\n\n    try {\n      const parsedFullUrl = new URL(\n        getRequestMeta(req, 'initURL') || '/',\n        'http://n'\n      )\n      protocol = parsedFullUrl.protocol as 'https:' | 'http:'\n    } catch {}\n\n    // use existing incrementalCache instance if available\n    const incrementalCache: import('./lib/incremental-cache').IncrementalCache =\n      (globalThis as any).__incrementalCache ||\n      (await this.getIncrementalCache({\n        requestHeaders: Object.assign({}, req.headers),\n        requestProtocol: protocol.substring(0, protocol.length - 1) as\n          | 'http'\n          | 'https',\n      }))\n\n    // TODO: investigate, this is not safe across multiple concurrent requests\n    incrementalCache.resetRequestCache()\n\n    type RendererContext = {\n      /**\n       * The postponed data for this render. This is only provided when resuming\n       * a render that has been postponed.\n       */\n      postponed: string | undefined\n\n      pagesFallback: boolean | undefined\n\n      /**\n       * The unknown route params for this render.\n       */\n      fallbackRouteParams: FallbackRouteParams | null\n    }\n    type Renderer = (\n      context: RendererContext\n    ) => Promise<ResponseCacheEntry | null>\n\n    const doRender: Renderer = async ({\n      postponed,\n      pagesFallback = false,\n      fallbackRouteParams,\n    }) => {\n      // In development, we always want to generate dynamic HTML.\n      let supportsDynamicResponse: boolean =\n        // If we're in development, we always support dynamic HTML, unless it's\n        // a data request, in which case we only produce static HTML.\n        (!isNextDataRequest && opts.dev === true) ||\n        // If this is not SSG or does not have static paths, then it supports\n        // dynamic HTML.\n        (!isSSG && !hasGetStaticPaths) ||\n        // If this request has provided postponed data, it supports dynamic\n        // HTML.\n        typeof postponed === 'string' ||\n        // If this is a dynamic RSC request, then this render supports dynamic\n        // HTML (it's dynamic).\n        isDynamicRSCRequest\n\n      const origQuery = parseUrl(req.url || '', true).query\n\n      // clear any dynamic route params so they aren't in\n      // the resolvedUrl\n      if (opts.params) {\n        Object.keys(opts.params).forEach((key) => {\n          delete origQuery[key]\n        })\n      }\n      const hadTrailingSlash =\n        urlPathname !== '/' && this.nextConfig.trailingSlash\n\n      const resolvedUrl = formatUrl({\n        pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n        // make sure to only add query values from original URL\n        query: origQuery,\n      })\n\n      // When html bots request PPR page, perform the full dynamic rendering.\n      const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled\n\n      const renderOpts: LoadedRenderOpts = {\n        ...components,\n        ...opts,\n        ...(isAppPath\n          ? {\n              incrementalCache,\n              // This is a revalidation request if the request is for a static\n              // page and it is not being resumed from a postponed render and\n              // it is not a dynamic RSC request then it is a revalidation\n              // request.\n              isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n              serverActions: this.nextConfig.experimental.serverActions,\n            }\n          : {}),\n        isNextDataRequest,\n        resolvedUrl,\n        locale,\n        locales,\n        defaultLocale,\n        multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n        // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n        // and not the resolved URL to prevent a hydration mismatch on\n        // asPath\n        resolvedAsPath:\n          hasServerProps || hasGetInitialProps\n            ? formatUrl({\n                // we use the original URL pathname less the _next/data prefix if\n                // present\n                pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                query: origQuery,\n              })\n            : resolvedUrl,\n        experimental: {\n          ...opts.experimental,\n          isRoutePPREnabled,\n        },\n        supportsDynamicResponse,\n        shouldWaitOnAllReady,\n        isOnDemandRevalidate,\n        isDraftMode: isPreviewMode,\n        isPossibleServerAction,\n        postponed,\n        waitUntil: this.getWaitUntil(),\n        onClose: res.onClose.bind(res),\n        onAfterTaskError: undefined,\n        // only available in dev\n        setIsrStatus: (this as any).setIsrStatus,\n      }\n\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        supportsDynamicResponse = false\n        renderOpts.nextExport = true\n        renderOpts.supportsDynamicResponse = false\n        renderOpts.isStaticGeneration = true\n        renderOpts.isRevalidate = true\n        renderOpts.isDebugDynamicAccesses = isDebugDynamicAccesses\n      }\n\n      // Legacy render methods will return a render result that needs to be\n      // served by the server.\n      let result: RenderResult\n\n      if (routeModule) {\n        if (isAppRouteRouteModule(routeModule)) {\n          if (\n            // The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME === 'edge' ||\n            !isNodeNextRequest(req) ||\n            !isNodeNextResponse(res)\n          ) {\n            throw new Error(\n              'Invariant: App Route Route Modules cannot be used in the edge runtime'\n            )\n          }\n\n          const context: AppRouteRouteHandlerContext = {\n            params: opts.params,\n            prerenderManifest,\n            renderOpts: {\n              experimental: {\n                dynamicIO: renderOpts.experimental.dynamicIO,\n                authInterrupts: renderOpts.experimental.authInterrupts,\n              },\n              supportsDynamicResponse,\n              incrementalCache,\n              cacheLifeProfiles: this.nextConfig.experimental?.cacheLife,\n              isRevalidate: isSSG,\n              waitUntil: this.getWaitUntil(),\n              onClose: res.onClose.bind(res),\n              onAfterTaskError: undefined,\n              onInstrumentationRequestError:\n                this.renderOpts.onInstrumentationRequestError,\n            },\n            sharedContext: {\n              buildId: this.buildId,\n            },\n          }\n\n          try {\n            const request = NextRequestAdapter.fromNodeNextRequest(\n              req,\n              signalFromNodeResponse(res.originalResponse)\n            )\n\n            const response = await routeModule.handle(request, context)\n\n            ;(req as any).fetchMetrics = (\n              context.renderOpts as any\n            ).fetchMetrics\n\n            const cacheTags = context.renderOpts.collectedTags\n\n            // If the request is for a static response, we can cache it so long\n            // as it's not edge.\n            if (isSSG) {\n              const blob = await response.blob()\n\n              // Copy the headers from the response.\n              const headers = toNodeOutgoingHttpHeaders(response.headers)\n\n              if (cacheTags) {\n                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n              }\n\n              if (!headers['content-type'] && blob.type) {\n                headers['content-type'] = blob.type\n              }\n\n              const revalidate =\n                typeof context.renderOpts.collectedRevalidate === 'undefined' ||\n                context.renderOpts.collectedRevalidate >= INFINITE_CACHE\n                  ? false\n                  : context.renderOpts.collectedRevalidate\n\n              const expire =\n                typeof context.renderOpts.collectedExpire === 'undefined' ||\n                context.renderOpts.collectedExpire >= INFINITE_CACHE\n                  ? undefined\n                  : context.renderOpts.collectedExpire\n\n              // Create the cache entry for the response.\n              const cacheEntry: ResponseCacheEntry = {\n                value: {\n                  kind: CachedRouteKind.APP_ROUTE,\n                  status: response.status,\n                  body: Buffer.from(await blob.arrayBuffer()),\n                  headers,\n                },\n                cacheControl: { revalidate, expire },\n                isFallback: false,\n              }\n\n              return cacheEntry\n            }\n            let pendingWaitUntil = context.renderOpts.pendingWaitUntil\n\n            // Attempt using provided waitUntil if available\n            // if it's not we fallback to sendResponse's handling\n            if (pendingWaitUntil) {\n              if (context.renderOpts.waitUntil) {\n                context.renderOpts.waitUntil(pendingWaitUntil)\n                pendingWaitUntil = undefined\n              }\n            }\n\n            // Send the response now that we have copied it into the cache.\n            await sendResponse(\n              req,\n              res,\n              response,\n              context.renderOpts.pendingWaitUntil\n            )\n            return null\n          } catch (err) {\n            await this.instrumentationOnRequestError(err, req, {\n              routerKind: 'App Router',\n              routePath: pathname,\n              routeType: 'route',\n              revalidateReason: getRevalidateReason(renderOpts),\n            })\n\n            // If this is during static generation, throw the error again.\n            if (isSSG) throw err\n\n            Log.error(err)\n\n            // Otherwise, send a 500 response.\n            await sendResponse(req, res, new Response(null, { status: 500 }))\n\n            return null\n          }\n        } else if (\n          isPagesRouteModule(routeModule) ||\n          isAppPageRouteModule(routeModule)\n        ) {\n          // An OPTIONS request to a page handler is invalid.\n          if (req.method === 'OPTIONS' && !is404Page) {\n            await sendResponse(req, res, new Response(null, { status: 400 }))\n            return null\n          }\n\n          if (isPagesRouteModule(routeModule)) {\n            // Due to the way we pass data by mutating `renderOpts`, we can't extend\n            // the object here but only updating its `clientReferenceManifest` and\n            // `nextFontManifest` properties.\n            // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n            renderOpts.nextFontManifest = this.nextFontManifest\n            renderOpts.clientReferenceManifest =\n              components.clientReferenceManifest\n\n            const request = isNodeNextRequest(req) ? req.originalRequest : req\n            const response = isNodeNextResponse(res)\n              ? res.originalResponse\n              : res\n\n            // Call the built-in render method on the module.\n            try {\n              result = await routeModule.render(\n                request as any,\n                response as any,\n                {\n                  page: pathname,\n                  params: opts.params,\n                  query,\n                  renderOpts,\n                  sharedContext: {\n                    buildId: this.buildId,\n                    deploymentId: this.nextConfig.deploymentId,\n                    customServer: this.serverOptions.customServer || undefined,\n                  },\n                  renderContext: {\n                    isFallback: pagesFallback,\n                    isDraftMode: renderOpts.isDraftMode,\n                    developmentNotFoundSourcePage: getRequestMeta(\n                      req,\n                      'developmentNotFoundSourcePage'\n                    ),\n                  },\n                }\n              )\n            } catch (err) {\n              await this.instrumentationOnRequestError(err, req, {\n                routerKind: 'Pages Router',\n                routePath: pathname,\n                routeType: 'render',\n                revalidateReason: getRevalidateReason({\n                  isRevalidate: isSSG,\n                  isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n                }),\n              })\n              throw err\n            }\n          } else {\n            const module = components.routeModule as AppPageRouteModule\n\n            // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n            // object here but only updating its `nextFontManifest` field.\n            // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n            renderOpts.nextFontManifest = this.nextFontManifest\n\n            const context: AppPageRouteHandlerContext = {\n              page: is404Page ? '/404' : pathname,\n              params: opts.params,\n              query,\n              fallbackRouteParams,\n              renderOpts,\n              serverComponentsHmrCache: this.getServerComponentsHmrCache(),\n              sharedContext: {\n                buildId: this.buildId,\n              },\n            }\n\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (\n              this.nextConfig.experimental.dynamicIO &&\n              this.renderOpts.dev &&\n              !isPrefetchRSCRequest &&\n              !isPossibleServerAction\n            ) {\n              const warmup = await module.warmup(req, res, context)\n\n              // If the warmup is successful, we should use the resume data\n              // cache from the warmup.\n              if (warmup.metadata.devRenderResumeDataCache) {\n                renderOpts.devRenderResumeDataCache =\n                  warmup.metadata.devRenderResumeDataCache\n              }\n            }\n\n            // Call the built-in render method on the module.\n            result = await module.render(req, res, context)\n          }\n        } else {\n          throw new Error('Invariant: Unknown route module type')\n        }\n      } else {\n        // If we didn't match a page, we should fallback to using the legacy\n        // render method.\n        result = await this.renderHTML(req, res, pathname, query, renderOpts)\n      }\n\n      const { metadata } = result\n\n      const {\n        cacheControl,\n        headers = {},\n        // Add any fetch tags that were on the page to the response headers.\n        fetchTags: cacheTags,\n      } = metadata\n\n      if (cacheTags) {\n        headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n      }\n\n      // Pull any fetch metrics from the render onto the request.\n      ;(req as any).fetchMetrics = metadata.fetchMetrics\n\n      // we don't throw static to dynamic errors in dev as isSSG\n      // is a best guess in dev since we don't have the prerender pass\n      // to know whether the path is actually static or not\n      if (\n        isAppPath &&\n        isSSG &&\n        cacheControl?.revalidate === 0 &&\n        !this.renderOpts.dev &&\n        !isRoutePPREnabled\n      ) {\n        const staticBailoutInfo = metadata.staticBailoutInfo\n\n        const err = new Error(\n          `Page changed from static to dynamic at runtime ${urlPathname}${\n            staticBailoutInfo?.description\n              ? `, reason: ${staticBailoutInfo.description}`\n              : ``\n          }` +\n            `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`\n        )\n\n        if (staticBailoutInfo?.stack) {\n          const stack = staticBailoutInfo.stack\n          err.stack = err.message + stack.substring(stack.indexOf('\\n'))\n        }\n\n        throw err\n      }\n\n      // Based on the metadata, we can determine what kind of cache result we\n      // should return.\n\n      // Handle `isNotFound`.\n      if ('isNotFound' in metadata && metadata.isNotFound) {\n        return {\n          value: null,\n          cacheControl,\n          isFallback: false,\n        } satisfies ResponseCacheEntry\n      }\n\n      // Handle `isRedirect`.\n      if (metadata.isRedirect) {\n        return {\n          value: {\n            kind: CachedRouteKind.REDIRECT,\n            props: metadata.pageData ?? metadata.flightData,\n          } satisfies CachedRedirectValue,\n          cacheControl,\n          isFallback: false,\n        } satisfies ResponseCacheEntry\n      }\n\n      // Handle `isNull`.\n      if (result.isNull) {\n        return null\n      }\n\n      // We now have a valid HTML result that we can return to the user.\n      if (isAppPath) {\n        return {\n          value: {\n            kind: CachedRouteKind.APP_PAGE,\n            html: result,\n            headers,\n            rscData: metadata.flightData,\n            postponed: metadata.postponed,\n            status: res.statusCode,\n            segmentData: metadata.segmentData,\n          } satisfies CachedAppPageValue,\n          cacheControl,\n          isFallback: !!fallbackRouteParams,\n        } satisfies ResponseCacheEntry\n      }\n\n      return {\n        value: {\n          kind: CachedRouteKind.PAGES,\n          html: result,\n          pageData: metadata.pageData ?? metadata.flightData,\n          headers,\n          status: isAppPath ? res.statusCode : undefined,\n        } satisfies CachedPageValue,\n        cacheControl,\n        isFallback: pagesFallback,\n      }\n    }\n\n    let responseGenerator: ResponseGenerator = async ({\n      hasResolved,\n      previousCacheEntry,\n      isRevalidating,\n    }): Promise<ResponseCacheEntry | null> => {\n      const isProduction = !this.renderOpts.dev\n      const didRespond = hasResolved || res.sent\n\n      // If we haven't found the static paths for the route, then do it now.\n      if (!staticPaths && isDynamic) {\n        if (hasGetStaticPaths) {\n          const pathsResult = await this.getStaticPaths({\n            pathname,\n            requestHeaders: req.headers,\n            isAppPath,\n            page: components.page,\n          })\n\n          staticPaths = pathsResult.staticPaths\n          fallbackMode = pathsResult.fallbackMode\n        } else {\n          staticPaths = undefined\n          fallbackMode = FallbackMode.NOT_FOUND\n        }\n      }\n\n      // When serving a bot request, we want to serve a blocking render and not\n      // the prerendered page. This ensures that the correct content is served\n      // to the bot in the head.\n      if (\n        fallbackMode === FallbackMode.PRERENDER &&\n        isBot(req.headers['user-agent'] || '')\n      ) {\n        fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER\n      }\n\n      // skip on-demand revalidate if cache is not present and\n      // revalidate-if-generated is set\n      if (\n        isOnDemandRevalidate &&\n        revalidateOnlyGenerated &&\n        !previousCacheEntry &&\n        !this.minimalMode\n      ) {\n        await this.render404(req, res)\n        return null\n      }\n\n      if (previousCacheEntry?.isStale === -1) {\n        isOnDemandRevalidate = true\n      }\n\n      // TODO: adapt for PPR\n      // only allow on-demand revalidate for fallback: true/blocking\n      // or for prerendered fallback: false paths\n      if (\n        isOnDemandRevalidate &&\n        (fallbackMode !== FallbackMode.NOT_FOUND || previousCacheEntry)\n      ) {\n        fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER\n      }\n\n      // We use `ssgCacheKey` here as it is normalized to match the encoding\n      // from getStaticPaths along with including the locale.\n      //\n      // We use the `resolvedUrlPathname` for the development case when this\n      // is an app path since it doesn't include locale information.\n      //\n      // We decode the `resolvedUrlPathname` to correctly match the app path\n      // with prerendered paths.\n      let staticPathKey = ssgCacheKey\n      if (!staticPathKey && opts.dev && isAppPath) {\n        staticPathKey = decodePathParams(resolvedUrlPathname)\n      }\n      if (staticPathKey && query.amp) {\n        staticPathKey = staticPathKey.replace(/\\.amp$/, '')\n      }\n\n      const isPageIncludedInStaticPaths =\n        staticPathKey && staticPaths?.includes(staticPathKey)\n\n      // When experimental compile is used, no pages have been prerendered,\n      // so they should all be blocking.\n\n      // @ts-expect-error internal field\n      if (this.nextConfig.experimental.isExperimentalCompile) {\n        fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER\n      }\n\n      // When we did not respond from cache, we need to choose to block on\n      // rendering or return a skeleton.\n      //\n      // - Data requests always block.\n      // - Blocking mode fallback always blocks.\n      // - Preview mode toggles all pages to be resolved in a blocking manner.\n      // - Non-dynamic pages should block (though this is an impossible\n      //   case in production).\n      // - Dynamic pages should return their skeleton if not defined in\n      //   getStaticPaths, then finish the data request on the client-side.\n      //\n      if (\n        process.env.NEXT_RUNTIME !== 'edge' &&\n        !this.minimalMode &&\n        fallbackMode !== FallbackMode.BLOCKING_STATIC_RENDER &&\n        staticPathKey &&\n        !didRespond &&\n        !isPreviewMode &&\n        isDynamic &&\n        (isProduction || !staticPaths || !isPageIncludedInStaticPaths)\n      ) {\n        if (\n          // In development, fall through to render to handle missing\n          // getStaticPaths.\n          (isProduction || (staticPaths && staticPaths?.length > 0)) &&\n          // When fallback isn't present, abort this render so we 404\n          fallbackMode === FallbackMode.NOT_FOUND\n        ) {\n          throw new NoFallbackError()\n        }\n\n        let fallbackResponse: ResponseCacheEntry | null | undefined\n\n        // If this is a pages router page.\n        if (isPagesRouteModule(components.routeModule) && !isNextDataRequest) {\n          // We use the response cache here to handle the revalidation and\n          // management of the fallback shell.\n          fallbackResponse = await this.responseCache.get(\n            isProduction ? (locale ? `/${locale}${pathname}` : pathname) : null,\n            // This is the response generator for the fallback shell.\n            async ({\n              previousCacheEntry: previousFallbackCacheEntry = null,\n            }) => {\n              // For the pages router, fallbacks cannot be revalidated or\n              // generated in production. In the case of a missing fallback,\n              // we return null, but if it's being revalidated, we just return\n              // the previous fallback cache entry. This preserves the previous\n              // behavior.\n              if (isProduction) {\n                return toResponseCacheEntry(previousFallbackCacheEntry)\n              }\n\n              // We pass `undefined` and `null` as it doesn't apply to the pages\n              // router.\n              return doRender({\n                postponed: undefined,\n                // For the pages router, fallbacks can only be generated on\n                // demand in development, so if we're not in production, and we\n                // aren't a app path.\n                pagesFallback: true,\n                fallbackRouteParams: null,\n              })\n            },\n            {\n              routeKind: RouteKind.PAGES,\n              incrementalCache,\n              isRoutePPREnabled,\n              isFallback: true,\n            }\n          )\n        }\n        // If this is a app router page, PPR is enabled, and PFPR is also\n        // enabled, then we should use the fallback renderer.\n        else if (\n          isRoutePPREnabled &&\n          isAppPageRouteModule(components.routeModule) &&\n          !isRSCRequest\n        ) {\n          // We use the response cache here to handle the revalidation and\n          // management of the fallback shell.\n          fallbackResponse = await this.responseCache.get(\n            isProduction ? pathname : null,\n            // This is the response generator for the fallback shell.\n            async () =>\n              doRender({\n                // We pass `undefined` as rendering a fallback isn't resumed\n                // here.\n                postponed: undefined,\n                pagesFallback: undefined,\n                fallbackRouteParams:\n                  // If we're in production of we're debugging the fallback\n                  // shell then we should postpone when dynamic params are\n                  // accessed.\n                  isProduction || isDebugFallbackShell\n                    ? getFallbackRouteParams(pathname)\n                    : null,\n              }),\n            {\n              routeKind: RouteKind.APP_PAGE,\n              incrementalCache,\n              isRoutePPREnabled,\n              isFallback: true,\n            }\n          )\n        }\n\n        // If the fallback response was set to null, then we should return null.\n        if (fallbackResponse === null) return null\n\n        // Otherwise, if we did get a fallback response, we should return it.\n        if (fallbackResponse) {\n          // Remove the cache control from the response to prevent it from being\n          // used in the surrounding cache.\n          delete fallbackResponse.cacheControl\n\n          return fallbackResponse\n        }\n      }\n\n      // Only requests that aren't revalidating can be resumed. If we have the\n      // minimal postponed data, then we should resume the render with it.\n      const postponed =\n        !isOnDemandRevalidate && !isRevalidating && minimalPostponed\n          ? minimalPostponed\n          : undefined\n\n      // When we're in minimal mode, if we're trying to debug the static shell,\n      // we should just return nothing instead of resuming the dynamic render.\n      if (\n        (isDebugStaticShell || isDebugDynamicAccesses) &&\n        typeof postponed !== 'undefined'\n      ) {\n        return {\n          cacheControl: { revalidate: 1, expire: undefined },\n          isFallback: false,\n          value: {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(''),\n            pageData: {},\n            headers: undefined,\n            status: undefined,\n          } satisfies CachedPageValue,\n        }\n      }\n\n      // If this is a dynamic route with PPR enabled and the default route\n      // matches were set, then we should pass the fallback route params to\n      // the renderer as this is a fallback revalidation request.\n      const fallbackRouteParams =\n        isDynamic &&\n        isRoutePPREnabled &&\n        (getRequestMeta(req, 'didSetDefaultRouteMatches') ||\n          isDebugFallbackShell)\n          ? getFallbackRouteParams(pathname)\n          : null\n\n      // Perform the render.\n      return doRender({\n        postponed,\n        pagesFallback: undefined,\n        fallbackRouteParams,\n      })\n    }\n\n    const cacheEntry = await this.responseCache.get(\n      ssgCacheKey,\n      responseGenerator,\n      {\n        routeKind:\n          // If the route module is not defined, we can assume it's a page being\n          // rendered and thus check isAppPath.\n          routeModule?.definition.kind ??\n          (isAppPath ? RouteKind.APP_PAGE : RouteKind.PAGES),\n        incrementalCache,\n        isOnDemandRevalidate,\n        isPrefetch: req.headers.purpose === 'prefetch',\n        isRoutePPREnabled,\n      }\n    )\n\n    if (isPreviewMode) {\n      res.setHeader(\n        'Cache-Control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    if (!cacheEntry) {\n      if (ssgCacheKey && !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n        // A cache entry might not be generated if a response is written\n        // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n        // have a cache key. If we do have a cache key but we don't end up\n        // with a cache entry, then either Next.js or the application has a\n        // bug that needs fixing.\n        throw new Error('invariant: cache entry required but not generated')\n      }\n      return null\n    }\n\n    // If we're not in minimal mode and the cache entry that was returned was a\n    // app page fallback, then we need to kick off the dynamic shell generation.\n    if (\n      ssgCacheKey &&\n      !this.minimalMode &&\n      isRoutePPREnabled &&\n      cacheEntry.value?.kind === CachedRouteKind.APP_PAGE &&\n      cacheEntry.isFallback &&\n      !isOnDemandRevalidate &&\n      // When we're debugging the fallback shell, we don't want to regenerate\n      // the route shell.\n      !isDebugFallbackShell &&\n      process.env.DISABLE_ROUTE_SHELL_GENERATION !== 'true'\n    ) {\n      scheduleOnNextTick(async () => {\n        try {\n          await this.responseCache.get(\n            ssgCacheKey,\n            () =>\n              doRender({\n                // We're an on-demand request, so we don't need to pass in the\n                // fallbackRouteParams.\n                fallbackRouteParams: null,\n                pagesFallback: undefined,\n                postponed: undefined,\n              }),\n            {\n              routeKind: RouteKind.APP_PAGE,\n              incrementalCache,\n              isOnDemandRevalidate: true,\n              isPrefetch: false,\n              isRoutePPREnabled: true,\n            }\n          )\n        } catch (err) {\n          console.error('Error occurred while rendering dynamic shell', err)\n        }\n      })\n    }\n\n    const didPostpone =\n      cacheEntry.value?.kind === CachedRouteKind.APP_PAGE &&\n      typeof cacheEntry.value.postponed === 'string'\n\n    if (\n      isSSG &&\n      // We don't want to send a cache header for requests that contain dynamic\n      // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n      // request, then we should set the cache header.\n      !isDynamicRSCRequest &&\n      (!didPostpone || isPrefetchRSCRequest)\n    ) {\n      if (!this.minimalMode) {\n        // set x-nextjs-cache header to match the header\n        // we set for the image-optimizer\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : cacheEntry.isMiss\n              ? 'MISS'\n              : cacheEntry.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n      // Set a header used by the client router to signal the response is static\n      // and should respect the `static` cache staleTime value.\n      res.setHeader(NEXT_IS_PRERENDER_HEADER, '1')\n    }\n\n    const { value: cachedData } = cacheEntry\n\n    // If the cache value is an image, we should error early.\n    if (cachedData?.kind === CachedRouteKind.IMAGE) {\n      throw new InvariantError('SSG should not return an image cache value')\n    }\n\n    // Coerce the cache control parameter from the render.\n    let cacheControl: CacheControl | undefined\n\n    // If this is a resume request in minimal mode it is streamed with dynamic\n    // content and should not be cached.\n    if (minimalPostponed) {\n      cacheControl = { revalidate: 0, expire: undefined }\n    }\n\n    // If this is in minimal mode and this is a flight request that isn't a\n    // prefetch request while PPR is enabled, it cannot be cached as it contains\n    // dynamic content.\n    else if (\n      this.minimalMode &&\n      isRSCRequest &&\n      !isPrefetchRSCRequest &&\n      isRoutePPREnabled\n    ) {\n      cacheControl = { revalidate: 0, expire: undefined }\n    } else if (!this.renderOpts.dev || (hasServerProps && !isNextDataRequest)) {\n      // If this is a preview mode request, we shouldn't cache it\n      if (isPreviewMode) {\n        cacheControl = { revalidate: 0, expire: undefined }\n      }\n\n      // If this isn't SSG, then we should set change the header only if it is\n      // not set already.\n      else if (!isSSG) {\n        if (!res.getHeader('Cache-Control')) {\n          cacheControl = { revalidate: 0, expire: undefined }\n        }\n      }\n\n      // If we are rendering the 404 page we derive the cache-control\n      // revalidate period from the value that trigged the not found\n      // to be rendered. So if `getStaticProps` returns\n      // { notFound: true, revalidate 60 } the revalidate period should\n      // be 60 but if a static asset 404s directly it should have a revalidate\n      // period of 0 so that it doesn't get cached unexpectedly by a CDN\n      else if (is404Page) {\n        const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate')\n\n        cacheControl = {\n          revalidate:\n            typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate,\n          expire: undefined,\n        }\n      } else if (is500Page) {\n        cacheControl = { revalidate: 0, expire: undefined }\n      } else if (cacheEntry.cacheControl) {\n        // If the cache entry has a cache control with a revalidate value that's\n        // a number, use it.\n        if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n          if (cacheEntry.cacheControl.revalidate < 1) {\n            throw new Error(\n              `Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`\n            )\n          }\n\n          cacheControl = {\n            revalidate: cacheEntry.cacheControl.revalidate,\n            expire:\n              cacheEntry.cacheControl?.expire ?? this.nextConfig.expireTime,\n          }\n        }\n        // Otherwise if the revalidate value is false, then we should use the\n        // cache time of one year.\n        else {\n          cacheControl = { revalidate: CACHE_ONE_YEAR, expire: undefined }\n        }\n      }\n    }\n\n    cacheEntry.cacheControl = cacheControl\n\n    if (\n      typeof segmentPrefetchHeader === 'string' &&\n      cachedData?.kind === CachedRouteKind.APP_PAGE &&\n      cachedData.segmentData\n    ) {\n      // This is a prefetch request issued by the client Segment Cache. These\n      // should never reach the application layer (lambda). We should either\n      // respond from the cache (HIT) or respond with 204 No Content (MISS).\n\n      // Set a header to indicate that PPR is enabled for this route. This\n      // lets the client distinguish between a regular cache miss and a cache\n      // miss due to PPR being disabled. In other contexts this header is used\n      // to indicate that the response contains dynamic data, but here we're\n      // only using it to indicate that the feature is enabled — the segment\n      // response itself contains whether the data is dynamic.\n      res.setHeader(NEXT_DID_POSTPONE_HEADER, '2')\n\n      // Add the cache tags header to the response if it exists and we're in\n      // minimal mode while rendering a static page.\n      const tags = cachedData.headers?.[NEXT_CACHE_TAGS_HEADER]\n      if (this.minimalMode && isSSG && tags && typeof tags === 'string') {\n        res.setHeader(NEXT_CACHE_TAGS_HEADER, tags)\n      }\n\n      const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader)\n      if (matchedSegment !== undefined) {\n        // Cache hit\n        return {\n          type: 'rsc',\n          body: RenderResult.fromStatic(matchedSegment),\n          // TODO: Eventually this should use cache control of the individual\n          // segment, not the whole page.\n          cacheControl: cacheEntry.cacheControl,\n        }\n      }\n\n      // Cache miss. Either a cache entry for this route has not been generated\n      // (which technically should not be possible when PPR is enabled, because\n      // at a minimum there should always be a fallback entry) or there's no\n      // match for the requested segment. Respond with a 204 No Content. We\n      // don't bother to respond with 404, because these requests are only\n      // issued as part of a prefetch.\n      res.statusCode = 204\n      return {\n        type: 'rsc',\n        body: RenderResult.fromStatic(''),\n        cacheControl: cacheEntry?.cacheControl,\n      }\n    }\n\n    // If there's a callback for `onCacheEntry`, call it with the cache entry\n    // and the revalidate options.\n    const onCacheEntry = getRequestMeta(req, 'onCacheEntry')\n    if (onCacheEntry) {\n      const finished = await onCacheEntry(\n        {\n          ...cacheEntry,\n          // TODO: remove this when upstream doesn't\n          // always expect this value to be \"PAGE\"\n          value: {\n            ...cacheEntry.value,\n            kind:\n              cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n                ? 'PAGE'\n                : cacheEntry.value?.kind,\n          },\n        },\n        {\n          url: getRequestMeta(req, 'initURL'),\n        }\n      )\n      if (finished) {\n        // TODO: maybe we have to end the request?\n        return null\n      }\n    }\n\n    if (!cachedData) {\n      // add revalidate metadata before rendering 404 page\n      // so that we can use this as source of truth for the\n      // cache-control header instead of what the 404 page returns\n      // for the revalidate value\n      addRequestMeta(\n        req,\n        'notFoundRevalidate',\n        cacheEntry.cacheControl?.revalidate\n      )\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (cacheEntry.cacheControl && !res.getHeader('Cache-Control')) {\n        res.setHeader(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n      if (isNextDataRequest) {\n        res.statusCode = 404\n        res.body('{\"notFound\":true}').send()\n        return null\n      }\n\n      if (this.renderOpts.dev) {\n        addRequestMeta(req, 'developmentNotFoundSourcePage', pathname)\n      }\n      await this.render404(req, res, { pathname, query }, false)\n      return null\n    } else if (cachedData.kind === CachedRouteKind.REDIRECT) {\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (cacheEntry.cacheControl && !res.getHeader('Cache-Control')) {\n        res.setHeader(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      if (isNextDataRequest) {\n        return {\n          type: 'json',\n          body: RenderResult.fromStatic(\n            // @TODO: Handle flight data.\n            JSON.stringify(cachedData.props)\n          ),\n          cacheControl: cacheEntry.cacheControl,\n        }\n      } else {\n        await handleRedirect(cachedData.props)\n        return null\n      }\n    } else if (cachedData.kind === CachedRouteKind.APP_ROUTE) {\n      const headers = fromNodeOutgoingHttpHeaders(cachedData.headers)\n\n      if (!(this.minimalMode && isSSG)) {\n        headers.delete(NEXT_CACHE_TAGS_HEADER)\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (\n        cacheEntry.cacheControl &&\n        !res.getHeader('Cache-Control') &&\n        !headers.get('Cache-Control')\n      ) {\n        headers.set(\n          'Cache-Control',\n          getCacheControlHeader(cacheEntry.cacheControl)\n        )\n      }\n\n      await sendResponse(\n        req,\n        res,\n        new Response(cachedData.body, {\n          headers,\n          status: cachedData.status || 200,\n        })\n      )\n      return null\n    } else if (cachedData.kind === CachedRouteKind.APP_PAGE) {\n      // If the request has a postponed state and it's a resume request we\n      // should error.\n      if (didPostpone && minimalPostponed) {\n        throw new Error(\n          'Invariant: postponed state should not be present on a resume request'\n        )\n      }\n\n      if (cachedData.headers) {\n        const headers = { ...cachedData.headers }\n\n        if (!this.minimalMode || !isSSG) {\n          delete headers[NEXT_CACHE_TAGS_HEADER]\n        }\n\n        for (let [key, value] of Object.entries(headers)) {\n          if (typeof value === 'undefined') continue\n\n          if (Array.isArray(value)) {\n            for (const v of value) {\n              res.appendHeader(key, v)\n            }\n          } else if (typeof value === 'number') {\n            value = value.toString()\n            res.appendHeader(key, value)\n          } else {\n            res.appendHeader(key, value)\n          }\n        }\n      }\n\n      // Add the cache tags header to the response if it exists and we're in\n      // minimal mode while rendering a static page.\n      const tags = cachedData.headers?.[NEXT_CACHE_TAGS_HEADER]\n      if (this.minimalMode && isSSG && tags && typeof tags === 'string') {\n        res.setHeader(NEXT_CACHE_TAGS_HEADER, tags)\n      }\n\n      // If the request is a data request, then we shouldn't set the status code\n      // from the response because it should always be 200. This should be gated\n      // behind the experimental PPR flag.\n      if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n        res.statusCode = cachedData.status\n      }\n\n      // Mark that the request did postpone.\n      if (didPostpone) {\n        res.setHeader(NEXT_DID_POSTPONE_HEADER, '1')\n      }\n\n      // we don't go through this block when preview mode is true\n      // as preview mode is a dynamic request (bypasses cache) and doesn't\n      // generate both HTML and payloads in the same request so continue to just\n      // return the generated payload\n      if (isRSCRequest && !isPreviewMode) {\n        // If this is a dynamic RSC request, then stream the response.\n        if (typeof cachedData.rscData === 'undefined') {\n          if (cachedData.postponed) {\n            throw new Error('Invariant: Expected postponed to be undefined')\n          }\n\n          return {\n            type: 'rsc',\n            body: cachedData.html,\n            // Dynamic RSC responses cannot be cached, even if they're\n            // configured with `force-static` because we have no way of\n            // distinguishing between `force-static` and pages that have no\n            // postponed state.\n            // TODO: distinguish `force-static` from pages with no postponed state (static)\n            cacheControl: isDynamicRSCRequest\n              ? { revalidate: 0, expire: undefined }\n              : cacheEntry.cacheControl,\n          }\n        }\n\n        // As this isn't a prefetch request, we should serve the static flight\n        // data.\n        return {\n          type: 'rsc',\n          body: RenderResult.fromStatic(cachedData.rscData),\n          cacheControl: cacheEntry.cacheControl,\n        }\n      }\n\n      // This is a request for HTML data.\n      let body = cachedData.html\n\n      // If there's no postponed state, we should just serve the HTML. This\n      // should also be the case for a resume request because it's completed\n      // as a server render (rather than a static render).\n      if (!didPostpone || this.minimalMode) {\n        return {\n          type: 'html',\n          body,\n          cacheControl: cacheEntry.cacheControl,\n        }\n      }\n\n      // If we're debugging the static shell or the dynamic API accesses, we\n      // should just serve the HTML without resuming the render. The returned\n      // HTML will be the static shell so all the Dynamic API's will be used\n      // during static generation.\n      if (isDebugStaticShell || isDebugDynamicAccesses) {\n        // Since we're not resuming the render, we need to at least add the\n        // closing body and html tags to create valid HTML.\n        body.chain(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n              controller.close()\n            },\n          })\n        )\n\n        return {\n          type: 'html',\n          body,\n          cacheControl: { revalidate: 0, expire: undefined },\n        }\n      }\n\n      // This request has postponed, so let's create a new transformer that the\n      // dynamic data can pipe to that will attach the dynamic data to the end\n      // of the response.\n      const transformer = new TransformStream<Uint8Array, Uint8Array>()\n      body.chain(transformer.readable)\n\n      // Perform the render again, but this time, provide the postponed state.\n      // We don't await because we want the result to start streaming now, and\n      // we've already chained the transformer's readable to the render result.\n      doRender({\n        postponed: cachedData.postponed,\n        pagesFallback: undefined,\n        // This is a resume render, not a fallback render, so we don't need to\n        // set this.\n        fallbackRouteParams: null,\n      })\n        .then(async (result) => {\n          if (!result) {\n            throw new Error('Invariant: expected a result to be returned')\n          }\n\n          if (result.value?.kind !== CachedRouteKind.APP_PAGE) {\n            throw new Error(\n              `Invariant: expected a page response, got ${result.value?.kind}`\n            )\n          }\n\n          // Pipe the resume result to the transformer.\n          await result.value.html.pipeTo(transformer.writable)\n        })\n        .catch((err) => {\n          // An error occurred during piping or preparing the render, abort\n          // the transformers writer so we can terminate the stream.\n          transformer.writable.abort(err).catch((e) => {\n            console.error(\"couldn't abort transformer\", e)\n          })\n        })\n\n      return {\n        type: 'html',\n        body,\n        // We don't want to cache the response if it has postponed data because\n        // the response being sent to the client it's dynamic parts are streamed\n        // to the client on the same request.\n        cacheControl: { revalidate: 0, expire: undefined },\n      }\n    } else if (isNextDataRequest) {\n      return {\n        type: 'json',\n        body: RenderResult.fromStatic(JSON.stringify(cachedData.pageData)),\n        cacheControl: cacheEntry.cacheControl,\n      }\n    } else {\n      return {\n        type: 'html',\n        body: cachedData.html,\n        cacheControl: cacheEntry.cacheControl,\n      }\n    }\n  }\n\n  private stripNextDataPath(path: string, stripLocale = true) {\n    if (path.includes(this.buildId)) {\n      const splitPath = path.substring(\n        path.indexOf(this.buildId) + this.buildId.length\n      )\n\n      path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n    }\n\n    if (this.localeNormalizer && stripLocale) {\n      return this.localeNormalizer.normalize(path)\n    }\n    return path\n  }\n\n  // map the route to the actual bundle name\n  protected getOriginalAppPaths(route: string) {\n    if (this.enabledDirectories.app) {\n      const originalAppPath = this.appPathRoutes?.[route]\n\n      if (!originalAppPath) {\n        return null\n      }\n\n      return originalAppPath\n    }\n    return null\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const { query, pathname } = ctx\n\n    const appPaths = this.getOriginalAppPaths(pathname)\n    const isAppPath = Array.isArray(appPaths)\n\n    let page = pathname\n    if (isAppPath) {\n      // the last item in the array is the root page, if there are parallel routes\n      page = appPaths[appPaths.length - 1]\n    }\n\n    const result = await this.findPageComponents({\n      locale: getRequestMeta(ctx.req, 'locale'),\n      page,\n      query,\n      params: ctx.renderOpts.params || {},\n      isAppPath,\n      sriEnabled: !!this.nextConfig.experimental.sri?.algorithm,\n      appPaths,\n      // Ensuring for loading page component routes is done via the matcher.\n      shouldEnsure: false,\n    })\n    if (result) {\n      getTracer().setRootSpanAttribute('next.route', pathname)\n      try {\n        return await this.renderToResponseWithComponents(ctx, result)\n      } catch (err) {\n        const isNoFallbackError = err instanceof NoFallbackError\n\n        if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n          throw err\n        }\n      }\n    }\n    return false\n  }\n\n  private async renderToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponse,\n      {\n        spanName: `rendering page`,\n        attributes: {\n          'next.route': ctx.pathname,\n        },\n      },\n      async () => {\n        return this.renderToResponseImpl(ctx)\n      }\n    )\n  }\n\n  protected abstract getMiddleware(): Promise<MiddlewareRoutingItem | undefined>\n  protected abstract getFallbackErrorComponents(\n    url?: string\n  ): Promise<LoadComponentsReturnType | null>\n  protected abstract getRoutesManifest(): NormalizedRouteManifest | undefined\n\n  private async renderToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    const { req, res, query, pathname } = ctx\n    let page = pathname\n    const bubbleNoFallback =\n      getRequestMeta(ctx.req, 'bubbleNoFallback') ?? false\n    delete query[NEXT_RSC_UNION_QUERY]\n\n    const options: MatchOptions = {\n      i18n: this.i18nProvider?.fromRequest(req, pathname),\n    }\n\n    try {\n      for await (const match of this.matchers.matchAll(pathname, options)) {\n        // when a specific invoke-output is meant to be matched\n        // ensure a prior dynamic route/page doesn't take priority\n        const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput')\n        if (\n          !this.minimalMode &&\n          typeof invokeOutput === 'string' &&\n          isDynamicRoute(invokeOutput || '') &&\n          invokeOutput !== match.definition.pathname\n        ) {\n          continue\n        }\n\n        const result = await this.renderPageComponent(\n          {\n            ...ctx,\n            pathname: match.definition.pathname,\n            renderOpts: {\n              ...ctx.renderOpts,\n              params: match.params,\n            },\n          },\n          bubbleNoFallback\n        )\n        if (result !== false) return result\n      }\n\n      // currently edge functions aren't receiving the x-matched-path\n      // header so we need to fallback to matching the current page\n      // when we weren't able to match via dynamic route to handle\n      // the rewrite case\n      // @ts-expect-error extended in child class web-server\n      if (this.serverOptions.webServerConfig) {\n        // @ts-expect-error extended in child class web-server\n        ctx.pathname = this.serverOptions.webServerConfig.page\n        const result = await this.renderPageComponent(ctx, bubbleNoFallback)\n        if (result !== false) return result\n      }\n    } catch (error) {\n      const err = getProperError(error)\n\n      if (error instanceof MissingStaticPage) {\n        console.error(\n          'Invariant: failed to load static page',\n          JSON.stringify(\n            {\n              page,\n              url: ctx.req.url,\n              matchedPath: ctx.req.headers[MATCHED_PATH_HEADER],\n              initUrl: getRequestMeta(ctx.req, 'initURL'),\n              didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n              rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL'),\n            },\n            null,\n            2\n          )\n        )\n        throw err\n      }\n\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError || err instanceof NormalizeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(ctx, err)\n      }\n\n      res.statusCode = 500\n\n      // if pages/500 is present we still need to trigger\n      // /_error `getInitialProps` to allow reporting error\n      if (await this.hasPage('/500')) {\n        addRequestMeta(ctx.req, 'customErrorRender', true)\n        await this.renderErrorToResponse(ctx, err)\n        removeRequestMeta(ctx.req, 'customErrorRender')\n      }\n\n      const isWrappedError = err instanceof WrappedBuildError\n\n      if (!isWrappedError) {\n        if (\n          (this.minimalMode && process.env.NEXT_RUNTIME !== 'edge') ||\n          this.renderOpts.dev\n        ) {\n          if (isError(err)) err.page = page\n          throw err\n        }\n        this.logError(getProperError(err))\n      }\n      const response = await this.renderErrorToResponse(\n        ctx,\n        isWrappedError ? (err as WrappedBuildError).innerError : err\n      )\n      return response\n    }\n\n    const middleware = await this.getMiddleware()\n    if (\n      middleware &&\n      !!ctx.req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)\n    ) {\n      const locale = getRequestMeta(req, 'locale')\n\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${locale ? `/${locale}` : ''}${pathname}`\n      )\n      res.statusCode = 200\n      res.setHeader('content-type', 'application/json')\n      res.body('{}')\n      res.send()\n      return null\n    }\n\n    res.statusCode = 404\n    return this.renderErrorToResponse(ctx, null)\n  }\n\n  public async renderToHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return getTracer().trace(BaseServerSpan.renderToHTML, async () => {\n      return this.renderToHTMLImpl(req, res, pathname, query)\n    })\n  }\n\n  private async renderToHTMLImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.renderError, async () => {\n      return this.renderErrorImpl(err, req, res, pathname, query, setHeaders)\n    })\n  }\n\n  private async renderErrorImpl(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    return this.pipe(\n      async (ctx) => {\n        const response = await this.renderErrorToResponse(ctx, err)\n        if (this.minimalMode && res.statusCode === 500) {\n          throw err\n        }\n        return response\n      },\n      { req, res, pathname, query }\n    )\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    Log.warn(\n      `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n    )\n  })\n\n  private async renderErrorToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(BaseServerSpan.renderErrorToResponse, async () => {\n      return this.renderErrorToResponseImpl(ctx, err)\n    })\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n    // Since favicon.ico is automatically requested by the browser.\n    if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n      return {\n        type: 'html',\n        body: RenderResult.fromStatic(''),\n      }\n    }\n    const { res, query } = ctx\n\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      if (is404) {\n        if (this.enabledDirectories.app) {\n          // Use the not-found entry in app directory\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n            query,\n            params: {},\n            isAppPath: true,\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n\n        if (!result && (await this.hasPage('/404'))) {\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: '/404',\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 404 route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (\n        !getRequestMeta(ctx.req, 'customErrorRender') &&\n        !result &&\n        STATIC_STATUS_PAGES.includes(statusPage)\n      ) {\n        // skip ensuring /500 in dev mode as it isn't used and the\n        // dev overlay is used instead\n        if (statusPage !== '/500' || !this.renderOpts.dev) {\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: statusPage,\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 500\n            // route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n        }\n      }\n\n      if (!result) {\n        result = await this.findPageComponents({\n          locale: getRequestMeta(ctx.req, 'locale'),\n          page: '/_error',\n          query,\n          params: {},\n          isAppPath: false,\n          // Ensuring can't be done here because you never \"match\" an error\n          // route.\n          shouldEnsure: true,\n          url: ctx.req.url,\n        })\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      if (!result) {\n        // this can occur when a project directory has been moved/deleted\n        // which is handled in the parent process in development\n        if (this.renderOpts.dev) {\n          return {\n            type: 'html',\n            // wait for dev-server to restart before refreshing\n            body: RenderResult.fromStatic(\n              `\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`\n            ),\n          }\n        }\n\n        throw new WrappedBuildError(\n          new Error('missing required error components')\n        )\n      }\n\n      // If the page has a route module, use it for the new match. If it doesn't\n      // have a route module, remove the match.\n      if (result.components.routeModule) {\n        addRequestMeta(ctx.req, 'match', {\n          definition: result.components.routeModule.definition,\n          params: undefined,\n        })\n      } else {\n        removeRequestMeta(ctx.req, 'match')\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: statusPage,\n            renderOpts: {\n              ...ctx.renderOpts,\n              err,\n            },\n          },\n          result\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (error) {\n      const renderToHtmlError = getProperError(error)\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents(\n        ctx.req.url\n      )\n\n      if (fallbackComponents) {\n        // There was an error, so use it's definition from the route module\n        // to add the match to the request.\n        addRequestMeta(ctx.req, 'match', {\n          definition: fallbackComponents.routeModule!.definition,\n          params: undefined,\n        })\n\n        return this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: '/_error',\n            renderOpts: {\n              ...ctx.renderOpts,\n              // We render `renderToHtmlError` here because `err` is\n              // already captured in the stacktrace.\n              err: isWrappedError\n                ? renderToHtmlError.innerError\n                : renderToHtmlError,\n            },\n          },\n          {\n            query,\n            components: fallbackComponents,\n          }\n        )\n      }\n      return {\n        type: 'html',\n        body: RenderResult.fromStatic('Internal Server Error'),\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async render404(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: Pick<NextUrlWithParsedQuery, 'pathname' | 'query'>,\n    setHeaders = true\n  ): Promise<void> {\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url!, true)\n\n    // Ensure the locales are provided on the request meta.\n    if (this.nextConfig.i18n) {\n      if (!getRequestMeta(req, 'locale')) {\n        addRequestMeta(req, 'locale', this.nextConfig.i18n.defaultLocale)\n      }\n      addRequestMeta(req, 'defaultLocale', this.nextConfig.i18n.defaultLocale)\n    }\n\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n}\n","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","import { isIPv6 } from './is-ipv6'\n\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */\nexport function formatHostname(hostname: string): string {\n  return isIPv6(hostname) ? `[${hostname}]` : hostname\n}\n","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, it the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n","import { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\ntype PatchableResponse = {\n  setHeader(key: string, value: string | string[]): PatchableResponse\n}\n\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */\nexport function patchSetHeaderWithCookieSupport(\n  req: NextIncomingMessage,\n  res: PatchableResponse\n) {\n  const setHeader = res.setHeader.bind(res)\n  res.setHeader = (\n    name: string,\n    value: string | string[]\n  ): PatchableResponse => {\n    // When renders /_error after page is failed, it could attempt to set\n    // headers after headers.\n    if ('headersSent' in res && res.headersSent) {\n      return res\n    }\n\n    if (name.toLowerCase() === 'set-cookie') {\n      const middlewareValue = getRequestMeta(req, 'middlewareCookie')\n\n      if (\n        !middlewareValue ||\n        !Array.isArray(value) ||\n        !value.every((item, idx) => item === middlewareValue[idx])\n      ) {\n        value = [\n          // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n          ...new Set([\n            ...(middlewareValue || []),\n            ...(typeof value === 'string'\n              ? [value]\n              : Array.isArray(value)\n                ? value\n                : []),\n          ]),\n        ]\n      }\n    }\n\n    return setHeader(name, value)\n  }\n}\n","import {\n  getBotType,\n  HTML_LIMITED_BOT_UA_RE_STRING,\n} from '../../shared/lib/router/utils/is-bot'\nimport type { BaseNextRequest } from '../base-http'\n\nexport function shouldServeStreamingMetadata(\n  userAgent: string,\n  htmlLimitedBots: string | undefined\n): boolean {\n  const blockingMetadataUARegex = new RegExp(\n    htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING,\n    'i'\n  )\n  return (\n    // When it's static generation, userAgents are not available - do not serve streaming metadata\n    !!userAgent && !blockingMetadataUARegex.test(userAgent)\n  )\n}\n\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req: BaseNextRequest): boolean {\n  const ua = req.headers['user-agent'] || ''\n  const botType = getBotType(ua)\n\n  return botType === 'html'\n}\n","import { BLOCKED_PAGES } from '../shared/lib/constants'\n\nexport function isBlockedPage(page: string): boolean {\n  return BLOCKED_PAGES.includes(page)\n}\n\nexport function cleanAmpPath(pathname: string): string {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?')\n  }\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, '')\n  }\n  pathname = pathname.replace(/\\?$/, '')\n  return pathname\n}\n\ntype AnyFunc<T> = (this: T, ...args: any) => any\nexport function debounce<T, F extends AnyFunc<T>>(\n  fn: F,\n  ms: number,\n  maxWait = Infinity\n) {\n  let timeoutId: undefined | NodeJS.Timeout\n\n  // The time the debouncing function was first called during this debounce queue.\n  let startTime = 0\n  // The time the debouncing function was last called.\n  let lastCall = 0\n\n  // The arguments and this context of the last call to the debouncing function.\n  let args: Parameters<F>, context: T\n\n  // A helper used to that either invokes the debounced function, or\n  // reschedules the timer if a more recent call was made.\n  function run() {\n    const now = Date.now()\n    const diff = lastCall + ms - now\n\n    // If the diff is non-positive, then we've waited at least `ms`\n    // milliseconds since the last call. Or if we've waited for longer than the\n    // max wait time, we must call the debounced function.\n    if (diff <= 0 || startTime + maxWait >= now) {\n      // It's important to clear the timeout id before invoking the debounced\n      // function, in case the function calls the debouncing function again.\n      timeoutId = undefined\n      fn.apply(context, args)\n    } else {\n      // Else, a new call was made after the original timer was scheduled. We\n      // didn't clear the timeout (doing so is very slow), so now we need to\n      // reschedule the timer for the time difference.\n      timeoutId = setTimeout(run, diff)\n    }\n  }\n\n  return function (this: T, ...passedArgs: Parameters<F>) {\n    // The arguments and this context of the most recent call are saved so the\n    // debounced function can be invoked with them later.\n    args = passedArgs\n    context = this\n\n    // Instead of constantly clearing and scheduling a timer, we record the\n    // time of the last call. If a second call comes in before the timer fires,\n    // then we'll reschedule in the run function. Doing this is considerably\n    // faster.\n    lastCall = Date.now()\n\n    // Only schedule a new timer if we're not currently waiting.\n    if (timeoutId === undefined) {\n      startTime = lastCall\n      timeoutId = setTimeout(run, ms)\n    }\n  }\n}\n","import type { ServerRuntime } from '../types'\nimport { SERVER_RUNTIME } from './constants'\n\nexport function isEdgeRuntime(value?: string): value is ServerRuntime {\n  return (\n    value === SERVER_RUNTIME.experimentalEdge || value === SERVER_RUNTIME.edge\n  )\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isPossibleServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER.toLowerCase()] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isPossibleServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isPossibleServerAction,\n  }\n}\n\nexport function getIsPossibleServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isPossibleServerAction\n}\n","import { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\nexport type FallbackRouteParams = ReadonlyMap<string, string>\n\nexport function getParamKeys(page: string) {\n  const pattern = getRouteRegex(page)\n  const matcher = getRouteMatcher(pattern)\n\n  // Get the default list of allowed params.\n  return Object.keys(matcher(page))\n}\n\nexport function getFallbackRouteParams(\n  pageOrKeys: string | readonly string[]\n): FallbackRouteParams | null {\n  let keys: readonly string[]\n  if (typeof pageOrKeys === 'string') {\n    keys = getParamKeys(pageOrKeys)\n  } else {\n    keys = pageOrKeys\n  }\n\n  // If there are no keys, we can return early.\n  if (keys.length === 0) return null\n\n  const params = new Map<string, string>()\n\n  // As we're creating unique keys for each of the dynamic route params, we only\n  // need to generate a unique ID once per request because each of the keys will\n  // be also be unique.\n  const uniqueID = Math.random().toString(16).slice(2)\n\n  for (const key of keys) {\n    params.set(key, `%%drp:${key}:${uniqueID}%%`)\n  }\n\n  return params\n}\n","import { RedirectStatusCode } from '../client/components/redirect-status-code'\n\nexport const allowedStatusCodes = new Set([301, 302, 303, 307, 308])\n\nexport function getRedirectStatus(route: {\n  statusCode?: number\n  permanent?: boolean\n}): number {\n  return (\n    route.statusCode ||\n    (route.permanent\n      ? RedirectStatusCode.PermanentRedirect\n      : RedirectStatusCode.TemporaryRedirect)\n  )\n}\n\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex: string, restrictedPaths?: string[]) {\n  if (restrictedPaths) {\n    regex = regex.replace(\n      /\\^/,\n      `^(?!${restrictedPaths\n        .map((path) => path.replace(/\\//g, '\\\\/'))\n        .join('|')})`\n    )\n  }\n  regex = regex.replace(/\\$$/, '(?:\\\\/)?$')\n  return regex\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"vm\");","import type { DeepReadonly } from './deep-readonly'\n\n/**\n * Recursively freezes an object and all of its properties. This prevents the\n * object from being modified at runtime. When the JS runtime is running in\n * strict mode, any attempts to modify a frozen object will throw an error.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n * @param obj The object to freeze.\n */\nexport function deepFreeze<T extends object>(obj: T): DeepReadonly<T> {\n  // If the object is already frozen, there's no need to freeze it again.\n  if (Object.isFrozen(obj)) return obj as DeepReadonly<T>\n\n  // An array is an object, but we also want to freeze each element in the array\n  // as well.\n  if (Array.isArray(obj)) {\n    for (const item of obj) {\n      if (!item || typeof item !== 'object') continue\n      deepFreeze(item)\n    }\n\n    return Object.freeze(obj) as DeepReadonly<T>\n  }\n\n  for (const value of Object.values(obj)) {\n    if (!value || typeof value !== 'object') continue\n    deepFreeze(value)\n  }\n\n  return Object.freeze(obj) as DeepReadonly<T>\n}\n","import type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nimport { readFileSync } from 'fs'\nimport { runInNewContext } from 'vm'\nimport { deepFreeze } from '../shared/lib/deep-freeze'\n\nconst sharedCache = new Map<string, unknown>()\n\n/**\n * Load a manifest file from the file system. Optionally cache the manifest in\n * memory to avoid reading the file multiple times using the provided cache or\n * defaulting to a shared module cache. The manifest is frozen to prevent\n * modifications if it is cached.\n *\n * @param path the path to the manifest file\n * @param shouldCache whether to cache the manifest in memory\n * @param cache the cache to use for storing the manifest\n * @returns the manifest object\n */\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache: false\n): T\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache?: boolean,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache?: true,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function loadManifest<T extends object>(\n  path: string,\n  shouldCache: boolean = true,\n  cache = sharedCache\n): T {\n  const cached = shouldCache && cache.get(path)\n  if (cached) {\n    return cached as T\n  }\n\n  let manifest = JSON.parse(readFileSync(path, 'utf8'))\n\n  // Freeze the manifest so it cannot be modified if we're caching it.\n  if (shouldCache) {\n    manifest = deepFreeze(manifest)\n  }\n\n  if (shouldCache) {\n    cache.set(path, manifest)\n  }\n\n  return manifest\n}\n\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache: false\n): T\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache?: boolean,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache?: true,\n  cache?: Map<string, unknown>\n): DeepReadonly<T>\nexport function evalManifest<T extends object>(\n  path: string,\n  shouldCache: boolean = true,\n  cache = sharedCache\n): T {\n  const cached = shouldCache && cache.get(path)\n  if (cached) {\n    return cached as T\n  }\n\n  const content = readFileSync(path, 'utf8')\n  if (content.length === 0) {\n    throw new Error('Manifest file is empty')\n  }\n\n  let contextObject = {}\n  runInNewContext(content, contextObject)\n\n  // Freeze the context object so it cannot be modified if we're caching it.\n  if (shouldCache) {\n    contextObject = deepFreeze(contextObject)\n  }\n\n  if (shouldCache) {\n    cache.set(path, contextObject)\n  }\n\n  return contextObject as T\n}\n\nexport function clearManifestCache(path: string, cache = sharedCache): boolean {\n  return cache.delete(path)\n}\n","import path from 'path'\nimport {\n  PAGES_MANIFEST,\n  SERVER_DIRECTORY,\n  APP_PATHS_MANIFEST,\n} from '../shared/lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { PageNotFoundError, MissingStaticPage } from '../shared/lib/utils'\nimport { LRUCache } from '../server/lib/lru-cache'\nimport { loadManifest } from './load-manifest'\nimport { promises } from 'fs'\n\nconst isDev = process.env.NODE_ENV === 'development'\nconst pagePathCache = !isDev ? new LRUCache<string | null>(1000) : null\n\nexport function getMaybePagePath(\n  page: string,\n  distDir: string,\n  locales: readonly string[] | undefined,\n  isAppPath: boolean\n): string | null {\n  const cacheKey = `${page}:${distDir}:${locales}:${isAppPath}`\n\n  let pagePath = pagePathCache?.get(cacheKey)\n\n  // If we have a cached path, we can return it directly.\n  if (pagePath) return pagePath\n\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  let appPathsManifest: undefined | PagesManifest\n\n  if (isAppPath) {\n    appPathsManifest = loadManifest(\n      path.join(serverBuildPath, APP_PATHS_MANIFEST),\n      !isDev\n    ) as PagesManifest\n  }\n  const pagesManifest = loadManifest(\n    path.join(serverBuildPath, PAGES_MANIFEST),\n    !isDev\n  ) as PagesManifest\n\n  try {\n    page = denormalizePagePath(normalizePagePath(page))\n  } catch (err) {\n    console.error(err)\n    throw new PageNotFoundError(page)\n  }\n\n  const checkManifest = (manifest: PagesManifest) => {\n    let curPath = manifest[page]\n\n    if (!manifest[curPath] && locales) {\n      const manifestNoLocales: typeof pagesManifest = {}\n\n      for (const key of Object.keys(manifest)) {\n        manifestNoLocales[normalizeLocalePath(key, locales).pathname] =\n          pagesManifest[key]\n      }\n      curPath = manifestNoLocales[page]\n    }\n    return curPath\n  }\n\n  if (appPathsManifest) {\n    pagePath = checkManifest(appPathsManifest)\n  }\n\n  if (!pagePath) {\n    pagePath = checkManifest(pagesManifest)\n  }\n\n  if (!pagePath) {\n    pagePathCache?.set(cacheKey, null)\n    return null\n  }\n\n  pagePath = path.join(serverBuildPath, pagePath)\n\n  pagePathCache?.set(cacheKey, pagePath)\n  return pagePath\n}\n\nexport function getPagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string {\n  const pagePath = getMaybePagePath(page, distDir, locales, isAppPath)\n\n  if (!pagePath) {\n    throw new PageNotFoundError(page)\n  }\n\n  return pagePath\n}\n\nexport async function requirePage(\n  page: string,\n  distDir: string,\n  isAppPath: boolean\n): Promise<any> {\n  const pagePath = getPagePath(page, distDir, undefined, isAppPath)\n  if (pagePath.endsWith('.html')) {\n    return promises.readFile(pagePath, 'utf8').catch((err) => {\n      throw new MissingStaticPage(page, err.message)\n    })\n  }\n\n  // since require is synchronous we can set the specific runtime\n  // we are requiring for the require-hook and then clear after\n  try {\n    process.env.__NEXT_PRIVATE_RUNTIME_TYPE = isAppPath ? 'app' : 'pages'\n    const mod = process.env.NEXT_MINIMAL\n      ? // @ts-ignore\n        __non_webpack_require__(pagePath)\n      : require(pagePath)\n    return mod\n  } finally {\n    process.env.__NEXT_PRIVATE_RUNTIME_TYPE = ''\n  }\n}\n","export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","/**\n * Wait for a given number of milliseconds and then resolve.\n *\n * @param ms the number of milliseconds to wait\n */\nexport async function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  DYNAMIC_CSS_MANIFEST,\n  SUBRESOURCE_INTEGRITY_MANIFEST,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { isStaticMetadataRoute } from '../lib/metadata/is-metadata-route'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n/**\n * This manifest prevents removing server rendered <link> tags after client\n * navigation. This is only needed under `Pages dir && Production && Webpack`.\n * @see https://github.com/vercel/next.js/pull/72959\n */\nexport type DynamicCssManifest = string[]\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathname, LoadableManifest>`\n * where pathname is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  dynamicCssManifest?: DeepReadonly<DynamicCssManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n  multiZoneDraftMode?: boolean\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts, or return undefined.\n */\nexport async function tryLoadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  try {\n    return await loadManifestWithRetries<T>(manifestPath, attempts)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function tryLoadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string,\n  attempts?: number\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath, attempts)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n  isDev,\n  sriEnabled,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n  isDev: boolean\n  sriEnabled: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // In dev mode we retry loading a manifest file to handle a race condition\n  // that can occur while app and pages are compiling at the same time, and the\n  // build-manifest is still being written to disk while an app path is\n  // attempting to load.\n  const manifestLoadAttempts = isDev ? 3 : 1\n\n  let reactLoadableManifestPath\n  if (!process.env.TURBOPACK) {\n    reactLoadableManifestPath = join(distDir, REACT_LOADABLE_MANIFEST)\n  } else if (isAppPath) {\n    reactLoadableManifestPath = join(\n      distDir,\n      'server',\n      'app',\n      page,\n      REACT_LOADABLE_MANIFEST\n    )\n  } else {\n    reactLoadableManifestPath = join(\n      distDir,\n      'server',\n      'pages',\n      normalizePagePath(page),\n      REACT_LOADABLE_MANIFEST\n    )\n  }\n\n  // Make sure to avoid loading the manifest for static metadata routes for better performance.\n  const hasClientManifest = !isStaticMetadataRoute(page)\n\n  // Load the manifest files first\n  //\n  // Loading page-specific manifests shouldn't throw an error if the manifest couldn't be found, so\n  // that the `requirePage` call below will throw the correct error in that case\n  // (a `PageNotFoundError`).\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n    subresourceIntegrityManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(\n      join(distDir, BUILD_MANIFEST),\n      manifestLoadAttempts\n    ),\n    tryLoadManifestWithRetries<ReactLoadableManifest>(\n      reactLoadableManifestPath,\n      manifestLoadAttempts\n    ),\n    // This manifest will only exist in Pages dir && Production && Webpack.\n    isAppPath || process.env.TURBOPACK\n      ? undefined\n      : loadManifestWithRetries<DynamicCssManifest>(\n          join(distDir, `${DYNAMIC_CSS_MANIFEST}.json`),\n          manifestLoadAttempts\n        ).catch(() => undefined),\n    isAppPath && hasClientManifest\n      ? tryLoadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_'),\n          manifestLoadAttempts\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json'),\n          manifestLoadAttempts\n        ).catch(() => null)\n      : null,\n    sriEnabled\n      ? loadManifestWithRetries<DeepReadonly<Record<string, string>>>(\n          join(distDir, 'server', SUBRESOURCE_INTEGRITY_MANIFEST + '.json')\n        ).catch(() => undefined)\n      : undefined,\n  ])\n\n  // Before requiring the actual page module, we have to set the reference\n  // manifests to our global store so Server Action's encryption util can access\n  // to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    subresourceIntegrityManifest,\n    reactLoadableManifest: reactLoadableManifest || {},\n    dynamicCssManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport { workAsyncStorage } from './work-async-storage.external'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n}: {\n  serverActionsManifest: ActionManifest\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        const workers =\n          serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ]?.[id]?.workers\n\n        if (!workers) {\n          return undefined\n        }\n\n        const workStore = workAsyncStorage.getStore()\n\n        let workerEntry:\n          | { moduleId: string | number; async: boolean }\n          | undefined\n\n        if (workStore) {\n          workerEntry = workers[normalizeWorkerPageName(workStore.page)]\n        } else {\n          // If there's no work store defined, we can assume that a server\n          // module map is needed during module evaluation, e.g. to create a\n          // server action using a higher-order function. Therefore it should be\n          // safe to return any entry from the manifest that matches the action\n          // ID. They all refer to the same module ID, which must also exist in\n          // the current page bundle. TODO: This is currently not guaranteed in\n          // Turbopack, and needs to be fixed.\n          workerEntry = Object.values(workers).at(0)\n        }\n\n        if (!workerEntry) {\n          return undefined\n        }\n\n        const { moduleId, async } = workerEntry\n\n        return { id: moduleId, name: id, chunks: [], async }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n","import type { BaseNextRequest } from '../../../../server/base-http'\nimport type { MiddlewareMatcher } from '../../../../build/analysis/get-page-static-info'\nimport type { Params } from '../../../../server/request/params'\nimport { matchHas } from './prepare-destination'\n\nexport interface MiddlewareRouteMatch {\n  (\n    pathname: string | null | undefined,\n    request: BaseNextRequest,\n    query: Params\n  ): boolean\n}\n\nexport function getMiddlewareRouteMatcher(\n  matchers: MiddlewareMatcher[]\n): MiddlewareRouteMatch {\n  return (\n    pathname: string | null | undefined,\n    req: BaseNextRequest,\n    query: Params\n  ) => {\n    for (const matcher of matchers) {\n      const routeMatch = new RegExp(matcher.regexp).exec(pathname!)\n      if (!routeMatch) {\n        continue\n      }\n\n      if (matcher.has || matcher.missing) {\n        const hasParams = matchHas(req, query, matcher.has, matcher.missing)\n        if (!hasParams) {\n          continue\n        }\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"stream\");","import path from '../shared/lib/isomorphic/path'\nimport type { CacheFs } from '../shared/lib/utils'\n\n/**\n * A task to be written.\n */\ntype Task = [\n  /**\n   * The directory to create.\n   */\n  directory: string,\n\n  /**\n   * The promise to create the directory.\n   */\n  mkdir: Promise<unknown>,\n\n  /**\n   * The promises to write the files that are dependent on the directory being\n   * created.\n   */\n  writeFile: Promise<unknown>[],\n]\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */\nexport class MultiFileWriter {\n  /**\n   * The tasks to be written.\n   */\n  private readonly tasks: Task[] = []\n\n  constructor(\n    /**\n     * The file system methods to use.\n     */\n    private readonly fs: Pick<CacheFs, 'mkdir' | 'writeFile'>\n  ) {}\n\n  /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */\n  private findOrCreateTask(directory: string): Task {\n    // See if this directory already has a task to create it.\n    for (const task of this.tasks) {\n      if (task[0] === directory) {\n        return task\n      }\n    }\n\n    const promise = this.fs.mkdir(directory)\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Otherwise, create a new task for this directory.\n    const task: Task = [directory, promise, []]\n    this.tasks.push(task)\n\n    return task\n  }\n\n  /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */\n  public append(filePath: string, data: Buffer | string): void {\n    // Find or create a task for the directory that contains the file.\n    const task = this.findOrCreateTask(path.dirname(filePath))\n\n    const promise = task[1].then(() => this.fs.writeFile(filePath, data))\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Add the file write to the task AFTER the directory promise has resolved.\n    task[2].push(promise)\n  }\n\n  /**\n   * Returns a promise that resolves when all the files have been written.\n   */\n  public wait(): Promise<unknown> {\n    return Promise.all(this.tasks.flatMap((task) => task[2]))\n  }\n}\n","import type { PrerenderManifest } from '../../../build'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\nimport type { CacheControl } from '../cache-control'\n\n/**\n * A shared cache of cache controls for routes. This cache is used so we don't\n * have to modify the prerender manifest when we want to update the cache\n * control for a route.\n */\nexport class SharedCacheControls {\n  /**\n   * The in-memory cache of cache lives for routes. This cache is populated when\n   * the cache is updated with new cache lives.\n   */\n  private static readonly cacheControls = new Map<string, CacheControl>()\n\n  constructor(\n    /**\n     * The prerender manifest that contains the initial cache controls for\n     * routes.\n     */\n    private readonly prerenderManifest: DeepReadonly<\n      Pick<PrerenderManifest, 'routes' | 'dynamicRoutes'>\n    >\n  ) {}\n\n  /**\n   * Try to get the cache control value for a route. This will first try to get\n   * the value from the in-memory cache. If the value is not present in the\n   * in-memory cache, it will be sourced from the prerender manifest.\n   *\n   * @param route the route to get the cache control for\n   * @returns the cache control for the route, or undefined if the values\n   *          are not present in the in-memory cache or the prerender manifest\n   */\n  public get(route: string): CacheControl | undefined {\n    // This is a copy on write cache that is updated when the cache is updated.\n    // If the cache is never written to, then the values will be sourced from\n    // the prerender manifest.\n    let cacheControl = SharedCacheControls.cacheControls.get(route)\n    if (cacheControl) return cacheControl\n\n    let prerenderData = this.prerenderManifest.routes[route]\n\n    if (prerenderData) {\n      const { initialRevalidateSeconds, initialExpireSeconds } = prerenderData\n\n      if (typeof initialRevalidateSeconds !== 'undefined') {\n        return {\n          revalidate: initialRevalidateSeconds,\n          expire: initialExpireSeconds,\n        }\n      }\n    }\n\n    const dynamicPrerenderData = this.prerenderManifest.dynamicRoutes[route]\n\n    if (dynamicPrerenderData) {\n      const { fallbackRevalidate, fallbackExpire } = dynamicPrerenderData\n\n      if (typeof fallbackRevalidate !== 'undefined') {\n        return { revalidate: fallbackRevalidate, expire: fallbackExpire }\n      }\n    }\n\n    return undefined\n  }\n\n  /**\n   * Set the cache control for a route.\n   *\n   * @param route the route to set the cache control for\n   * @param cacheControl the cache control for the route\n   */\n  public set(route: string, cacheControl: CacheControl) {\n    SharedCacheControls.cacheControls.set(route, cacheControl)\n  }\n\n  /**\n   * Clear the in-memory cache of cache controls for routes.\n   */\n  public clear() {\n    SharedCacheControls.cacheControls.clear()\n  }\n}\n","import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport {\n  type IncrementalCacheValue,\n  type IncrementalCacheEntry,\n  type IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKind,\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n  type IncrementalFetchCacheEntry,\n  type GetIncrementalFetchCacheContext,\n  type GetIncrementalResponseCacheContext,\n  type CachedFetchValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedCacheControls } from './shared-cache-controls'\nimport {\n  getPrerenderResumeDataCache,\n  getRenderResumeDataCache,\n  workUnitAsyncStorage,\n} from '../../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../../shared/lib/invariant-error'\nimport type { Revalidate } from '../cache-control'\nimport { getPreviouslyRevalidatedTags } from '../../server-utils'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    _cacheKey: string,\n    _ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    _cacheKey: string,\n    _data: IncrementalCacheValue | null,\n    _ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly requestProtocol?: 'http' | 'https'\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n\n  private readonly locks = new Map<string, Promise<void>>()\n\n  /**\n   * The cache controls for routes. This will source the values from the\n   * prerender manifest until the in-memory cache is updated with new values.\n   */\n  private readonly cacheControls: SharedCacheControls\n\n  constructor({\n    fs,\n    dev,\n    flushToDisk,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    requestProtocol,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    requestProtocol?: 'http' | 'https'\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n\n    const cacheHandlersSymbol = Symbol.for('@next/cache-handlers')\n    const _globalThis: typeof globalThis & {\n      [cacheHandlersSymbol]?: {\n        FetchCache?: typeof CacheHandler\n      }\n    } = globalThis\n\n    if (!CurCacheHandler) {\n      // if we have a global cache handler available leverage it\n      const globalCacheHandler = _globalThis[cacheHandlersSymbol]\n\n      if (globalCacheHandler?.FetchCache) {\n        CurCacheHandler = globalCacheHandler.FetchCache\n      } else {\n        if (fs && serverDistDir) {\n          if (debug) {\n            console.log('using filesystem cache handler')\n          }\n          CurCacheHandler = FileSystemCache\n        }\n      }\n    } else if (debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.requestProtocol = requestProtocol\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.cacheControls = new SharedCacheControls(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (minimalMode) {\n      revalidatedTags = getPreviouslyRevalidatedTags(\n        requestHeaders,\n        this.prerenderManifest?.preview?.previewModeId\n      )\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev: boolean,\n    isFallback: boolean | undefined\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev)\n      return Math.floor(performance.timeOrigin + performance.now() - 1000)\n\n    const cacheControl = this.cacheControls.get(toRoute(pathname))\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second unless it's a fallback request.\n    const initialRevalidateSeconds = cacheControl\n      ? cacheControl.revalidate\n      : isFallback\n        ? false\n        : 1\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async lock(cacheKey: string) {\n    let unlockNext: () => Promise<void> = () => Promise.resolve()\n    const existingLock = this.locks.get(cacheKey)\n\n    if (existingLock) {\n      await existingLock\n    }\n\n    const newLock = new Promise<void>((resolve) => {\n      unlockNext = async () => {\n        resolve()\n        this.locks.delete(cacheKey) // Remove the lock upon release\n      }\n    })\n\n    this.locks.set(cacheKey, newLock)\n    return unlockNext\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async generateCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle ReadableStream body\n      if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    // w3c trace context headers can break request caching and deduplication\n    // so we remove them from the cache key\n    if ('traceparent' in headers) delete headers['traceparent']\n    if ('tracestate' in headers) delete headers['tracestate']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<IncrementalCacheEntry | null> {\n    // Unlike other caches if we have a resume data cache, we use it even if\n    // testmode would normally disable it or if requestHeaders say 'no-cache'.\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const resumeDataCache = workUnitStore\n        ? getRenderResumeDataCache(workUnitStore)\n        : null\n      if (resumeDataCache) {\n        const memoryCacheData = resumeDataCache.fetch.get(cacheKey)\n        if (memoryCacheData?.kind === CachedRouteKind.FETCH) {\n          return { isStale: false, value: memoryCacheData }\n        }\n      }\n    }\n\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kind !== IncrementalCacheKind.FETCH ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    cacheKey = this._getPathname(\n      cacheKey,\n      ctx.kind === IncrementalCacheKind.FETCH\n    )\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      if (!cacheData) {\n        return null\n      }\n\n      if (cacheData.value?.kind !== CachedRouteKind.FETCH) {\n        throw new InvariantError(\n          `Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify(cacheData.value?.kind)} instead.`\n        )\n      }\n\n      const workStore = workAsyncStorage.getStore()\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some(\n          (tag) =>\n            this.revalidatedTags?.includes(tag) ||\n            workStore?.pendingRevalidatedTags?.includes(tag)\n        )\n      ) {\n        return null\n      }\n\n      const revalidate = ctx.revalidate || cacheData.value.revalidate\n      const age =\n        (performance.timeOrigin +\n          performance.now() -\n          (cacheData.lastModified || 0)) /\n        1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale,\n        value: { kind: CachedRouteKind.FETCH, data, revalidate },\n      }\n    } else if (cacheData?.value?.kind === CachedRouteKind.FETCH) {\n      throw new InvariantError(\n        `Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`\n      )\n    }\n\n    let entry: IncrementalResponseCacheEntry | null = null\n    const { isFallback } = ctx\n    const cacheControl = this.cacheControls.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || performance.timeOrigin + performance.now(),\n        this.dev ?? false,\n        ctx.isFallback\n      )\n      isStale =\n        revalidateAfter !== false &&\n        revalidateAfter < performance.timeOrigin + performance.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        cacheControl,\n        revalidateAfter,\n        value: cacheData.value,\n        isFallback,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        cacheControl,\n        revalidateAfter,\n        isFallback,\n      }\n      this.set(cacheKey, entry.value, { ...ctx, cacheControl })\n    }\n    return entry\n  }\n\n  async set(\n    pathname: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {\n    // Even if we otherwise disable caching for testMode or if no fetchCache is\n    // configured we still always stash results in the resume data cache if one\n    // exists. This is because this is a transient in memory cache that\n    // populates caches ahead of a dynamic render in dev mode to allow the RSC\n    // debug info to have the right environment associated to it.\n    if (data?.kind === CachedRouteKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const prerenderResumeDataCache = workUnitStore\n        ? getPrerenderResumeDataCache(workUnitStore)\n        : null\n      if (prerenderResumeDataCache) {\n        prerenderResumeDataCache.fetch.set(pathname, data)\n      }\n    }\n\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      // we don't show this error/warning when a custom cache handler is being used\n      // as it might not have this limit\n      !this.hasCustomCacheHandler &&\n      itemSize > 2 * 1024 * 1024\n    ) {\n      if (this.dev) {\n        throw new Error(\n          `Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`\n        )\n      }\n      return\n    }\n\n    try {\n      if (!ctx.fetchCache && ctx.cacheControl) {\n        this.cacheControls.set(toRoute(pathname), ctx.cacheControl)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https\");","import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n","import type {\n  ServerResponse,\n  OutgoingHttpHeaders,\n  OutgoingHttpHeader,\n  IncomingMessage,\n  IncomingHttpHeaders,\n} from 'http'\nimport type { Socket } from 'net'\nimport type { TLSSocket } from 'tls'\n\nimport Stream from 'stream'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../web/utils'\n\ninterface MockedRequestOptions {\n  url: string\n  headers: IncomingHttpHeaders\n  method: string\n  readable?: Stream.Readable\n  socket?: Socket | null\n}\n\nexport class MockedRequest extends Stream.Readable implements IncomingMessage {\n  public url: string\n  public readonly statusCode?: number | undefined\n  public readonly statusMessage?: string | undefined\n  public readonly headers: IncomingHttpHeaders\n  public readonly method: string\n\n  // This is hardcoded for now, but can be updated to be configurable if needed.\n  public readonly httpVersion = '1.0'\n  public readonly httpVersionMajor = 1\n  public readonly httpVersionMinor = 0\n\n  private bodyReadable?: Stream.Readable\n\n  // If we don't actually have a socket, we'll just use a mock one that\n  // always returns false for the `encrypted` property and undefined for the\n  // `remoteAddress` property.\n  public socket: Socket = new Proxy<TLSSocket>({} as TLSSocket, {\n    get: (_target, prop) => {\n      if (prop !== 'encrypted' && prop !== 'remoteAddress') {\n        throw new Error('Method not implemented')\n      }\n\n      if (prop === 'remoteAddress') return undefined\n      // For this mock request, always ensure we just respond with the encrypted\n      // set to false to ensure there's no odd leakages.\n      return false\n    },\n  })\n\n  constructor({\n    url,\n    headers,\n    method,\n    socket = null,\n    readable,\n  }: MockedRequestOptions) {\n    super()\n\n    this.url = url\n    this.headers = headers\n    this.method = method\n\n    if (readable) {\n      this.bodyReadable = readable\n      this.bodyReadable.on('end', () => this.emit('end'))\n      this.bodyReadable.on('close', () => this.emit('close'))\n    }\n\n    if (socket) {\n      this.socket = socket\n    }\n  }\n\n  public get headersDistinct(): NodeJS.Dict<string[]> {\n    const headers: NodeJS.Dict<string[]> = {}\n    for (const [key, value] of Object.entries(this.headers)) {\n      if (!value) continue\n\n      headers[key] = Array.isArray(value) ? value : [value]\n    }\n\n    return headers\n  }\n\n  public _read(size: number): void {\n    if (this.bodyReadable) {\n      return this.bodyReadable._read(size)\n    } else {\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket {\n    return this.socket\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get aborted(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get complete(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailers(): NodeJS.Dict<string> {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailersDistinct(): NodeJS.Dict<string[]> {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawTrailers(): string[] {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawHeaders(): string[] {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\nexport interface MockedResponseOptions {\n  statusCode?: number\n  socket?: Socket | null\n  headers?: OutgoingHttpHeaders\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n}\n\nexport class MockedResponse extends Stream.Writable implements ServerResponse {\n  public statusCode: number\n  public statusMessage: string = ''\n  public finished = false\n  public headersSent = false\n  public readonly socket: Socket | null\n\n  /**\n   * A promise that resolves to `true` when the response has been streamed.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly hasStreamed: Promise<boolean>\n\n  /**\n   * A list of buffers that have been written to the response.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly buffers: Buffer[] = []\n\n  /**\n   * The headers object that contains the headers that were initialized on the\n   * response and any that were added subsequently.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly headers: Headers\n\n  private resWriter: MockedResponseOptions['resWriter']\n\n  public readonly headPromise: Promise<void>\n  private headPromiseResolve?: () => void\n\n  constructor(res: MockedResponseOptions = {}) {\n    super()\n\n    this.statusCode = res.statusCode ?? 200\n    this.socket = res.socket ?? null\n    this.headers = res.headers\n      ? fromNodeOutgoingHttpHeaders(res.headers)\n      : new Headers()\n\n    this.headPromise = new Promise<void>((resolve) => {\n      this.headPromiseResolve = resolve\n    })\n\n    // Attach listeners for the `finish`, `end`, and `error` events to the\n    // `MockedResponse` instance.\n    this.hasStreamed = new Promise<boolean>((resolve, reject) => {\n      this.on('finish', () => resolve(true))\n      this.on('end', () => resolve(true))\n      this.on('error', (err) => reject(err))\n    }).then((val) => {\n      this.headPromiseResolve?.()\n      return val\n    })\n\n    if (res.resWriter) {\n      this.resWriter = res.resWriter\n    }\n  }\n\n  public appendHeader(name: string, value: string | string[]): this {\n    const values = Array.isArray(value) ? value : [value]\n    for (const v of values) {\n      this.headers.append(name, v)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns true if the response has been sent, false otherwise.\n   *\n   * @internal - used internally by Next.js\n   */\n  public get isSent() {\n    return this.finished || this.headersSent\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket | null {\n    return this.socket\n  }\n\n  public write(chunk: Uint8Array | Buffer | string) {\n    if (this.resWriter) {\n      return this.resWriter(chunk)\n    }\n    this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n\n    return true\n  }\n\n  public end() {\n    this.finished = true\n    return super.end(...arguments)\n  }\n\n  /**\n   * This method is a no-op because the `MockedResponse` instance is not\n   * actually connected to a socket. This method is not specified on the\n   * interface type for `ServerResponse` but is called by Node.js.\n   *\n   * @see https://github.com/nodejs/node/pull/7949\n   */\n  public _implicitHeader() {}\n\n  public _write(\n    chunk: Buffer | string,\n    _encoding: string,\n    callback: () => void\n  ) {\n    this.write(chunk)\n\n    // According to Node.js documentation, the callback MUST be invoked to\n    // signal that the write completed successfully. If this callback is not\n    // invoked, the 'finish' event will not be emitted.\n    //\n    // https://nodejs.org/docs/latest-v16.x/api/stream.html#writable_writechunk-encoding-callback\n    callback()\n  }\n\n  public writeHead(\n    statusCode: number,\n    statusMessage?: string | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    statusMessage?:\n      | string\n      | OutgoingHttpHeaders\n      | OutgoingHttpHeader[]\n      | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this {\n    if (!headers && typeof statusMessage !== 'string') {\n      headers = statusMessage\n    } else if (typeof statusMessage === 'string' && statusMessage.length > 0) {\n      this.statusMessage = statusMessage\n    }\n\n    if (headers) {\n      // When headers have been set with response.setHeader(), they will be\n      // merged with any headers passed to response.writeHead(), with the\n      // headers passed to response.writeHead() given precedence.\n      //\n      // https://nodejs.org/api/http.html#responsewriteheadstatuscode-statusmessage-headers\n      //\n      // For this reason, we need to only call `set` to ensure that this will\n      // overwrite any existing headers.\n      if (Array.isArray(headers)) {\n        // headers may be an Array where the keys and values are in the same list.\n        // It is not a list of tuples. So, the even-numbered offsets are key\n        // values, and the odd-numbered offsets are the associated values. The\n        // array is in the same format as request.rawHeaders.\n        for (let i = 0; i < headers.length; i += 2) {\n          // The header key is always a string according to the spec.\n          this.setHeader(headers[i] as string, headers[i + 1])\n        }\n      } else {\n        for (const [key, value] of Object.entries(headers)) {\n          // Skip undefined values\n          if (typeof value === 'undefined') continue\n\n          this.setHeader(key, value)\n        }\n      }\n    }\n\n    this.statusCode = statusCode\n    this.headersSent = true\n    this.headPromiseResolve?.()\n\n    return this\n  }\n\n  public hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  public getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  public getHeaderNames(): string[] {\n    return Array.from(this.headers.keys())\n  }\n\n  public setHeader(name: string, value: OutgoingHttpHeader) {\n    if (Array.isArray(value)) {\n      // Because `set` here should override any existing values, we need to\n      // delete the existing values before setting the new ones via `append`.\n      this.headers.delete(name)\n\n      for (const v of value) {\n        this.headers.append(name, v)\n      }\n    } else if (typeof value === 'number') {\n      this.headers.set(name, value.toString())\n    } else {\n      this.headers.set(name, value)\n    }\n\n    return this\n  }\n\n  public removeHeader(name: string): void {\n    this.headers.delete(name)\n  }\n\n  public flushHeaders(): void {\n    // This is a no-op because we don't actually have a socket to flush the\n    // headers to.\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get strictContentLength(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeEarlyHints() {\n    throw new Error('Method not implemented.')\n  }\n\n  public get req(): IncomingMessage {\n    throw new Error('Method not implemented.')\n  }\n\n  public assignSocket() {\n    throw new Error('Method not implemented.')\n  }\n\n  public detachSocket(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeContinue(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeProcessing(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public get upgrading(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get chunkedEncoding(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get shouldKeepAlive(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get useChunkedEncodingByDefault(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get sendDate(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n\n  public addTrailers(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public setHeaders(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\ninterface RequestResponseMockerOptions {\n  url: string\n  headers?: IncomingHttpHeaders\n  method?: string\n  bodyReadable?: Stream.Readable\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n  socket?: Socket | null\n}\n\nexport function createRequestResponseMocks({\n  url,\n  headers = {},\n  method = 'GET',\n  bodyReadable,\n  resWriter,\n  socket = null,\n}: RequestResponseMockerOptions) {\n  return {\n    req: new MockedRequest({\n      url,\n      headers,\n      method,\n      socket,\n      readable: bodyReadable,\n    }),\n    res: new MockedResponse({ socket, resWriter }),\n  }\n}\n","import type { ModuleLoader } from './module-loader'\n\n/**\n * Loads a module using `await require(id)`.\n */\nexport class NodeModuleLoader implements ModuleLoader {\n  public async load<M>(id: string): Promise<M> {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      // Need to `await` to cover the case that route is marked ESM modules by ESM escalation.\n      return await (process.env.NEXT_MINIMAL\n        ? // @ts-ignore\n          __non_webpack_require__(id)\n        : require(id))\n    }\n\n    throw new Error('NodeModuleLoader is not supported in edge runtime.')\n  }\n}\n","import type { RouteModule } from '../../route-modules/route-module'\nimport type { ModuleLoader } from './module-loader'\n\nimport { NodeModuleLoader } from './node-module-loader'\n\nexport interface AppLoaderModule<M extends RouteModule = RouteModule> {\n  routeModule: M\n}\n\nexport class RouteModuleLoader {\n  static async load<M extends RouteModule>(\n    id: string,\n    loader: ModuleLoader = new NodeModuleLoader()\n  ): Promise<M> {\n    const module: AppLoaderModule<M> = await loader.load(id)\n    if ('routeModule' in module) {\n      return module.routeModule\n    }\n\n    throw new Error(`Module \"${id}\" does not export a routeModule.`)\n  }\n}\n","import path from 'path'\nimport { pathToFileURL } from 'url'\n\n/**\n * The path for a dynamic route must be URLs with a valid scheme.\n *\n * When an absolute Windows path is passed to it, it interprets the beginning of the path as a protocol (`C:`).\n * Therefore, it is important to always construct a complete path.\n * @param dir File directory\n * @param filePath Absolute or relative path\n */\nexport const formatDynamicImportPath = (dir: string, filePath: string) => {\n  const absoluteFilePath = path.isAbsolute(filePath)\n    ? filePath\n    : path.join(dir, filePath)\n  const formattedFilePath = pathToFileURL(absoluteFilePath).toString()\n\n  return formattedFilePath\n}\n","import { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { NEXT_URL } from '../client/components/app-router-headers'\nimport {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../shared/lib/router/utils/interception-routes'\nimport type { Rewrite } from './load-custom-routes'\n\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path: string): string {\n  return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture) => {\n    // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n    const paramName = capture.replace(/\\W+/g, '_')\n\n    // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n    if (capture.startsWith('...')) {\n      return `:${capture.slice(3)}*`\n    }\n    return ':' + paramName\n  })\n}\n\nexport function generateInterceptionRoutesRewrites(\n  appPaths: string[],\n  basePath = ''\n): Rewrite[] {\n  const rewrites: Rewrite[] = []\n\n  for (const appPath of appPaths) {\n    if (isInterceptionRouteAppPath(appPath)) {\n      const { interceptingRoute, interceptedRoute } =\n        extractInterceptionRouteInformation(appPath)\n\n      const normalizedInterceptingRoute = `${\n        interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''\n      }/(.*)?`\n\n      const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute)\n      const normalizedAppPath = toPathToRegexpPath(appPath)\n\n      // pathToRegexp returns a regex that matches the path, but we need to\n      // convert it to a string that can be used in a header value\n      // to the format that Next/the proxy expects\n      let interceptingRouteRegex = pathToRegexp(normalizedInterceptingRoute)\n        .toString()\n        .slice(2, -3)\n\n      rewrites.push({\n        source: `${basePath}${normalizedInterceptedRoute}`,\n        destination: `${basePath}${normalizedAppPath}`,\n        has: [\n          {\n            type: 'header',\n            key: NEXT_URL,\n            value: interceptingRouteRegex,\n          },\n        ],\n      })\n    }\n  }\n\n  return rewrites\n}\n\nexport function isInterceptionRouteRewrite(route: Rewrite) {\n  // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n  return route.has?.[0]?.key === NEXT_URL\n}\n","export class AsyncCallbackSet {\n  private callbacks: (() => Promise<void>)[] = []\n\n  public add(callback: () => Promise<void>) {\n    this.callbacks.push(callback)\n  }\n\n  public async runAll(): Promise<void> {\n    if (!this.callbacks.length) {\n      return\n    }\n    const callbacks = this.callbacks\n    this.callbacks = []\n    await Promise.allSettled(\n      callbacks.map(\n        // NOTE: wrapped in an async function to protect against synchronous exceptions\n        async (f) => f()\n      )\n    )\n  }\n}\n","import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from './request/params'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { CacheControl } from './lib/cache-control'\nimport type { WaitUntil } from './after/builtin-request-context'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n  FUNCTIONS_CONFIG_MANIFEST,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache, {\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n} from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { INSTRUMENTATION_HOOK_FILENAME } from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\nimport { RouteKind } from './route-kind'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport { AwaiterOnce } from './after/awaiter'\nimport { AsyncCallbackSet } from './lib/async-callback-set'\nimport { initializeCacheHandlers, setCacheHandler } from './use-cache/handlers'\nimport type { UnwrapPromise } from '../lib/coalesced-function'\nimport { populateStaticEnv } from '../lib/static-env'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  private registeredInstrumentation: boolean = false\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  protected cleanupListeners = new AsyncCallbackSet()\n  protected internalWaitUntil: WaitUntil | undefined\n  private isDev: boolean\n  private sriEnabled: boolean\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    const isDev = options.dev ?? false\n    this.isDev = isDev\n    this.sriEnabled = Boolean(options.conf.experimental?.sri?.algorithm)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n\n    // when using compile mode static env isn't inlined so we\n    // need to populate in normal runtime env\n    if (this.renderOpts.isExperimentalCompile) {\n      populateStaticEnv(this.nextConfig)\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    await this.loadCustomCacheHandlers()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: true,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      })\n        .then(async ({ ComponentMod }) => {\n          // we need to ensure fetch is patched before we require the page,\n          // otherwise if the fetch is patched by user code, we will be patching it\n          // too late and there won't be any caching behaviors\n          ComponentMod.patchFetch()\n\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (!this.serverOptions.dev) {\n      try {\n        this.instrumentation = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'An error occurred while loading the instrumentation hook',\n            { cause: err }\n          )\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    if (this.registeredInstrumentation) return\n    this.registeredInstrumentation = true\n    await this.instrumentation?.register?.()\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  private async loadCustomCacheHandlers() {\n    const { cacheHandlers } = this.nextConfig.experimental\n    if (!cacheHandlers) return\n\n    // If we've already initialized the cache handlers interface, don't do it\n    // again.\n    if (!initializeCacheHandlers()) return\n\n    for (const [kind, handler] of Object.entries(cacheHandlers)) {\n      if (!handler) continue\n\n      setCacheHandler(\n        kind,\n        interopDefault(\n          await dynamicImportEsmDefault(\n            formatDynamicImportPath(this.distDir, handler)\n          )\n        )\n      )\n    }\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    await this.loadCustomCacheHandlers()\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json' | 'rsc'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      cacheControl: CacheControl | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      cacheControl: options.cacheControl,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n      onError: this.instrumentationOnRequestError.bind(this),\n      multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(\n          req,\n          res,\n          pathname,\n          query,\n          // This code path does not service revalidations for unknown param\n          // shells. As a result, we don't need to pass in the unknown params.\n          null,\n          renderOpts,\n          this.getServerComponentsHmrCache(),\n          false,\n          {\n            buildId: this.buildId,\n          }\n        )\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts,\n        {\n          buildId: this.buildId,\n          deploymentId: this.nextConfig.deploymentId,\n          customServer: this.serverOptions.customServer || undefined,\n        },\n        {\n          isFallback: false,\n          isDraftMode: renderOpts.isDraftMode,\n          developmentNotFoundSourcePage: getRequestMeta(\n            req,\n            'developmentNotFoundSourcePage'\n          ),\n        }\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult,\n    previousCacheEntry?: IncrementalResponseCacheEntry | null\n  ): Promise<{\n    buffer: Buffer\n    contentType: string\n    maxAge: number\n    upstreamEtag: string\n    etag: string\n  }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(imageUpstream, paramsResult, this.nextConfig, {\n        isDev: this.renderOpts.dev,\n        previousCacheEntry,\n      })\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          locale,\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (locale) {\n      pagePaths.unshift(\n        ...pagePaths.map((path) => `/${locale}${path === '/' ? '' : path}`)\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n          isDev: this.isDev,\n          sriEnabled: this.sriEnabled,\n        })\n\n        if (\n          locale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${locale}/`) &&\n          pagePath !== `/${locale}`\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n    // Ignore if its a middleware request\n    if (getRequestMeta(req, 'middlewareInvoke')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async ({ previousCacheEntry }) => {\n            const { buffer, contentType, maxAge, upstreamEtag, etag } =\n              await this.imageOptimizer(\n                req,\n                res,\n                paramsResult,\n                previousCacheEntry\n              )\n\n            return {\n              value: {\n                kind: CachedRouteKind.IMAGE,\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n                upstreamEtag,\n              },\n              isFallback: false,\n              cacheControl: { revalidate: maxAge, expire: undefined },\n            }\n          },\n          {\n            routeKind: RouteKind.IMAGE,\n            incrementalCache: imageOptimizerCache,\n            isFallback: false,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== CachedRouteKind.IMAGE) {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          cacheEntry.value.etag,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.cacheControl?.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    addRequestMeta(req, 'bubbleNoFallback', true)\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromRequest(req, pathname),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n            // Edge runtime does not support ISR\n            revalidateReason: undefined,\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): void {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  protected normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  protected normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause an unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) =>\n      handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      mocked.res.statusCode !== 200 &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) {\n      return null\n    } else {\n      const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n      return manifest\n    }\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected async getMiddleware(): Promise<MiddlewareRoutingItem | undefined> {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      const middlewareModule = await this.loadNodeMiddleware()\n\n      if (middlewareModule) {\n        return {\n          match: getMiddlewareRouteMatcher(\n            middlewareModule.config?.matchers || [\n              { regexp: '.*', originalSource: '/:path*' },\n            ]\n          ),\n          page: '/',\n        }\n      }\n\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  private async loadNodeMiddleware() {\n    if (!this.nextConfig.experimental.nodeMiddleware) {\n      return\n    }\n\n    try {\n      const functionsConfig = this.renderOpts.dev\n        ? {}\n        : require(join(this.distDir, 'server', FUNCTIONS_CONFIG_MANIFEST))\n\n      if (this.renderOpts.dev || functionsConfig?.functions?.['/_middleware']) {\n        // if used with top level await, this will be a promise\n        return require(join(this.distDir, 'server', 'middleware.js'))\n      }\n    } catch (err) {\n      if (\n        isError(err) &&\n        err.code !== 'ENOENT' &&\n        err.code !== 'MODULE_NOT_FOUND'\n      ) {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    const nodeMiddleware = await this.loadNodeMiddleware()\n\n    if (!info && nodeMiddleware) {\n      return true\n    }\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = getRequestMeta(params.request, 'locale')\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const requestData = {\n      headers: params.request.headers,\n      method,\n      nextConfig: {\n        basePath: this.nextConfig.basePath,\n        i18n: this.nextConfig.i18n,\n        trailingSlash: this.nextConfig.trailingSlash,\n        experimental: this.nextConfig.experimental,\n      },\n      url: url,\n      page,\n      body:\n        method !== 'GET' && method !== 'HEAD'\n          ? (getRequestMeta(params.request, 'clonableBody') as any)\n          : undefined,\n\n      signal: signalFromNodeResponse(params.response.originalResponse),\n      waitUntil: this.getWaitUntil(),\n    }\n    let result:\n      | UnwrapPromise<ReturnType<typeof import('./web/sandbox').run>>\n      | undefined\n\n    // if no middleware info check for Node.js middleware\n    // this is not in the middleware-manifest as that historically\n    // has only included edge-functions, we need to do a breaking\n    // version bump for that manifest to write this info there if\n    // we decide we want to\n    if (!middlewareInfo) {\n      let middlewareModule\n      middlewareModule = await this.loadNodeMiddleware()\n\n      if (!middlewareModule) {\n        throw new MiddlewareNotFoundError()\n      }\n      const adapterFn: typeof import('./web/adapter').adapter =\n        middlewareModule.default || middlewareModule\n\n      result = await adapterFn({\n        handler: middlewareModule.middleware || middlewareModule,\n        request: requestData,\n        page: 'middleware',\n      })\n    } else {\n      const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n      result = await run({\n        distDir: this.distDir,\n        name: middlewareInfo.name,\n        paths: middlewareInfo.paths,\n        edgeFunctionEntry: middlewareInfo,\n        request: requestData,\n        useCache: true,\n        onWarning: params.onWarning,\n      })\n    }\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    let maybeDecodedPathname = normalizedPathname\n\n    try {\n      maybeDecodedPathname = decodeURIComponent(normalizedPathname)\n    } catch {\n      /* non-fatal we can't decode so can't match it */\n    }\n\n    if (\n      !(\n        middleware.match(normalizedPathname, req, parsedUrl.query) ||\n        middleware.match(maybeDecodedPathname, req, parsedUrl.query)\n      )\n    ) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = getRequestMeta(params.req, 'isNextDataReq')\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n        waitUntil: this.getWaitUntil(),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n\n  protected onServerClose(listener: () => Promise<void>) {\n    this.cleanupListeners.add(listener)\n  }\n\n  async close(): Promise<void> {\n    await this.cleanupListeners.runAll()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil {\n    this.internalWaitUntil ??= this.createInternalWaitUntil()\n    return this.internalWaitUntil\n  }\n\n  private createInternalWaitUntil() {\n    if (this.minimalMode) {\n      throw new InvariantError(\n        'createInternalWaitUntil should never be called in minimal mode'\n      )\n    }\n\n    const awaiter = new AwaiterOnce({ onError: console.error })\n\n    // TODO(after): warn if the process exits before these are awaited\n    this.onServerClose(() => awaiter.awaiting())\n\n    return awaiter.waitUntil\n  }\n}\n","import type { RouteMatch } from './route-match'\nimport type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\n\nimport { RouteKind } from '../route-kind'\n\nexport interface PagesAPIRouteMatch\n  extends RouteMatch<PagesAPIRouteDefinition> {}\n\n/**\n * Checks if the given match is a Pages API route match.\n * @param match the match to check\n * @returns true if the match is a Pages API route match, false otherwise\n */\nexport function isPagesAPIRouteMatch(\n  match: RouteMatch\n): match is PagesAPIRouteMatch {\n  return match.definition.kind === RouteKind.PAGES_API\n}\n","import type { NextConfig } from '../types'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\n\nexport function setHttpClientAndAgentOptions(config: {\n  httpAgentOptions?: NextConfig['httpAgentOptions']\n}) {\n  if (globalThis.__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to reuse the same agent for all requests.\n    return\n  }\n\n  if (!config) {\n    throw new Error('Expected config.httpAgentOptions to be an object')\n  }\n\n  globalThis.__NEXT_HTTP_AGENT_OPTIONS = config.httpAgentOptions\n  globalThis.__NEXT_HTTP_AGENT = new HttpAgent(config.httpAgentOptions)\n  globalThis.__NEXT_HTTPS_AGENT = new HttpsAgent(config.httpAgentOptions)\n}\n","import type { NextConfigComplete } from '../server/config-shared'\n\nfunction errorIfEnvConflicted(config: NextConfigComplete, key: string) {\n  const isPrivateKey = /^(?:NODE_.+)|^(?:__.+)$/i.test(key)\n  const hasNextRuntimeKey = key === 'NEXT_RUNTIME'\n\n  if (isPrivateKey || hasNextRuntimeKey) {\n    throw new Error(\n      `The key \"${key}\" under \"env\" in ${config.configFileName} is not allowed. https://nextjs.org/docs/messages/env-key-not-allowed`\n    )\n  }\n}\n\n/**\n * Collects all environment variables that are using the `NEXT_PUBLIC_` prefix.\n */\nexport function getNextPublicEnvironmentVariables() {\n  const defineEnv: Record<string, string | undefined> = {}\n  for (const key in process.env) {\n    if (key.startsWith('NEXT_PUBLIC_')) {\n      const value = process.env[key]\n      if (value != null) {\n        defineEnv[`process.env.${key}`] = value\n      }\n    }\n  }\n  return defineEnv\n}\n\n/**\n * Collects the `env` config value from the Next.js config.\n */\nexport function getNextConfigEnv(config: NextConfigComplete) {\n  // Refactored code below to use for-of\n  const defineEnv: Record<string, string | undefined> = {}\n  const env = config.env\n  for (const key in env) {\n    const value = env[key]\n    if (value != null) {\n      errorIfEnvConflicted(config, key)\n      defineEnv[`process.env.${key}`] = value\n    }\n  }\n  return defineEnv\n}\n\nexport function getStaticEnv(config: NextConfigComplete) {\n  const staticEnv: Record<string, string | undefined> = {\n    ...getNextPublicEnvironmentVariables(),\n    ...getNextConfigEnv(config),\n    'process.env.NEXT_DEPLOYMENT_ID': config.deploymentId || '',\n  }\n  return staticEnv\n}\n\nexport function populateStaticEnv(config: NextConfigComplete) {\n  // since inlining comes after static generation we need\n  // to ensure this value is assigned to process env so it\n  // can still be accessed\n  const staticEnv = getStaticEnv(config)\n  for (const key in staticEnv) {\n    const innerKey = key.split('.').pop() || ''\n    if (!process.env[innerKey]) {\n      process.env[innerKey] = staticEnv[key] || ''\n    }\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Readable } from 'stream'\nimport { PassThrough } from 'stream'\n\nexport function requestToBodyStream(\n  context: { ReadableStream: typeof ReadableStream },\n  KUint8Array: typeof Uint8Array,\n  stream: Readable\n) {\n  return new context.ReadableStream({\n    start: async (controller) => {\n      for await (const chunk of stream) {\n        controller.enqueue(new KUint8Array(chunk))\n      }\n      controller.close()\n    },\n  })\n}\n\nfunction replaceRequestBody<T extends IncomingMessage>(\n  base: T,\n  stream: Readable\n): T {\n  for (const key in stream) {\n    let v = stream[key as keyof Readable] as any\n    if (typeof v === 'function') {\n      v = v.bind(base)\n    }\n    base[key as keyof T] = v\n  }\n\n  return base\n}\n\nexport interface CloneableBody {\n  finalize(): Promise<void>\n  cloneBodyStream(): Readable\n}\n\nexport function getCloneableBody<T extends IncomingMessage>(\n  readable: T\n): CloneableBody {\n  let buffered: Readable | null = null\n\n  const endPromise = new Promise<void | { error?: unknown }>(\n    (resolve, reject) => {\n      readable.on('end', resolve)\n      readable.on('error', reject)\n    }\n  ).catch((error) => {\n    return { error }\n  })\n\n  return {\n    /**\n     * Replaces the original request body if necessary.\n     * This is done because once we read the body from the original request,\n     * we can't read it again.\n     */\n    async finalize(): Promise<void> {\n      if (buffered) {\n        const res = await endPromise\n\n        if (res && typeof res === 'object' && res.error) {\n          throw res.error\n        }\n        replaceRequestBody(readable, buffered)\n        buffered = readable\n      }\n    },\n    /**\n     * Clones the body stream\n     * to pass into a middleware\n     */\n    cloneBodyStream() {\n      const input = buffered ?? readable\n      const p1 = new PassThrough()\n      const p2 = new PassThrough()\n      input.on('data', (chunk) => {\n        p1.push(chunk)\n        p2.push(chunk)\n      })\n      input.on('end', () => {\n        p1.push(null)\n        p2.push(null)\n      })\n      buffered = p2\n      return p1\n    },\n  }\n}\n"],"names":["Symbol","for","iterator","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","assign","Object","emptyObject","Component","props","context","updater","refs","ComponentDummy","PureComponent","prototype","isReactComponent","setState","partialState","callback","Error","forceUpdate","pureComponentPrototype","constructor","isPureReactComponent","hasOwnProperty","reportError","module","exports","e","j","t","ignoreProcessEnv","process","env","n","parsed","r","call","_interpolate","_searchLast","Array","from","matchAll","length","slice","index","i","o","match","s","replace","a","c","version","p","_debug","console","log","_dotenvKey","DOTENV_KEY","_vaultPath","resolve","cwd","path","endsWith","l","configDotenv","Boolean","debug","join","homedir","encoding","parse","readFileSync","processEnv","populate","message","error","_configVault","_parseVault","split","trim","_instructions","URL","code","password","searchParams","get","toUpperCase","ciphertext","key","decrypt","config","existsSync","Buffer","createDecipheriv","setAuthTag","update","final","RangeError","toString","exec","override","keys","JSON","__nccwpck_require__","undefined","__esModule","d","defineProperty","enumerable","toStringTag","value","ab","__dirname","initialEnv","updateInitialEnv","resetEnv","loadEnvConfig","u","_","replaceProcessEnv","forEach","startsWith","entries","__NEXT_PROCESSED_ENV","contents","some","combinedEnv","parsedEnv","loadedEnvFiles","filter","statSync","isFile","isFIFO","push","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","src_exports","stringifyCookie","_a","attrs","expires","Date","toUTCString","maxAge","domain","secure","httpOnly","sameSite","partitioned","priority","stringified","name","encodeURIComponent","parseCookie","cookie","map","Map","pair","splitAt","indexOf","set","decodeURIComponent","parseSetCookie","setCookie","string","attributes","httponly","maxage","samesite","fromEntries","value2","toLowerCase","compact","newT","Number","SAME_SITE","includes","PRIORITY","__export","target","all","RequestCookies","ResponseCookies","to","except","desc","requestHeaders","_parsed","_headers","header","size","args","getAll","has","delete","names","result","isArray","clear","stringify","values","v","responseHeaders","_b","_c","getSetCookie","cookieString","splitCookiesString","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","substring","normalizeCookie","now","bag","headers","serialized","append","options","decode","f","substr","tryDecode","serialize","encode","isNaN","isFinite","Math","floor","unescape","type","typeFull","charset","parseHttpDate","NaN","parseTokenList","charCodeAt","Events","EE","fn","once","addListener","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","getOwnPropertySymbols","concat","listeners","listenerCount","emit","h","arguments","removeListener","apply","on","removeAllListeners","off","prefixed","then","Promise","_queue","enqueue","run","default","splice","dequeue","shift","TimeoutError","pTimeout","Infinity","setTimeout","cancel","clearTimeout","empty","_intervalCount","_intervalEnd","_pendingCount","_resolveEmpty","_resolveIdle","carryoverConcurrencyCount","intervalCap","interval","concurrency","autoStart","queueClass","_carryoverConcurrencyCount","_isIntervalIgnored","_intervalCap","_interval","_queueClass","_timeout","timeout","_throwOnTimeout","throwOnTimeout","_isPaused","_doesIntervalAllowAnother","_doesConcurrentAllowAnother","_concurrency","_next","_tryToStartAnother","_resolvePromises","_onResumeInterval","_onInterval","_initializeIntervalIfNeeded","_timeoutId","_isIntervalPaused","_intervalId","clearInterval","setInterval","_processQueue","add","addAll","pause","onEmpty","onIdle","sizeBy","pending","isPaused","lexer","prefixes","escapeString","delimiter","tryConsume","mustConsume","consumeText","prefix","suffix","pattern","modifier","g","m","tokensToFunction","flags","validate","String","regexpToFunction","_loop_1","params","sensitive","tokensToRegexp","strict","end","x","E","T","y","RegExp","pathToRegexp","regexpToRegexp","source","compile","quote","op","random","escape","parseEnvVar","comment","reduce","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","MATCHED_PATH_HEADER","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_RESUME_HEADER","CACHE_ONE_YEAR","INFINITE_CACHE","INSTRUMENTATION_HOOK_FILENAME","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","webpackEmptyContext","req","id","checkIsOnDemandRevalidate","previewProps","HeadersAdapter","isOnDemandRevalidate","previewModeId","revalidateOnlyGenerated","COOKIE_NAME_PRERENDER_BYPASS","COOKIE_NAME_PRERENDER_DATA","SYMBOL_PREVIEW_DATA","SYMBOL_CLEARED_COOKIES","clearPreviewData","res","require","previous","getHeader","setHeader","tryGetPreviewData","multiZoneDraftMode","cookies","encryptedPreviewData","tokenPreviewData","data","jsonwebtoken","verify","previewModeSigningKey","decryptWithSecret","decryptedPreviewData","previewModeEncryptionKey","CIPHER_ALGORITHM","encryptWithSecret","secret","iv","crypto","salt","cipher","encrypted","tag","getAuthTag","encryptedData","buffer","CIPHER_SALT_LENGTH","decipher","BaseServerSpan","LoadComponentsSpan","NextServerSpan","NextNodeServerSpan","StartServerSpan","RenderSpan","AppRenderSpan","RouterSpan","NodeSpan","AppRouteRouteHandlersSpan","ResolveMetadataSpan","MiddlewareSpan","AsyncLocalStorage","globalThis","WebSocket","configurable","writable","global","webcrypto","ReadonlyHeadersError","callable","Headers","Proxy","prop","receiver","ReflectAdapter","lowercased","original","find","deleteProperty","seal","existing","merge","callbackfn","thisArg","Reflect","bind","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","obj","webCrypto","memoryCache","stdout","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","nextIndex","formatter","open","input","bold","red","green","yellow","magenta","white","reactHydrationStartMessages","isReactHydrationErrorMessage","msg","hydrationWarningRegexes","regexNextStatic","bundlerFindSourceMapPayload","frameToString","frame","fileLocation","sourceLocation","lineNumber","column","file","canParse","url","methodName","computeErrorName","prepareUnsourcemappedStackTrace","structuredStackTrace","stack","shouldIgnoreListGeneratedFrame","createUnsourcemappedFrame","ignored","patchErrorInspectNodeJS","errorConstructor","inspectSymbol","prepareStackTrace","depth","inspectOptions","inspect","workUnitAsyncStorage","exit","newError","sourceMapError","cause","parseAndSourceMap","unparsedStack","errorName","idx","lastIndexOf","unsourcemappedStack","parseStack","messageAndStack","parsedStack","getHydrationErrorStackInfo","rawMessage","isReactHydrationWarning","regex","diff","diffLog","firstLineBreak","trailing","trimmedMessage","stacks","diffs","line","frames","pathname","distDir","__NEXT_DIST_DIR","pop","search","sourceMapCache","sourceMappedStack","sourcemappedFrame","getSourcemappedFrameIfPossible","applicableSourceMap","sourceMapConsumer","sourceMapPayload","sourceMapCacheEntry","maybeSourceMapPayload","sourceURL","sourceMap","nativeFindSourceMap","payload","SyncSourceMapConsumer","sourcePosition","originalPositionFor","sourceContentFor","findApplicableSourceMapPayload","frameLine","frameColumn","section","sections","offset","sourceIndex","sources","ignoreList","originalFrame","originalCustomInspect","WeakMap","React","unstable_postpone","isDynamicPostponeReason","reason","InvariantError","io","expression","workUnitStore","getStore","prerenderSignal","controller","signal","aborted","workStore","workAsyncStorage","route","errorWithStack","abortOnSynchronousPlatformIOAccess","prerenderStore","dynamicTracking","syncDynamicErrorWithStack","syncDynamicExpression","abortOnSynchronousDynamicDataAccess","createPrerenderInterruptedError","digest","abort","dynamicAccesses","isDebugDynamicAccesses","prerenderPhase","requestStore","_random","createDate","originalConstructor","originalNow","properties","getOwnPropertyDescriptors","construct","newConstructor","defineProperties","getRandomValuesExpression","_getRandomValues","getRandomValues","_randomUUID","randomUUID","nodeCrypto","randomUUIDExpression","randomBytesExpression","_randomBytes","randomBytes","randomFillSyncExpression","_randomFillSync","randomFillSync","_randomInt","randomInt","generatePrimeSyncExpression","_generatePrimeSync","generatePrimeSync","generateKeyPairSyncExpression","_generateKeyPairSync","generateKeyPairSync","generateKeySyncExpression","_generateKeySync","generateKeySync","mod","originalRequire","resolveFilename","_resolveFilename","hookPropertyMap","normalizeRepeatedSlashes","urlParts","urlNoQuery","addHookAliases","aliases","dirname","originalResolveFilename","requestMap","request","parent","isMain","hookResolved","basename","SP","performance","every","method","DecodeError","NormalizeError","PageNotFoundError","page","MissingStaticPage","getRouteMatcher","re","groups","routeMatch","param","group","repeat","entry","NEXT_REQUEST_META","getRequestMeta","meta","addRequestMeta","removeRequestMeta","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","PAGES_MANIFEST","APP_PATHS_MANIFEST","SERVER_DIRECTORY","BLOCKED_PAGES","STATIC_STATUS_PAGES","findDir","dir","curDir","fs","RedirectStatusCode","getCookieParser","parseCookieFn","BaseNextRequest","body","_cookies","BaseNextResponse","destination","redirect","statusCode","PermanentRedirect","NodeNextRequest","_req","fetchMetrics","streaming","originalRequest","ReadableStream","Uint8Array","chunk","err","NodeNextResponse","originalResponse","_res","textBody","sent","finished","headersSent","statusMessage","removeHeader","getHeaderValues","hasHeader","getHeaders","appendHeader","currentValues","send","onClose","fnv1a52","len","t0","v0","t1","v1","t2","v2","t3","v3","generateETag","weak","getCacheControlHeader","revalidate","expire","swrHeader","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_URL","FLIGHT_HEADERS","NEXT_RSC_UNION_QUERY","NEXT_DID_POSTPONE_HEADER","sendRenderResult","generateEtags","poweredByHeader","cacheControl","isDynamic","toUnchunkedString","etag","fresh","contentType","byteLength","pipeToNodeResponse","searchParamsToUrlQuery","query","parseUrl","parseRelativeUrl","base","parseQuery","globalBase","resolvedBase","hash","href","origin","parsedURL","hostname","port","protocol","LRUCache","maxSize","calculateSize","cache","sizes","totalSize","warn","touch","evictIfNecessary","evictLeastRecentlyUsed","lruKey","next","lruSize","reset","remove","currentSize","wait","ready","info","event","trace","LOGGING_METHOD","prefixedLog","prefixType","consoleMethod","bootstrap","warnOnceCache","warnOnce","ensureLeadingSlash","normalizeAppPath","segment","segments","normalizeRscURL","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","reHasRegExp","reReplaceRegExp","escapeStringRegexp","removeTrailingSlash","PARAMETER_PATTERN","parseMatchedParameter","optional","getRouteRegex","normalizedRoute","includeSuffix","includePrefix","excludeOptionalTrailingSlash","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","paramMatches","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","DetachedPromise","reject","promise","rej","Batcher","cacheKeyFn","schedulerFn","batch","cacheKey","scheduleOnNextTick","nextTick","cb","CachedRouteKind","IncrementalCacheKind","voidCatch","encoder","TextEncoder","streamFromBuffer","streamToBuffer","stream","reader","getReader","chunks","done","read","streamToString","decoder","TextDecoder","fatal","fromNodeOutgoingHttpHeaders","nodeHeaders","toNodeOutgoingHttpHeaders","validateURL","normalizeNextQueryParam","parsePath","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","pathHasPrefix","getHostname","host","normalizeLocalePath","locales","detectedLocale","lowercasedLocales","locale","removePathPrefix","withoutPrefix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","REGEX_LOCALHOST_HOSTNAME","parseURL","Internal","NextURL","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","detectDomainLocale","domainItems","item","defaultLocale","domains","formatPathname","addLocale","ignorePrefix","lower","forceLocale","formatSearch","username","toJSON","clone","PageSignatureError","RemovedPageError","RemovedUAError","INTERNALS","NextRequest","Request","init","duplex","nextUrl","bodyUsed","credentials","integrity","keepalive","mode","referrer","referrerPolicy","ua","isNodeNextRequest","isNodeNextResponse","ResponseAbortedName","ResponseAborted","createAbortController","response","AbortController","writableFinished","NextRequestAdapter","fromBaseNextRequest","fromNodeNextRequest","fromWebNextRequest","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","isAbortError","readable","waitUntilForEnd","errored","destroyed","writer","createWriterFromResponse","started","drained","onDrain","WritableStream","write","NEXT_OTEL_PERFORMANCE_PREFIX","metrics","getClientComponentLoaderMetrics","measure","flushHeaders","getTracer","startResponse","spanName","ok","flush","destroy","pipeTo","RenderResult","fromStatic","metadata","waitUntil","assignMetadata","isNull","toUnchunkedBuffer","isBuffer","chainStreams","streams","TransformStream","preventClose","nextStream","lastStream","catch","responses","RouteKind","fromResponseCacheEntry","cacheEntry","kind","PAGES","html","pageData","status","APP_PAGE","postponed","rscData","segmentData","toResponseCacheEntry","isMiss","isStale","isFallback","ResponseCache","minimalMode","batcher","responseGenerator","hasResolved","previousCacheEntry","incrementalCache","isRoutePPREnabled","previousCacheItem","expiresAt","routeKindToIncrementalCacheKind","routeKind","IMAGE","APP_ROUTE","resolved","cachedResponse","isRevalidating","resolveValue","newRevalidate","min","max","newExpire","v4Seg","v4Str","v6Seg","IPv6Reg","TEST_ROUTE","TEST_STRICT_ROUTE","isDynamicRoute","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","HTML_LIMITED_BOT_UA_RE","HEADLESS_BROWSER_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","isBot","userAgent","isDomBotUA","getBotType","normalizePathSep","denormalizePagePath","_page","getPathMatch","regexp","matcher","regexModifier","removeUnnamedParams","unescapeSegments","matchHas","missing","hasMatch","hasItem","getSafeParamName","paramName","newParamName","charCode","matches","groupKey","compileNonPath","getPreviouslyRevalidatedTags","isError","getProperError","isPlainObject","getObjectClassLabel","getPrototypeOf","safeStringify","seen","WeakSet","_key","LocaleRouteNormalizer","provider","UrlNode","insert","urlPath","_insert","smoosh","_smoosh","childrenPaths","children","sort","slugName","restSlugName","optionalRestSlugName","routes","prev","curr","placeholder","unshift","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","slug","RouteMatcher","dynamic","identity","LocaleRouteMatcher","DefaultRouteMatcherManager","compilationID","providers","waitTillReady","waitTillReadyPromise","reload","matchers","providersMatchers","duplicates","providerMatchers","duplicated","duplicate","others","previousMatchers","cachedMatcher","static","reference","pathnames","indexes","sorted","getSortedRoutes","normalizedPages","root","pagePath","sortedDynamicMatchers","dynamicMatches","lastCompilationID","inferredFromDefault","skipDynamic","Normalizers","normalizers","normalizer","normalize","normalized","PrefixingNormalizer","normalizePagePath","posix","resolvedPage","AppBundlePathNormalizer","AppFilenameNormalizer","manifestFilename","isAppRouteRoute","STATIC_METADATA_IMAGES","icon","filename","extensions","apple","openGraph","twitter","getExtensionRegexString","staticExtensions","dynamicExtensions","wrapNormalizerFn","UnderscoreNormalizer","AppPathnameNormalizer","AppNormalizers","bundlePath","AppPageRouteMatcher","CachedRouteMatcherProvider","loader","cached","load","compare","transform","ManifestRouteMatcherProvider","manifestName","manifestLoader","left","right","AppPageRouteMatcherProvider","manifest","pages","allAppPaths","appPaths","AppRouteRouteMatcher","AppRouteRouteMatcherProvider","isAPIRoute","PagesAPIRouteMatcher","PagesAPILocaleRouteMatcher","PagesBundlePathNormalizer","PagesFilenameNormalizer","PagesNormalizers","PagesAPIRouteMatcherProvider","PAGES_API","PagesRouteMatcher","PagesLocaleRouteMatcher","PagesRouteMatcherProvider","ServerManifestLoader","I18NProvider","lowerCaseLocales","lowerCaseDomains","http","analysis","sendResponse","statusText","headersWithMultipleValuesAllowed","isHeaderPresent","decodePathParams","seg","char","SuffixPathnameNormalizer","matched","RSCPathnameNormalizer","stripFlightHeaders","isAppPageRouteModule","routeModule","isPagesRouteModule","PrefetchRSCPathnameNormalizer","PrefixPathnameNormalizer","NextDataPathnameNormalizer","buildID","toRoute","NEXT_REQUEST_CONTEXT_SYMBOL","REDIRECTS","Set","handleMiddlewareField","NextResponse","Response","cookiesProxy","newHeaders","redirected","json","initObj","rewrite","ReadonlyRequestCookiesError","pendingSets","NEXT_PRIVATE_DEBUG_CACHE","pendingPromise","privateEntry","timeOrigin","timestamp","tags","returnStream","newSaved","tee","pendingEntry","resolvePending","clonedValue","isErrored","errorRetryCount","refreshTags","getExpiration","expiration","tagsManifest","expireTags","round","handlersSymbol","handlersMapSymbol","handlersSetSymbol","NextRequestHint","sourcePage","respondWith","getRevalidateReason","isRevalidate","FallbackMode","PATTERN","SegmentPrefixRSCPathnameNormalizer","extract","originalPathname","segmentPath","decodeQueryPathParameter","NoFallbackError","WrappedBuildError","innerError","Server","getServerComponentsHmrCache","experimental","serverComponentsHmrCache","__serverComponentsHmrCache","handleRSCRequest","parsedUrl","segmentPrefetchRSC","RSC_HEADER","prefetchRSC","rsc","segmentPrefetchRSCRequest","formatUrl","handleNextDataRequest","getMiddleware","matchNextDataPathname","render404","lastParam","getRouteFromAssetPath","assetPath","ext","localePathResult","handleNextImageRequest","handleCatchallRenderRequest","handleCatchallMiddlewareRequest","normalizeAndAttachMetadata","enabledDirectories","prepared","preparedPromise","customErrorNo404Warn","execOnce","used","Log","quiet","conf","dev","experimentalTestProxy","serverOptions","fetchHostname","formatHostname","isIPv6","publicDir","getPublicDir","hasStaticDir","getHasStaticDir","localeNormalizer","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","getBuildId","NEXT_PRIVATE_MINIMAL_MODE","getEnabledDirectories","isAppPPREnabled","app","checkIsAppPPREnabled","ppr","isAppSegmentPrefetchEnabled","clientSegmentCache","nextFontManifest","getNextFontManifest","NEXT_DEPLOYMENT_ID","deploymentId","renderOpts","supportsDynamicResponse","strictNextHead","canonicalBase","amp","getPrerenderManifest","preview","ampOptimizerConfig","optimizer","images","optimizeCss","nextConfigOutput","output","nextScriptWorkers","disableOptimizedLoading","domainLocales","serverComponents","cacheLifeProfiles","cacheLife","enableTainting","taint","crossOrigin","largePageDataBytes","runtimeConfig","isExperimentalCompile","htmlLimitedBots","expireTime","staleTimes","clientTraceMetadata","dynamicIO","dynamicOnHover","inlineCss","authInterrupts","onInstrumentationRequestError","instrumentationOnRequestError","reactMaxHeadersLength","setConfig","pagesManifest","getPagesManifest","appPathsManifest","getAppPathsManifest","appPathRoutes","getAppPathRoutes","interceptionRoutePatterns","getinterceptionRoutePatterns","getRouteMatchers","setAssetPrefix","responseCache","getResponseCache","reloadMatchers","ctx","instrumentation","onRequestError","handlerErr","logError","handleRequest","prepare","tracer","withPropagatedContext","SpanKind","SERVER","span","handleRequestImpl","finally","isRSCRequest","setAttributes","rootSpanAttributes","getRootSpanAttributes","updateName","utils","patchSetHeaderWithCookieSupport","middlewareValue","cleanUrl","URLSearchParams","xForwardedProto","isHttps","socket","remoteAddress","attachRequestMeta","parseUrlUtil","pathnameInfo","useMatchedPathHeader","matchedPath","urlPathname","normalizedUrlPath","stripNextDataPath","localeAnalysisResult","srcPathname","pageIsDynamic","getUtils","rewrites","caseSensitive","defaultRouteRegex","dynamicRouteMatcher","defaultRouteMatches","getNamedRouteRegex","getNamedParametrizedRoute","prefixRouteKeys","routeKey","fromCharCode","hasInterceptionMarker","namedParameterizedRoute","namedRegex","handleRewrites","rewriteParams","fsPathname","checkRewrite","hasParams","parsedDestination","destQuery","prepareDestination","destHostnameCompiler","newUrl","parseDestination","escaped","destHostname","destPath","destParams","destPathParamKeys","destHostnameParamKeys","destPathCompiler","strOrArray","paramKeys","appendParamsToQuery","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","matchesPage","fsPathnameNoSlash","fallback","getParamsFromRouteMatches","routeMatchesHeader","normalizedKey","keyName","normalizeDynamicRouteParams","ignoreMissingOptional","defaultValue","isDefaultValue","val","defaultVal","hasValidParams","normalizeVercelUrl","_parsedUrl","isNextQueryPrefix","isNextInterceptionMarkerPrefix","interpolateDynamicPath","paramValue","builtParam","replaceAll","getRoutesManifest","caseSensitiveRoutes","pathnameBeforeRewrite","rewriteParamKeys","didRewrite","queryParams","paramsResult","matcherParams","curParamsResult","routeMatches","renderError","webServerConfig","parsedFullUrl","getIncrementalCache","requestProtocol","resetRequestCache","__incrementalCache","cacheHandlers","getCacheHandlers","cacheHandler","previouslyRevalidatedTags","receiveExpiredTags","invokePath","invokeStatus","invokeQuery","parsedMatchedPath","invokePathnameInfo","normalizeResult","bubble","handler","getRequestHandler","loadInstrumentationModule","prepareImpl","normalizedPath","runImpl","pipe","partialContext","pipeImpl","isBotRequest","botType","serveStreamingMetadata","shouldServeStreamingMetadata","blockingMetadataUARegex","originalStatus","getStaticHTML","render","internalRender","renderImpl","getWaitUntil","builtinRequestContext","getBuiltinRequestContext","_globalThis","getInternalWaitUntil","customServer","hasPage","renderToResponse","getStaticPaths","staticPaths","fallbackMode","parseFallbackField","fallbackField","dynamicRoutes","renderToResponseWithComponents","requestContext","findComponentsResult","renderToResponseWithComponentsImpl","pathCouldBeIntercepted","resolvedPathname","setVaryHeader","isAppPath","baseVaryHeader","addedNextUrlToVary","components","prerenderManifest","cachedData","isErrorPathname","is404Page","is500Page","hasServerProps","getServerSideProps","hasGetStaticPaths","isPossibleServerAction","getServerActionRequestMetadata","actionId","isURLEncodedAction","isMultipartAction","isFetchAction","hasGetInitialProps","getInitialProps","isSSG","getStaticProps","resolvedUrlPathname","hasFallback","pathsResult","resolvedWithoutSlash","isNextDataRequest","isPrefetchRSCRequest","couldSupportPPR","hasDebugStaticShellQuery","__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING","__nextppronly","hasDebugFallbackShellQuery","renderingMode","isDebugStaticShell","isDebugFallbackShell","minimalPostponed","isDynamicRSCRequest","segmentPrefetchHeader","isHtmlBot","isSupportedDocument","Document","NEXT_BUILTIN_DOCUMENT","isPreviewMode","previewData","runtime","ssgCacheKey","doRender","pagesFallback","fallbackRouteParams","origQuery","hadTrailingSlash","resolvedUrl","shouldWaitOnAllReady","serverActions","resolvedAsPath","isDraftMode","onAfterTaskError","setIsrStatus","nextExport","isStaticGeneration","sharedContext","signalFromNodeResponse","AbortSignal","handle","cacheTags","collectedTags","blob","collectedRevalidate","collectedExpire","arrayBuffer","pendingWaitUntil","routerKind","routePath","routeType","revalidateReason","clientReferenceManifest","renderContext","developmentNotFoundSourcePage","renderHTML","fetchTags","staticBailoutInfo","description","isNotFound","isRedirect","REDIRECT","flightData","NOT_FOUND","PRERENDER","BLOCKING_STATIC_RENDER","staticPathKey","getFallbackRouteParams","pageOrKeys","uniqueID","isPrefetch","purpose","didPostpone","notFoundRevalidate","matchedSegment","onCacheEntry","handleRedirect","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","permanent","TemporaryRedirect","stripLocale","splitPath","getOriginalAppPaths","renderPageComponent","bubbleNoFallback","findPageComponents","sriEnabled","sri","algorithm","shouldEnsure","setRootSpanAttribute","isNoFallbackError","renderToResponseImpl","fromRequest","initUrl","rewroteUrl","renderErrorToResponse","isWrappedError","renderToHTML","renderToHTMLImpl","setHeaders","renderErrorImpl","renderErrorToResponseImpl","statusPage","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","deepFreeze","isFrozen","freeze","sharedCache","loadManifest","shouldCache","pagePathCache","getMaybePagePath","serverBuildPath","checkManifest","curPath","manifestNoLocales","getPagePath","requirePage","promises","readFile","__NEXT_PRIVATE_RUNTIME_TYPE","__non_webpack_require__","interopDefault","ms","SERVER_ACTION_MANIFESTS_SINGLETON","loadManifestWithRetries","manifestPath","attempts","tryLoadManifestWithRetries","evalManifestWithRetries","evalManifest","content","contextObject","runInNewContext","tryLoadClientReferenceManifest","entryName","__RSC_MANIFEST","loadComponentsImpl","isDev","reactLoadableManifestPath","DocumentMod","AppMod","manifestLoadAttempts","hasClientManifest","isStaticMetadataRoute","isMetadataRouteFile","appDirRelativePath","pageExtensions","strictlyMatchExtensions","trailingMatcher","suffixMatcher","metadataRouteFilesRegex","normalizedAppDirRelativePath","buildManifest","reactLoadableManifest","dynamicCssManifest","serverActionsManifest","subresourceIntegrityManifest","SERVER_REFERENCE_MANIFEST","SUBRESOURCE_INTEGRITY_MANIFEST","setReferenceManifestsSingleton","serverModuleMap","clientReferenceManifestsPerPage","createServerModuleMap","pageName","workerEntry","workers","at","async","ComponentMod","App","pageConfig","loadComponents","wrap","getMiddlewareRouteMatcher","MultiFileWriter","tasks","directory","task","mkdir","filePath","findOrCreateTask","writeFile","flatMap","FileSystemCache","flushToDisk","serverDistDir","revalidatedTags","maxMemoryCacheSize","FETCH","revalidateTag","getFilePath","fileData","mtime","stat","lastModified","getTime","fetchIdx","fetchUrl","parsedData","storedTags","fetchCache","maybeSegmentData","segmentPaths","segmentsDir","segmentDataFilePath","tagsHeader","combinedTags","softTags","htmlPath","SharedCacheControls","cacheControls","prerenderData","initialRevalidateSeconds","initialExpireSeconds","dynamicPrerenderData","fallbackRevalidate","fallbackExpire","IncrementalCache","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","hasCustomCacheHandler","cacheHandlersSymbol","globalCacheHandler","FetchCache","__NEXT_TEST_MAX_ISR_CACHE","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","_requestHeaders","calculateRevalidate","fromTime","_getPathname","lock","unlockNext","existingLock","newLock","generateCacheKey","bodyChunks","readableBody","total","arr","_ogBody","formData","text","Blob","cacheString","createHash","cacheData","revalidateAfter","resumeDataCache","getRenderResumeDataCache","memoryCacheData","fetch","pendingRevalidatedTags","age","notFoundRoutes","prerenderResumeDataCache","getPrerenderResumeDataCache","itemSize","nodeFs","recursive","MockedRequest","Stream","httpVersion","httpVersionMajor","httpVersionMinor","_target","bodyReadable","headersDistinct","_read","connection","complete","trailers","trailersDistinct","rawTrailers","rawHeaders","MockedResponse","buffers","headPromise","headPromiseResolve","hasStreamed","resWriter","isSent","_write","_encoding","writeHead","getHeaderNames","strictContentLength","writeEarlyHints","assignSocket","detachSocket","writeContinue","writeProcessing","upgrading","chunkedEncoding","shouldKeepAlive","useChunkedEncodingByDefault","sendDate","addTrailers","NodeModuleLoader","RouteModuleLoader","formatDynamicImportPath","absoluteFilePath","pathToFileURL","isInterceptionRouteRewrite","AsyncCallbackSet","callbacks","runAll","allSettled","dynamicImportEsmDefault","dynamicRequire","MiddlewareMatcherCache","NextNodeServer","BaseServer","registeredInstrumentation","cleanupListeners","edgeFunctionsPage","getEdgeFunctionsPages","runEdgeFunction","apiError","handleApiRequest","isMiddlewareInvoke","handleFinished","normalizedPathname","maybeDecodedPathname","bubblingResult","ensureMiddleware","runMiddleware","BubbledError","__NEXT_OPTIMIZE_CSS","__NEXT_SCRIPT_WORKERS","appDocumentPreloading","setHttpClientAndAgentOptions","__NEXT_HTTP_AGENT","__NEXT_HTTP_AGENT_OPTIONS","httpAgentOptions","HttpAgent","__NEXT_HTTPS_AGENT","HttpsAgent","middlewareManifestPath","populateStaticEnv","staticEnv","getNextPublicEnvironmentVariables","defineEnv","getNextConfigEnv","errorIfEnvConflicted","isPrivateKey","hasNextRuntimeKey","configFileName","innerKey","unstable_preloadEntries","loadCustomCacheHandlers","patchFetch","webpackRequire","__next_app__","handleUpgrade","runInstrumentationHookIfAvailable","register","forceReload","silent","initializeCacheHandlers","DefaultCache","DefaultCacheHandler","RemoteCache","setCacheHandler","CacheHandler","getCacheFilesystem","cacheMaxMemorySize","routesManifest","buildIdFile","runApi","trustHostHeader","onError","renderHTMLImpl","imageOptimizer","edgeFunctionsPages","findPageComponentsImpl","_url","pagePaths","NEXT_FONT_MANIFEST","logErrorWithOriginalStack","_err","_type","ensurePage","_opts","normalizeReq","normalizeRes","makeRequestHandler","revalidateHeaders","mocked","createRequestResponseMocks","unstable_onlyGenerated","internal","getMiddlewareManifest","middlewareModule","loadNodeMiddleware","originalSource","getMiddlewareMatcher","stored","functions","foundPage","pageInfo","files","wasm","binding","assets","nodeMiddleware","functionsConfig","hasMiddleware","getEdgeFunctionInfo","ensureEdgeFunction","_params","_cachedPreviewManifest","NEXT_PHASE","isUpgradeReq","getCloneableBody","buffered","endPromise","finalize","replaceRequestBody","cloneBodyStream","p1","PassThrough","p2","_serverDistDir","onServerClose","listener","internalWaitUntil","createInternalWaitUntil"],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228]}