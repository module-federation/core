name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: 'Release Version (next, beta, alpha, latest)'
        required: true
        default: 'next'
        options:
          - next
          - beta
          - alpha
          - latest
      branch:
        description: 'Release Branch (confirm release branch)'
        required: true
        default: 'main'

permissions:
  id-token: write

jobs:
  release:
    name: Release
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    environment: npm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22
          cache: 'pnpm'

      # Update npm to the latest version to enable OIDC
      # Use corepack to install pnpm
      - name: Setup Package Managers
        run: |
          npm install -g npm@latest
          npm --version
          npm install -g corepack@latest --force
          corepack prepare pnpm@8.11.0 --activate
          corepack enable

      - name: Install deps
        run: pnpm install

      - name: Build and test Packages
        run: |
          git fetch origin main
          npx nx run-many --targets=build --projects=tag:type:pkg --skip-nx-cache
          npx nx run-many --targets=build --projects=tag:type:metro
          ls -l packages/*/dist packages/*/package.json

      - uses: actions/github-script@v7
        id: version_to_release
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            const packageJson = JSON.parse(fs.readFileSync('./packages/runtime/package.json', 'utf8'));
            return 'v' + packageJson.version;

      - name: Publish to npm
        run: |
          git tag ${{ steps.version_to_release.outputs.result }}
          git push origin ${{ steps.version_to_release.outputs.result }}
          pnpm -r publish --tag ${{ github.event.inputs.npm_tag }} --publish-branch ${{ github.event.inputs.branch }}
