name: Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Packages to Publish'
        required: true
        type: choice
        options:
          - all
          - nextjs-mf
          - node
          - storybook-addon
          - typescript
          - utils
          - native-federation-typescript
          - native-federation-tests

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "gituser@example.com"
      - name: Install packages
        run: npm i
      - name: Lint
        shell: bash
        run: |
          PROJECTS=$($(yarn bin)/nx print-affected --type=lib --select=projects --base=origin/main)
          if [[ "$PROJECTS" ]]; then
            yarn nx run-many --target=lint --projects="$PROJECTS"
          else
            echo "No changes, Skipping lint check."
          fi
      - name: Build
        shell: bash
        run: |
          yarn nx run-many --target=build --projects=typescript,utils,node,nextjs-mf,storybook-addon,native-federation-typescript,native-federation-tests
      - name: Version
        shell: bash
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          PROJECTS=${{ inputs.package }}

          if [[ $PROJECTS == "all" ]]; then
            PROJECTS=$($(yarn bin)/nx print-affected --type=lib --select=projects --base=last-release)
          fi;

          echo "Projects to version: $PROJECTS"

          yarn nx run-many --target=version --projects="$PROJECTS" --parallel=1 --allowEmptyRelease=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Tag last-release
        shell: bash
        run: |
          git tag -f last-release
          git push origin last-release --force
