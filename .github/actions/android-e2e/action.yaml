name: Android E2E Tests
description: 'Runs Android E2E tests'

inputs:
  app_name:
    description: 'Name of the app to test'
    required: true
  github_token:
    description: 'GitHub token for authentication'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
        clean: true

    - name: Setup KVM (Required for Android Emulator)
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
      shell: bash

    - uses: pnpm/action-setup@v3

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      shell: bash

    - name: Install Maestro CLI
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "${HOME}/.maestro/bin" >> $GITHUB_PATH
      shell: bash

    - name: Local RNEF Setup
      shell: bash
      run: |
        RNEF_PATH="apps/${{ inputs.app_name }}/.rnef/cache"
        mkdir -p $RNEF_PATH
        echo "{\"githubToken\": \"${{ inputs.github_token }}\"}" > "$RNEF_PATH/project.json"

    - name: E2E Prepare Script
      run: |
        pnpm --filter ${{ inputs.app_name }} e2e:prepare:android
        # Serve mini apps in the background
        pnpm --filter ${{ inputs.app_name }} e2e:serve:android &
      shell: bash

    - uses: callstackincubator/android@v1
      with:
        github-token: ${{ inputs.github_token }}
        variant: 'Release'
        working-directory: './apps/${{ inputs.app_name}}'

    - name: Run Android E2E Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ env.ANDROID_EMULATOR_API_LEVEL }}
        target: ${{ env.ANDROID_EMULATOR_TARGET }}
        arch: ${{ env.ANDROID_EMULATOR_ARCH }}
        disk-size: ${{ env.ANDROID_EMULATOR_DISK_SPACE }}
        emulator-boot-timeout: ${{ env.ANDROID_EMULATOR_BOOT_TIMEOUT }}
        force-avd-creation: false
        disable-animations: true
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        script: |
          pnpm --filter ${{ inputs.app_name }} android:release
          pnpm --filter ${{ inputs.app_name }} adbreverse
          pnpm --filter ${{ inputs.app_name }} e2e:run:android

    - name: Upload Maestro Logs on Failure
      if: failure() # Runs only if any of the previous steps fail
      uses: actions/upload-artifact@v4
      with:
        name: maestro-logs-android-${{ inputs.app_name }}
        path: ~/.maestro/tests/
