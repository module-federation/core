{"version":3,"sources":["../../../../../packages/typescript/src/lib/download.ts"],"sourcesContent":["import fs from 'fs';\nimport fetch from 'node-fetch';\nimport path from 'path';\nimport util from 'util';\nimport { pipeline } from 'stream';\n\nconst pipelineAsync = util.promisify(pipeline);\n\nexport interface DownloadOptions {\n  /**\n   * URL of the file.\n   */\n  url: string;\n\n  /**\n   * Path to where the file will be saved.\n   */\n  destination: string;\n\n  /**\n   * Name of the file.\n   */\n  filename: string;\n}\n\n/**\n * Downloads a file from a URL and saves it to disk.\n *\n * @param options Download options.\n */\nexport default async function download(options: DownloadOptions) {\n  const { url, destination, filename } = options;\n\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error(\n      `Error ${response.status}. Failed to fetch types for URL: ${url}`\n    );\n  }\n\n  const fileDest = path.normalize(path.join(destination, filename));\n\n  // Create the dir path. This doesn't do anything if dir already exists.\n  await fs.promises.mkdir(path.dirname(fileDest), {\n    recursive: true,\n  });\n\n  await pipelineAsync(\n    response.body,\n    fs.createWriteStream(fileDest, {\n      flags: 'w',\n    })\n  );\n}\n"],"names":["download","pipelineAsync","util","promisify","pipeline","options","url","destination","filename","response","fetch","ok","Error","status","fileDest","path","normalize","join","fs","promises","mkdir","dirname","recursive","body","createWriteStream","flags"],"mappings":";;;;+BAyBA;;;;CAIC,GACD;;;eAA8BA;;;;6DA9Bf;oEACG;+DACD;+DACA;wBACQ;AAEzB,MAAMC,gBAAgBC,aAAI,CAACC,SAAS,CAACC,gBAAQ;AAwB9B,eAAeJ,SAASK,OAAwB,EAAE;IAC/D,MAAM,EAAEC,IAAG,EAAEC,YAAW,EAAEC,SAAQ,EAAE,GAAGH;IAEvC,MAAMI,WAAW,MAAMC,IAAAA,kBAAK,EAACJ;IAE7B,IAAI,CAACG,SAASE,EAAE,EAAE;QAChB,MAAM,IAAIC,MACR,CAAC,MAAM,EAAEH,SAASI,MAAM,CAAC,iCAAiC,EAAEP,IAAI,CAAC,EACjE;IACJ,CAAC;IAED,MAAMQ,WAAWC,aAAI,CAACC,SAAS,CAACD,aAAI,CAACE,IAAI,CAACV,aAAaC;IAEvD,uEAAuE;IACvE,MAAMU,WAAE,CAACC,QAAQ,CAACC,KAAK,CAACL,aAAI,CAACM,OAAO,CAACP,WAAW;QAC9CQ,WAAW,IAAI;IACjB;IAEA,MAAMrB,cACJQ,SAASc,IAAI,EACbL,WAAE,CAACM,iBAAiB,CAACV,UAAU;QAC7BW,OAAO;IACT;AAEJ"}