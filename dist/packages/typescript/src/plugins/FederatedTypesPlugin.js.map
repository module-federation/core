{"version":3,"sources":["../../../../../packages/typescript/src/plugins/FederatedTypesPlugin.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport axios from 'axios';\nimport { Compiler } from 'webpack';\n\nimport {\n  isObjectEmpty,\n  Logger,\n  LoggerInstance,\n} from '@module-federation/utilities';\n\nimport { TypescriptCompiler } from '../lib/TypescriptCompiler';\nimport { normalizeOptions } from '../lib/normalizeOptions';\nimport { TypesCache } from '../lib/Caching';\nimport {\n  CompilationParams,\n  FederatedTypesPluginOptions,\n  TypesStatsJson,\n} from '../types';\n\nimport { FederatedTypesStatsPlugin } from './FederatedTypesStatsPlugin';\nimport download from '../lib/download';\n\nconst PLUGIN_NAME = 'FederatedTypesPlugin';\n\nexport class FederatedTypesPlugin {\n  private normalizeOptions!: ReturnType<typeof normalizeOptions>;\n  private logger!: LoggerInstance;\n\n  constructor(private options: FederatedTypesPluginOptions) {}\n\n  apply(compiler: Compiler) {\n    this.normalizeOptions = normalizeOptions(this.options, compiler);\n\n    const { disableDownloadingRemoteTypes, disableTypeCompilation } =\n      this.normalizeOptions;\n\n    // Bail if both 'disableDownloadingRemoteTypes' & 'disableTypeCompilation' are 'truthy'\n    if (disableDownloadingRemoteTypes && disableTypeCompilation) {\n      return;\n    }\n\n    this.logger = Logger.setLogger(\n      compiler.getInfrastructureLogger(PLUGIN_NAME)\n    );\n\n    compiler.options.watchOptions.ignored =\n      this.normalizeOptions.ignoredWatchOptions;\n\n    if (!disableDownloadingRemoteTypes) {\n      const importRemotes = async (\n        callback: Parameters<\n          Parameters<typeof compiler.hooks.beforeRun.tapAsync>['1']\n        >['1']\n      ) => {\n        try {\n          await this.importRemoteTypes();\n          callback();\n        } catch (error) {\n          callback(this.getError(error));\n        }\n      };\n\n      compiler.hooks.beforeRun.tapAsync(PLUGIN_NAME, async (_, callback) => {\n        this.logger.log('Preparing to download types from remotes on startup');\n        await importRemotes(callback);\n      });\n\n      compiler.hooks.watchRun.tapAsync(PLUGIN_NAME, async (_, callback) => {\n        this.logger.log('Preparing to download types from remotes');\n        await importRemotes(callback);\n      });\n    }\n\n    if (!disableTypeCompilation) {\n      compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (_, params) => {\n        this.logger.log('Preparing to Generate types');\n\n        const filesMap = this.compileTypes();\n\n        (params as CompilationParams).federated_types = filesMap;\n      });\n\n      new FederatedTypesStatsPlugin(this.normalizeOptions).apply(compiler);\n    }\n  }\n\n  private compileTypes() {\n    const exposedComponents = this.options.federationConfig.exposes;\n\n    if (!exposedComponents) {\n      return {};\n    }\n\n    // './Component': 'path/to/component' -> ['./Component', 'path/to/component']\n    const compiler = new TypescriptCompiler(this.normalizeOptions);\n\n    try {\n      return compiler.generateDeclarationFiles(\n        exposedComponents,\n        this.options.additionalFilesToCompile\n      );\n    } catch (error) {\n      this.logger.error(error);\n      throw error;\n    }\n  }\n\n  private async importRemoteTypes() {\n    const remoteComponents = this.options.federationConfig.remotes;\n\n    if (\n      !remoteComponents ||\n      (remoteComponents && isObjectEmpty(remoteComponents))\n    ) {\n      this.logger.log('No Remote components configured');\n      return;\n    }\n\n    this.logger.log('Normalizing remote URLs');\n    const remoteUrls = Object.entries(remoteComponents).map(\n      ([remote, entry]) => {\n        const remoteUrl = entry.substring(0, entry.lastIndexOf('/'));\n        const splitIndex = remoteUrl.indexOf('@');\n        const url = remoteUrl.substring(splitIndex + 1);\n\n        return {\n          origin: url ?? remoteUrl,\n          remote,\n        };\n      }\n    );\n\n    for await (const { origin, remote } of remoteUrls) {\n      const { typescriptFolderName, downloadRemoteTypesTimeout } =\n        this.normalizeOptions;\n\n      try {\n        this.logger.log(`Getting types index for remote '${remote}'`);\n        const resp = await axios.get<TypesStatsJson>(\n          `${origin}/${this.normalizeOptions.typesIndexJsonFileName}`,\n          { timeout: downloadRemoteTypesTimeout }\n        );\n\n        const statsJson = resp.data;\n\n        if (statsJson?.files) {\n          this.logger.log(`Checking with Cache entries`);\n\n          const { filesToCacheBust, filesToDelete } =\n            TypesCache.getCacheBustedFiles(remote, statsJson);\n\n          this.logger.log('filesToCacheBust', filesToCacheBust);\n          this.logger.log('filesToDelete', filesToDelete);\n\n          if (filesToDelete.length > 0) {\n            filesToDelete.forEach((file) => {\n              fs.unlinkSync(\n                path.resolve(\n                  this.normalizeOptions.webpackCompilerOptions\n                    .context as string,\n                  typescriptFolderName,\n                  remote,\n                  file\n                )\n              );\n            });\n          }\n\n          if (filesToCacheBust.length > 0) {\n            await Promise.all(\n              filesToCacheBust.map((file) => {\n                const url = new URL(\n                  path.join(origin, typescriptFolderName, file)\n                ).toString();\n                const destination = path.join(\n                  this.normalizeOptions.webpackCompilerOptions\n                    .context as string,\n                  typescriptFolderName,\n                  remote\n                );\n\n                this.logger.log('Downloading types...');\n                return download({\n                  url,\n                  destination,\n                  filename: file,\n                });\n              })\n            );\n\n            this.logger.log('downloading complete');\n          }\n        } else {\n          this.logger.log(`No types index found for remote '${remote}'`);\n        }\n      } catch (error) {\n        this.logger.error(\n          `Unable to download '${remote}' remote types index file: `,\n          (error as Error).message\n        );\n        this.logger.log(error);\n      }\n    }\n  }\n\n  private getError(error: unknown): Error {\n    if (error instanceof Error) return error;\n    return new Error(error as string);\n  }\n}\n"],"names":["FederatedTypesPlugin","PLUGIN_NAME","apply","compiler","normalizeOptions","options","disableDownloadingRemoteTypes","disableTypeCompilation","logger","Logger","setLogger","getInfrastructureLogger","watchOptions","ignored","ignoredWatchOptions","importRemotes","callback","importRemoteTypes","error","getError","hooks","beforeRun","tapAsync","_","log","watchRun","thisCompilation","tap","params","filesMap","compileTypes","federated_types","FederatedTypesStatsPlugin","exposedComponents","federationConfig","exposes","TypescriptCompiler","generateDeclarationFiles","additionalFilesToCompile","remoteComponents","remotes","isObjectEmpty","remoteUrls","Object","entries","map","remote","entry","remoteUrl","substring","lastIndexOf","splitIndex","indexOf","url","origin","typescriptFolderName","downloadRemoteTypesTimeout","resp","axios","get","typesIndexJsonFileName","timeout","statsJson","data","files","filesToCacheBust","filesToDelete","TypesCache","getCacheBustedFiles","length","forEach","file","fs","unlinkSync","path","resolve","webpackCompilerOptions","context","Promise","all","URL","join","toString","destination","download","filename","message","Error","constructor"],"mappings":"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"}