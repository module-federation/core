{
  "name": "node",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/node/src",
  "projectType": "library",
  "tags": ["type:pkg"],
  "targets": {
    "build": {
      "executor": "@nx/rollup:rollup",
      "outputs": ["{workspaceRoot}/packages/node/dist"],
      "options": {
        "parallel": false,
        "outputPath": "packages/node/dist",
        "main": "packages/node/src/index.js",
        "additionalEntryPoints": [
          "packages/node/src/runtimePlugin.js",
          "packages/node/src/recordDynamicRemoteEntryHashPlugin.js",
          "packages/node/src/utils/index.js",
          "packages/node/src/plugins/NodeFederationPlugin.js",
          "packages/node/src/plugins/UniverseEntryChunkTrackerPlugin.js"
        ],
        "tsConfig": "packages/node/tsconfig.lib.json",
        "assets": [],
        "external": ["@module-federation/*"],
        "project": "packages/node/package.json",
        "compiler": "swc",
        "rollupConfig": "packages/node/rollup.config.cjs",
        "format": ["cjs", "esm"],
        "generatePackageJson": false,
        "useLegacyTypescriptPlugin": false
      },
      "dependsOn": [
        {
          "target": "build",
          "dependencies": true
        }
      ]
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/node/**/*.js", "packages/node/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/packages/node"],
      "options": {
        "jestConfig": "packages/node/jest.config.js",
        "passWithNoTests": true
      }
    },
    "pre-release": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [
          {
            "command": "nx run node:test",
            "forwardAllArgs": false
          },
          {
            "command": "nx run node:build",
            "forwardAllArgs": false
          }
        ]
      }
    }
  }
}
