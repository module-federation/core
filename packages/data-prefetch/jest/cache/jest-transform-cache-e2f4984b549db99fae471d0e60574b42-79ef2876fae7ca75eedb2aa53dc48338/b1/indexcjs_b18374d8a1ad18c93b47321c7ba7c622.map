{"version":3,"sources":["/Users/bytedance/WebstormProjects/universe/packages/runtime/dist/index.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar polyfills = require('./polyfills.cjs.js');\nvar sdk = require('@module-federation/sdk');\nvar share = require('./share.cjs.js');\n\n// Function to match a remote with its name and expose\n// id: pkgName(@federation/app1) + expose(button) = @federation/app1/button\n// id: alias(app1) + expose(button) = app1/button\n// id: alias(app1/utils) + expose(loadash/sort) = app1/utils/loadash/sort\nfunction matchRemoteWithNameAndExpose(remotes, id) {\n    for (const remote of remotes){\n        // match pkgName\n        const isNameMatched = id.startsWith(remote.name);\n        let expose = id.replace(remote.name, '');\n        if (isNameMatched) {\n            if (expose.startsWith('/')) {\n                const pkgNameOrAlias = remote.name;\n                expose = `.${expose}`;\n                return {\n                    pkgNameOrAlias,\n                    expose,\n                    remote\n                };\n            } else if (expose === '') {\n                return {\n                    pkgNameOrAlias: remote.name,\n                    expose: '.',\n                    remote\n                };\n            }\n        }\n        // match alias\n        const isAliasMatched = remote.alias && id.startsWith(remote.alias);\n        let exposeWithAlias = remote.alias && id.replace(remote.alias, '');\n        if (remote.alias && isAliasMatched) {\n            if (exposeWithAlias && exposeWithAlias.startsWith('/')) {\n                const pkgNameOrAlias = remote.alias;\n                exposeWithAlias = `.${exposeWithAlias}`;\n                return {\n                    pkgNameOrAlias,\n                    expose: exposeWithAlias,\n                    remote\n                };\n            } else if (exposeWithAlias === '') {\n                return {\n                    pkgNameOrAlias: remote.alias,\n                    expose: '.',\n                    remote\n                };\n            }\n        }\n    }\n    return;\n}\n// Function to match a remote with its name or alias\nfunction matchRemote(remotes, nameOrAlias) {\n    for (const remote of remotes){\n        const isNameMatched = nameOrAlias === remote.name;\n        if (isNameMatched) {\n            return remote;\n        }\n        const isAliasMatched = remote.alias && nameOrAlias === remote.alias;\n        if (isAliasMatched) {\n            return remote;\n        }\n    }\n    return;\n}\n\nfunction registerPlugins$1(plugins, hookInstances) {\n    const globalPlugins = share.getGlobalHostPlugins();\n    // Incorporate global plugins\n    if (globalPlugins.length > 0) {\n        globalPlugins.forEach((plugin)=>{\n            if (plugins == null ? void 0 : plugins.find((item)=>item.name !== plugin.name)) {\n                plugins.push(plugin);\n            }\n        });\n    }\n    if (plugins && plugins.length > 0) {\n        plugins.forEach((plugin)=>{\n            hookInstances.forEach((hookInstance)=>{\n                hookInstance.applyPlugin(plugin);\n            });\n        });\n    }\n    return plugins;\n}\n\nasync function loadEsmEntry({ entry, remoteEntryExports }) {\n    return new Promise((resolve, reject)=>{\n        try {\n            if (!remoteEntryExports) {\n                // eslint-disable-next-line no-eval\n                new Function('callbacks', `import(\"${entry}\").then(callbacks[0]).catch(callbacks[1])`)([\n                    resolve,\n                    reject\n                ]);\n            } else {\n                resolve(remoteEntryExports);\n            }\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\nasync function loadSystemJsEntry({ entry, remoteEntryExports }) {\n    return new Promise((resolve, reject)=>{\n        try {\n            if (!remoteEntryExports) {\n                // eslint-disable-next-line no-eval\n                new Function('callbacks', `System.import(\"${entry}\").then(callbacks[0]).catch(callbacks[1])`)([\n                    resolve,\n                    reject\n                ]);\n            } else {\n                resolve(remoteEntryExports);\n            }\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\nasync function loadEntryScript({ name, globalName, entry, createScriptHook }) {\n    const { entryExports: remoteEntryExports } = share.getRemoteEntryExports(name, globalName);\n    if (remoteEntryExports) {\n        return remoteEntryExports;\n    }\n    return sdk.loadScript(entry, {\n        attrs: {},\n        createScriptHook: (url, attrs)=>{\n            const res = createScriptHook.emit({\n                url,\n                attrs\n            });\n            if (!res) return;\n            if (res instanceof HTMLScriptElement) {\n                return res;\n            }\n            if ('script' in res || 'timeout' in res) {\n                return res;\n            }\n            return;\n        }\n    }).then(()=>{\n        const { remoteEntryKey, entryExports } = share.getRemoteEntryExports(name, globalName);\n        share.assert(entryExports, `\n      Unable to use the ${name}'s '${entry}' URL with ${remoteEntryKey}'s globalName to get remoteEntry exports.\n      Possible reasons could be:\\n\n      1. '${entry}' is not the correct URL, or the remoteEntry resource or name is incorrect.\\n\n      2. ${remoteEntryKey} cannot be used to get remoteEntry exports in the window object.\n    `);\n        return entryExports;\n    }).catch((e)=>{\n        throw e;\n    });\n}\nasync function loadEntryDom({ remoteInfo, remoteEntryExports, createScriptHook }) {\n    const { entry, entryGlobalName: globalName, name, type } = remoteInfo;\n    switch(type){\n        case 'esm':\n        case 'module':\n            return loadEsmEntry({\n                entry,\n                remoteEntryExports\n            });\n        case 'system':\n            return loadSystemJsEntry({\n                entry,\n                remoteEntryExports\n            });\n        default:\n            return loadEntryScript({\n                entry,\n                globalName,\n                name,\n                createScriptHook\n            });\n    }\n}\nasync function loadEntryNode({ remoteInfo, createScriptHook }) {\n    const { entry, entryGlobalName: globalName, name } = remoteInfo;\n    const { entryExports: remoteEntryExports } = share.getRemoteEntryExports(name, globalName);\n    if (remoteEntryExports) {\n        return remoteEntryExports;\n    }\n    return sdk.loadScriptNode(entry, {\n        attrs: {\n            name,\n            globalName\n        },\n        createScriptHook: (url, attrs)=>{\n            const res = createScriptHook.emit({\n                url,\n                attrs\n            });\n            if (!res) return;\n            if ('url' in res) {\n                return res;\n            }\n            return;\n        }\n    }).then(()=>{\n        const { remoteEntryKey, entryExports } = share.getRemoteEntryExports(name, globalName);\n        share.assert(entryExports, `\n      Unable to use the ${name}'s '${entry}' URL with ${remoteEntryKey}'s globalName to get remoteEntry exports.\n      Possible reasons could be:\\n\n      1. '${entry}' is not the correct URL, or the remoteEntry resource or name is incorrect.\\n\n      2. ${remoteEntryKey} cannot be used to get remoteEntry exports in the window object.\n    `);\n        return entryExports;\n    }).catch((e)=>{\n        throw e;\n    });\n}\nfunction getRemoteEntryUniqueKey(remoteInfo) {\n    const { entry, name } = remoteInfo;\n    return sdk.composeKeyWithSeparator(name, entry);\n}\nasync function getRemoteEntry({ origin, remoteEntryExports, remoteInfo }) {\n    const uniqueKey = getRemoteEntryUniqueKey(remoteInfo);\n    if (remoteEntryExports) {\n        return remoteEntryExports;\n    }\n    if (!share.globalLoading[uniqueKey]) {\n        const loadEntryHook = origin.remoteHandler.hooks.lifecycle.loadEntry;\n        if (loadEntryHook.listeners.size) {\n            share.globalLoading[uniqueKey] = loadEntryHook.emit({\n                createScriptHook: origin.loaderHook.lifecycle.createScript,\n                remoteInfo,\n                remoteEntryExports\n            }).then((res)=>res || undefined);\n        } else {\n            const createScriptHook = origin.loaderHook.lifecycle.createScript;\n            if (!sdk.isBrowserEnv()) {\n                share.globalLoading[uniqueKey] = loadEntryNode({\n                    remoteInfo,\n                    createScriptHook\n                });\n            } else {\n                share.globalLoading[uniqueKey] = loadEntryDom({\n                    remoteInfo,\n                    remoteEntryExports,\n                    createScriptHook\n                });\n            }\n        }\n    }\n    return share.globalLoading[uniqueKey];\n}\nfunction getRemoteInfo(remote) {\n    return polyfills._extends({}, remote, {\n        entry: 'entry' in remote ? remote.entry : '',\n        type: remote.type || share.DEFAULT_REMOTE_TYPE,\n        entryGlobalName: remote.entryGlobalName || remote.name,\n        shareScope: remote.shareScope || share.DEFAULT_SCOPE\n    });\n}\n\nlet Module = class Module {\n    async getEntry() {\n        if (this.remoteEntryExports) {\n            return this.remoteEntryExports;\n        }\n        // Get remoteEntry.js\n        const remoteEntryExports = await getRemoteEntry({\n            origin: this.host,\n            remoteInfo: this.remoteInfo,\n            remoteEntryExports: this.remoteEntryExports\n        });\n        share.assert(remoteEntryExports, `remoteEntryExports is undefined \\n ${sdk.safeToString(this.remoteInfo)}`);\n        this.remoteEntryExports = remoteEntryExports;\n        return this.remoteEntryExports;\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    async get(id, expose, options, remoteSnapshot) {\n        const { loadFactory = true } = options || {\n            loadFactory: true\n        };\n        // Get remoteEntry.js\n        const remoteEntryExports = await this.getEntry();\n        if (!this.inited) {\n            const localShareScopeMap = this.host.shareScopeMap;\n            const remoteShareScope = this.remoteInfo.shareScope || 'default';\n            if (!localShareScopeMap[remoteShareScope]) {\n                localShareScopeMap[remoteShareScope] = {};\n            }\n            const shareScope = localShareScopeMap[remoteShareScope];\n            const initScope = [];\n            const remoteEntryInitOptions = {\n                version: this.remoteInfo.version || ''\n            };\n            // Help to find host instance\n            Object.defineProperty(remoteEntryInitOptions, 'shareScopeMap', {\n                value: localShareScopeMap,\n                // remoteEntryInitOptions will be traversed and assigned during container init, ,so this attribute is not allowed to be traversed\n                enumerable: false\n            });\n            const initContainerOptions = await this.host.hooks.lifecycle.beforeInitContainer.emit({\n                shareScope,\n                // @ts-ignore shareScopeMap will be set by Object.defineProperty\n                remoteEntryInitOptions,\n                initScope,\n                remoteInfo: this.remoteInfo,\n                origin: this.host\n            });\n            if (typeof (remoteEntryExports == null ? void 0 : remoteEntryExports.init) === 'undefined') {\n                console.error('The remote entry interface does not contain \"init\"', '\\n', 'Ensure the name of this remote is not reserved or in use. Check if anything already exists on window[nameOfRemote]', '\\n', 'Ensure that window[nameOfRemote] is returning a {get,init} object.');\n            }\n            await remoteEntryExports.init(initContainerOptions.shareScope, initContainerOptions.initScope, initContainerOptions.remoteEntryInitOptions);\n            await this.host.hooks.lifecycle.initContainer.emit(polyfills._extends({}, initContainerOptions, {\n                id,\n                remoteSnapshot,\n                remoteEntryExports\n            }));\n        }\n        this.lib = remoteEntryExports;\n        this.inited = true;\n        // get exposeGetter\n        const moduleFactory = await remoteEntryExports.get(expose);\n        share.assert(moduleFactory, `${share.getFMId(this.remoteInfo)} remote don't export ${expose}.`);\n        const wrapModuleFactory = this.wraperFactory(moduleFactory, id);\n        if (!loadFactory) {\n            return wrapModuleFactory;\n        }\n        const exposeContent = await wrapModuleFactory();\n        return exposeContent;\n    }\n    wraperFactory(moduleFactory, id) {\n        function defineModuleId(res, id) {\n            if (res && typeof res === 'object' && Object.isExtensible(res) && !Object.getOwnPropertyDescriptor(res, Symbol.for('mf_module_id'))) {\n                Object.defineProperty(res, Symbol.for('mf_module_id'), {\n                    value: id,\n                    enumerable: false\n                });\n            }\n        }\n        if (moduleFactory instanceof Promise) {\n            return async ()=>{\n                const res = await moduleFactory();\n                // This parameter is used for bridge debugging\n                defineModuleId(res, id);\n                return res;\n            };\n        } else {\n            return ()=>{\n                const res = moduleFactory();\n                // This parameter is used for bridge debugging\n                defineModuleId(res, id);\n                return res;\n            };\n        }\n    }\n    constructor({ remoteInfo, host }){\n        this.inited = false;\n        this.lib = undefined;\n        this.remoteInfo = remoteInfo;\n        this.host = host;\n    }\n};\n\nclass SyncHook {\n    on(fn) {\n        if (typeof fn === 'function') {\n            this.listeners.add(fn);\n        }\n    }\n    once(fn) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        this.on(function wrapper(...args) {\n            self.remove(wrapper);\n            // eslint-disable-next-line prefer-spread\n            return fn.apply(null, args);\n        });\n    }\n    emit(...data) {\n        let result;\n        if (this.listeners.size > 0) {\n            // eslint-disable-next-line prefer-spread\n            this.listeners.forEach((fn)=>{\n                result = fn(...data);\n            });\n        }\n        return result;\n    }\n    remove(fn) {\n        this.listeners.delete(fn);\n    }\n    removeAll() {\n        this.listeners.clear();\n    }\n    constructor(type){\n        this.type = '';\n        this.listeners = new Set();\n        if (type) {\n            this.type = type;\n        }\n    }\n}\n\nclass AsyncHook extends SyncHook {\n    emit(...data) {\n        let result;\n        const ls = Array.from(this.listeners);\n        if (ls.length > 0) {\n            let i = 0;\n            const call = (prev)=>{\n                if (prev === false) {\n                    return false; // Abort process\n                } else if (i < ls.length) {\n                    return Promise.resolve(ls[i++].apply(null, data)).then(call);\n                } else {\n                    return prev;\n                }\n            };\n            result = call();\n        }\n        return Promise.resolve(result);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction checkReturnData(originalData, returnedData) {\n    if (!share.isObject(returnedData)) {\n        return false;\n    }\n    if (originalData !== returnedData) {\n        // eslint-disable-next-line no-restricted-syntax\n        for(const key in originalData){\n            if (!(key in returnedData)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nclass SyncWaterfallHook extends SyncHook {\n    emit(data) {\n        if (!share.isObject(data)) {\n            share.error(`The data for the \"${this.type}\" hook should be an object.`);\n        }\n        for (const fn of this.listeners){\n            try {\n                const tempData = fn(data);\n                if (checkReturnData(data, tempData)) {\n                    data = tempData;\n                } else {\n                    this.onerror(`A plugin returned an unacceptable value for the \"${this.type}\" type.`);\n                    break;\n                }\n            } catch (e) {\n                share.warn(e);\n                this.onerror(e);\n            }\n        }\n        return data;\n    }\n    constructor(type){\n        super();\n        this.onerror = share.error;\n        this.type = type;\n    }\n}\n\nclass AsyncWaterfallHook extends SyncHook {\n    emit(data) {\n        if (!share.isObject(data)) {\n            share.error(`The response data for the \"${this.type}\" hook must be an object.`);\n        }\n        const ls = Array.from(this.listeners);\n        if (ls.length > 0) {\n            let i = 0;\n            const processError = (e)=>{\n                share.warn(e);\n                this.onerror(e);\n                return data;\n            };\n            const call = (prevData)=>{\n                if (checkReturnData(data, prevData)) {\n                    data = prevData;\n                    if (i < ls.length) {\n                        try {\n                            return Promise.resolve(ls[i++](data)).then(call, processError);\n                        } catch (e) {\n                            return processError(e);\n                        }\n                    }\n                } else {\n                    this.onerror(`A plugin returned an incorrect value for the \"${this.type}\" type.`);\n                }\n                return data;\n            };\n            return Promise.resolve(call(data));\n        }\n        return Promise.resolve(data);\n    }\n    constructor(type){\n        super();\n        this.onerror = share.error;\n        this.type = type;\n    }\n}\n\nclass PluginSystem {\n    applyPlugin(plugin) {\n        share.assert(share.isPlainObject(plugin), 'Plugin configuration is invalid.');\n        // The plugin's name is mandatory and must be unique\n        const pluginName = plugin.name;\n        share.assert(pluginName, 'A name must be provided by the plugin.');\n        if (!this.registerPlugins[pluginName]) {\n            this.registerPlugins[pluginName] = plugin;\n            Object.keys(this.lifecycle).forEach((key)=>{\n                const pluginLife = plugin[key];\n                if (pluginLife) {\n                    this.lifecycle[key].on(pluginLife);\n                }\n            });\n        }\n    }\n    removePlugin(pluginName) {\n        share.assert(pluginName, 'A name is required.');\n        const plugin = this.registerPlugins[pluginName];\n        share.assert(plugin, `The plugin \"${pluginName}\" is not registered.`);\n        Object.keys(plugin).forEach((key)=>{\n            if (key !== 'name') {\n                this.lifecycle[key].remove(plugin[key]);\n            }\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    inherit({ lifecycle, registerPlugins }) {\n        Object.keys(lifecycle).forEach((hookName)=>{\n            share.assert(!this.lifecycle[hookName], `The hook \"${hookName}\" has a conflict and cannot be inherited.`);\n            this.lifecycle[hookName] = lifecycle[hookName];\n        });\n        Object.keys(registerPlugins).forEach((pluginName)=>{\n            share.assert(!this.registerPlugins[pluginName], `The plugin \"${pluginName}\" has a conflict and cannot be inherited.`);\n            this.applyPlugin(registerPlugins[pluginName]);\n        });\n    }\n    constructor(lifecycle){\n        this.registerPlugins = {};\n        this.lifecycle = lifecycle;\n        this.lifecycleKeys = Object.keys(lifecycle);\n    }\n}\n\nfunction defaultPreloadArgs(preloadConfig) {\n    return polyfills._extends({\n        resourceCategory: 'sync',\n        share: true,\n        depsRemote: true,\n        prefetchInterface: false\n    }, preloadConfig);\n}\nfunction formatPreloadArgs(remotes, preloadArgs) {\n    return preloadArgs.map((args)=>{\n        const remoteInfo = matchRemote(remotes, args.nameOrAlias);\n        share.assert(remoteInfo, `Unable to preload ${args.nameOrAlias} as it is not included in ${!remoteInfo && sdk.safeToString({\n            remoteInfo,\n            remotes\n        })}`);\n        return {\n            remote: remoteInfo,\n            preloadConfig: defaultPreloadArgs(args)\n        };\n    });\n}\nfunction normalizePreloadExposes(exposes) {\n    if (!exposes) {\n        return [];\n    }\n    return exposes.map((expose)=>{\n        if (expose === '.') {\n            return expose;\n        }\n        if (expose.startsWith('./')) {\n            return expose.replace('./', '');\n        }\n        return expose;\n    });\n}\nfunction preloadAssets(remoteInfo, host, assets, // It is used to distinguish preload from load remote parallel loading\nuseLinkPreload = true) {\n    const { cssAssets, jsAssetsWithoutEntry, entryAssets } = assets;\n    if (host.options.inBrowser) {\n        entryAssets.forEach((asset)=>{\n            const { moduleInfo } = asset;\n            const module = host.moduleCache.get(remoteInfo.name);\n            if (module) {\n                getRemoteEntry({\n                    origin: host,\n                    remoteInfo: moduleInfo,\n                    remoteEntryExports: module.remoteEntryExports\n                });\n            } else {\n                getRemoteEntry({\n                    origin: host,\n                    remoteInfo: moduleInfo,\n                    remoteEntryExports: undefined\n                });\n            }\n        });\n        if (useLinkPreload) {\n            const defaultAttrs = {\n                rel: 'preload',\n                as: 'style',\n                crossorigin: 'anonymous'\n            };\n            cssAssets.forEach((cssUrl)=>{\n                const { link: cssEl, needAttach } = sdk.createLink({\n                    url: cssUrl,\n                    cb: ()=>{},\n                    attrs: defaultAttrs,\n                    createLinkHook: (url, attrs)=>{\n                        const res = host.loaderHook.lifecycle.createLink.emit({\n                            url,\n                            attrs\n                        });\n                        if (res instanceof HTMLLinkElement) {\n                            return res;\n                        }\n                        return;\n                    }\n                });\n                needAttach && document.head.appendChild(cssEl);\n            });\n        } else {\n            const defaultAttrs = {\n                rel: 'stylesheet',\n                type: 'text/css'\n            };\n            cssAssets.forEach((cssUrl)=>{\n                const { link: cssEl, needAttach } = sdk.createLink({\n                    url: cssUrl,\n                    cb: ()=>{},\n                    attrs: defaultAttrs,\n                    createLinkHook: (url, attrs)=>{\n                        const res = host.loaderHook.lifecycle.createLink.emit({\n                            url,\n                            attrs\n                        });\n                        if (res instanceof HTMLLinkElement) {\n                            return res;\n                        }\n                        return;\n                    },\n                    needDeleteLink: false\n                });\n                needAttach && document.head.appendChild(cssEl);\n            });\n        }\n        if (useLinkPreload) {\n            const defaultAttrs = {\n                rel: 'preload',\n                as: 'script',\n                crossorigin: 'anonymous'\n            };\n            jsAssetsWithoutEntry.forEach((jsUrl)=>{\n                const { link: linkEl, needAttach } = sdk.createLink({\n                    url: jsUrl,\n                    cb: ()=>{},\n                    attrs: defaultAttrs,\n                    createLinkHook: (url, attrs)=>{\n                        const res = host.loaderHook.lifecycle.createLink.emit({\n                            url,\n                            attrs\n                        });\n                        if (res instanceof HTMLLinkElement) {\n                            return res;\n                        }\n                        return;\n                    }\n                });\n                needAttach && document.head.appendChild(linkEl);\n            });\n        } else {\n            const defaultAttrs = {\n                fetchpriority: 'high',\n                type: (remoteInfo == null ? void 0 : remoteInfo.type) === 'module' ? 'module' : 'text/javascript'\n            };\n            jsAssetsWithoutEntry.forEach((jsUrl)=>{\n                const { script: scriptEl, needAttach } = sdk.createScript({\n                    url: jsUrl,\n                    cb: ()=>{},\n                    attrs: defaultAttrs,\n                    createScriptHook: (url, attrs)=>{\n                        const res = host.loaderHook.lifecycle.createScript.emit({\n                            url,\n                            attrs\n                        });\n                        if (res instanceof HTMLScriptElement) {\n                            return res;\n                        }\n                        return;\n                    },\n                    needDeleteScript: true\n                });\n                needAttach && document.head.appendChild(scriptEl);\n            });\n        }\n    }\n}\n\nfunction assignRemoteInfo(remoteInfo, remoteSnapshot) {\n    const remoteEntryInfo = share.getRemoteEntryInfoFromSnapshot(remoteSnapshot);\n    if (!remoteEntryInfo.url) {\n        share.error(`The attribute remoteEntry of ${remoteInfo.name} must not be undefined.`);\n    }\n    let entryUrl = sdk.getResourceUrl(remoteSnapshot, remoteEntryInfo.url);\n    if (!sdk.isBrowserEnv() && !entryUrl.startsWith('http')) {\n        entryUrl = `https:${entryUrl}`;\n    }\n    remoteInfo.type = remoteEntryInfo.type;\n    remoteInfo.entryGlobalName = remoteEntryInfo.globalName;\n    remoteInfo.entry = entryUrl;\n    remoteInfo.version = remoteSnapshot.version;\n    remoteInfo.buildVersion = remoteSnapshot.buildVersion;\n}\nfunction snapshotPlugin() {\n    return {\n        name: 'snapshot-plugin',\n        async afterResolve (args) {\n            const { remote, pkgNameOrAlias, expose, origin, remoteInfo } = args;\n            if (!share.isRemoteInfoWithEntry(remote) || !share.isPureRemoteEntry(remote)) {\n                const { remoteSnapshot, globalSnapshot } = await origin.snapshotHandler.loadRemoteSnapshotInfo(remote);\n                assignRemoteInfo(remoteInfo, remoteSnapshot);\n                // preloading assets\n                const preloadOptions = {\n                    remote,\n                    preloadConfig: {\n                        nameOrAlias: pkgNameOrAlias,\n                        exposes: [\n                            expose\n                        ],\n                        resourceCategory: 'sync',\n                        share: false,\n                        depsRemote: false\n                    }\n                };\n                const assets = await origin.remoteHandler.hooks.lifecycle.generatePreloadAssets.emit({\n                    origin,\n                    preloadOptions,\n                    remoteInfo,\n                    remote,\n                    remoteSnapshot,\n                    globalSnapshot\n                });\n                if (assets) {\n                    preloadAssets(remoteInfo, origin, assets, false);\n                }\n                return polyfills._extends({}, args, {\n                    remoteSnapshot\n                });\n            }\n            return args;\n        }\n    };\n}\n\n// name\n// name:version\nfunction splitId(id) {\n    const splitInfo = id.split(':');\n    if (splitInfo.length === 1) {\n        return {\n            name: splitInfo[0],\n            version: undefined\n        };\n    } else if (splitInfo.length === 2) {\n        return {\n            name: splitInfo[0],\n            version: splitInfo[1]\n        };\n    } else {\n        return {\n            name: splitInfo[1],\n            version: splitInfo[2]\n        };\n    }\n}\n// Traverse all nodes in moduleInfo and traverse the entire snapshot\nfunction traverseModuleInfo(globalSnapshot, remoteInfo, traverse, isRoot, memo = {}, remoteSnapshot) {\n    const id = share.getFMId(remoteInfo);\n    const { value: snapshotValue } = share.getInfoWithoutType(globalSnapshot, id);\n    const effectiveRemoteSnapshot = remoteSnapshot || snapshotValue;\n    if (effectiveRemoteSnapshot && !sdk.isManifestProvider(effectiveRemoteSnapshot)) {\n        traverse(effectiveRemoteSnapshot, remoteInfo, isRoot);\n        if (effectiveRemoteSnapshot.remotesInfo) {\n            const remoteKeys = Object.keys(effectiveRemoteSnapshot.remotesInfo);\n            for (const key of remoteKeys){\n                if (memo[key]) {\n                    continue;\n                }\n                memo[key] = true;\n                const subRemoteInfo = splitId(key);\n                const remoteValue = effectiveRemoteSnapshot.remotesInfo[key];\n                traverseModuleInfo(globalSnapshot, {\n                    name: subRemoteInfo.name,\n                    version: remoteValue.matchedVersion\n                }, traverse, false, memo, undefined);\n            }\n        }\n    }\n}\n// eslint-disable-next-line max-lines-per-function\nfunction generatePreloadAssets(origin, preloadOptions, remote, globalSnapshot, remoteSnapshot) {\n    const cssAssets = [];\n    const jsAssets = [];\n    const entryAssets = [];\n    const loadedSharedJsAssets = new Set();\n    const loadedSharedCssAssets = new Set();\n    const { options } = origin;\n    const { preloadConfig: rootPreloadConfig } = preloadOptions;\n    const { depsRemote } = rootPreloadConfig;\n    const memo = {};\n    traverseModuleInfo(globalSnapshot, remote, (moduleInfoSnapshot, remoteInfo, isRoot)=>{\n        let preloadConfig;\n        if (isRoot) {\n            preloadConfig = rootPreloadConfig;\n        } else {\n            if (Array.isArray(depsRemote)) {\n                // eslint-disable-next-line array-callback-return\n                const findPreloadConfig = depsRemote.find((remoteConfig)=>{\n                    if (remoteConfig.nameOrAlias === remoteInfo.name || remoteConfig.nameOrAlias === remoteInfo.alias) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (!findPreloadConfig) {\n                    return;\n                }\n                preloadConfig = defaultPreloadArgs(findPreloadConfig);\n            } else if (depsRemote === true) {\n                preloadConfig = rootPreloadConfig;\n            } else {\n                return;\n            }\n        }\n        const remoteEntryUrl = sdk.getResourceUrl(moduleInfoSnapshot, share.getRemoteEntryInfoFromSnapshot(moduleInfoSnapshot).url);\n        if (remoteEntryUrl) {\n            entryAssets.push({\n                name: remoteInfo.name,\n                moduleInfo: {\n                    name: remoteInfo.name,\n                    entry: remoteEntryUrl,\n                    type: 'remoteEntryType' in moduleInfoSnapshot ? moduleInfoSnapshot.remoteEntryType : 'global',\n                    entryGlobalName: 'globalName' in moduleInfoSnapshot ? moduleInfoSnapshot.globalName : remoteInfo.name,\n                    shareScope: '',\n                    version: 'version' in moduleInfoSnapshot ? moduleInfoSnapshot.version : undefined\n                },\n                url: remoteEntryUrl\n            });\n        }\n        let moduleAssetsInfo = 'modules' in moduleInfoSnapshot ? moduleInfoSnapshot.modules : [];\n        const normalizedPreloadExposes = normalizePreloadExposes(preloadConfig.exposes);\n        if (normalizedPreloadExposes.length && 'modules' in moduleInfoSnapshot) {\n            var _moduleInfoSnapshot_modules;\n            moduleAssetsInfo = moduleInfoSnapshot == null ? void 0 : (_moduleInfoSnapshot_modules = moduleInfoSnapshot.modules) == null ? void 0 : _moduleInfoSnapshot_modules.reduce((assets, moduleAssetInfo)=>{\n                if ((normalizedPreloadExposes == null ? void 0 : normalizedPreloadExposes.indexOf(moduleAssetInfo.moduleName)) !== -1) {\n                    assets.push(moduleAssetInfo);\n                }\n                return assets;\n            }, []);\n        }\n        function handleAssets(assets) {\n            const assetsRes = assets.map((asset)=>sdk.getResourceUrl(moduleInfoSnapshot, asset));\n            if (preloadConfig.filter) {\n                return assetsRes.filter(preloadConfig.filter);\n            }\n            return assetsRes;\n        }\n        if (moduleAssetsInfo) {\n            const assetsLength = moduleAssetsInfo.length;\n            for(let index = 0; index < assetsLength; index++){\n                const assetsInfo = moduleAssetsInfo[index];\n                const exposeFullPath = `${remoteInfo.name}/${assetsInfo.moduleName}`;\n                origin.remoteHandler.hooks.lifecycle.handlePreloadModule.emit({\n                    id: assetsInfo.moduleName === '.' ? remoteInfo.name : exposeFullPath,\n                    name: remoteInfo.name,\n                    remoteSnapshot: moduleInfoSnapshot,\n                    preloadConfig,\n                    remote: remoteInfo,\n                    origin\n                });\n                const preloaded = share.getPreloaded(exposeFullPath);\n                if (preloaded) {\n                    continue;\n                }\n                if (preloadConfig.resourceCategory === 'all') {\n                    cssAssets.push(...handleAssets(assetsInfo.assets.css.async));\n                    cssAssets.push(...handleAssets(assetsInfo.assets.css.sync));\n                    jsAssets.push(...handleAssets(assetsInfo.assets.js.async));\n                    jsAssets.push(...handleAssets(assetsInfo.assets.js.sync));\n                // eslint-disable-next-line no-constant-condition\n                } else if (preloadConfig.resourceCategory = 'sync') {\n                    cssAssets.push(...handleAssets(assetsInfo.assets.css.sync));\n                    jsAssets.push(...handleAssets(assetsInfo.assets.js.sync));\n                }\n                share.setPreloaded(exposeFullPath);\n            }\n        }\n    }, true, memo, remoteSnapshot);\n    if (remoteSnapshot.shared) {\n        const collectSharedAssets = (shareInfo, snapshotShared)=>{\n            const registeredShared = share.getRegisteredShare(origin.shareScopeMap, snapshotShared.sharedName, shareInfo, origin.sharedHandler.hooks.lifecycle.resolveShare);\n            // If the global share does not exist, or the lib function does not exist, it means that the shared has not been loaded yet and can be preloaded.\n            if (registeredShared && typeof registeredShared.lib === 'function') {\n                snapshotShared.assets.js.sync.forEach((asset)=>{\n                    loadedSharedJsAssets.add(asset);\n                });\n                snapshotShared.assets.css.sync.forEach((asset)=>{\n                    loadedSharedCssAssets.add(asset);\n                });\n            }\n        };\n        remoteSnapshot.shared.forEach((shared)=>{\n            var _options_shared;\n            const shareInfos = (_options_shared = options.shared) == null ? void 0 : _options_shared[shared.sharedName];\n            if (!shareInfos) {\n                return;\n            }\n            // if no version, preload all shared\n            const sharedOptions = shared.version ? shareInfos.find((s)=>s.version === shared.version) : shareInfos;\n            if (!sharedOptions) {\n                return;\n            }\n            const arrayShareInfo = share.arrayOptions(sharedOptions);\n            arrayShareInfo.forEach((s)=>{\n                collectSharedAssets(s, shared);\n            });\n        });\n    }\n    const needPreloadJsAssets = jsAssets.filter((asset)=>!loadedSharedJsAssets.has(asset));\n    const needPreloadCssAssets = cssAssets.filter((asset)=>!loadedSharedCssAssets.has(asset));\n    return {\n        cssAssets: needPreloadCssAssets,\n        jsAssetsWithoutEntry: needPreloadJsAssets,\n        entryAssets\n    };\n}\nconst generatePreloadAssetsPlugin = function() {\n    return {\n        name: 'generate-preload-assets-plugin',\n        async generatePreloadAssets (args) {\n            const { origin, preloadOptions, remoteInfo, remote, globalSnapshot, remoteSnapshot } = args;\n            if (share.isRemoteInfoWithEntry(remote) && share.isPureRemoteEntry(remote)) {\n                return {\n                    cssAssets: [],\n                    jsAssetsWithoutEntry: [],\n                    entryAssets: [\n                        {\n                            name: remote.name,\n                            url: remote.entry,\n                            moduleInfo: {\n                                name: remoteInfo.name,\n                                entry: remote.entry,\n                                type: 'global',\n                                entryGlobalName: '',\n                                shareScope: ''\n                            }\n                        }\n                    ]\n                };\n            }\n            assignRemoteInfo(remoteInfo, remoteSnapshot);\n            const assets = generatePreloadAssets(origin, preloadOptions, remoteInfo, globalSnapshot, remoteSnapshot);\n            return assets;\n        }\n    };\n};\n\nfunction getGlobalRemoteInfo(moduleInfo, origin) {\n    const hostGlobalSnapshot = share.getGlobalSnapshotInfoByModuleInfo({\n        name: origin.options.name,\n        version: origin.options.version\n    });\n    // get remote detail info from global\n    const globalRemoteInfo = hostGlobalSnapshot && 'remotesInfo' in hostGlobalSnapshot && hostGlobalSnapshot.remotesInfo && share.getInfoWithoutType(hostGlobalSnapshot.remotesInfo, moduleInfo.name).value;\n    if (globalRemoteInfo && globalRemoteInfo.matchedVersion) {\n        return {\n            hostGlobalSnapshot,\n            globalSnapshot: share.getGlobalSnapshot(),\n            remoteSnapshot: share.getGlobalSnapshotInfoByModuleInfo({\n                name: moduleInfo.name,\n                version: globalRemoteInfo.matchedVersion\n            })\n        };\n    }\n    return {\n        hostGlobalSnapshot: undefined,\n        globalSnapshot: share.getGlobalSnapshot(),\n        remoteSnapshot: share.getGlobalSnapshotInfoByModuleInfo({\n            name: moduleInfo.name,\n            version: 'version' in moduleInfo ? moduleInfo.version : undefined\n        })\n    };\n}\nclass SnapshotHandler {\n    async loadSnapshot(moduleInfo) {\n        const { options } = this.HostInstance;\n        const { hostGlobalSnapshot, remoteSnapshot, globalSnapshot } = this.getGlobalRemoteInfo(moduleInfo);\n        const { remoteSnapshot: globalRemoteSnapshot, globalSnapshot: globalSnapshotRes } = await this.hooks.lifecycle.loadSnapshot.emit({\n            options,\n            moduleInfo,\n            hostGlobalSnapshot,\n            remoteSnapshot,\n            globalSnapshot\n        });\n        return {\n            remoteSnapshot: globalRemoteSnapshot,\n            globalSnapshot: globalSnapshotRes\n        };\n    }\n    // eslint-disable-next-line max-lines-per-function\n    async loadRemoteSnapshotInfo(moduleInfo) {\n        const { options } = this.HostInstance;\n        await this.hooks.lifecycle.beforeLoadRemoteSnapshot.emit({\n            options,\n            moduleInfo\n        });\n        let hostSnapshot = share.getGlobalSnapshotInfoByModuleInfo({\n            name: this.HostInstance.options.name,\n            version: this.HostInstance.options.version\n        });\n        if (!hostSnapshot) {\n            hostSnapshot = {\n                version: this.HostInstance.options.version || '',\n                remoteEntry: '',\n                remotesInfo: {}\n            };\n            share.addGlobalSnapshot({\n                [this.HostInstance.options.name]: hostSnapshot\n            });\n        }\n        // In dynamic loadRemote scenarios, incomplete remotesInfo delivery may occur. In such cases, the remotesInfo in the host needs to be completed in the snapshot at runtime.\n        // This ensures the snapshot's integrity and helps the chrome plugin correctly identify all producer modules, ensuring that proxyable producer modules will not be missing.\n        if (hostSnapshot && 'remotesInfo' in hostSnapshot && !share.getInfoWithoutType(hostSnapshot.remotesInfo, moduleInfo.name).value) {\n            if ('version' in moduleInfo || 'entry' in moduleInfo) {\n                hostSnapshot.remotesInfo = polyfills._extends({}, hostSnapshot == null ? void 0 : hostSnapshot.remotesInfo, {\n                    [moduleInfo.name]: {\n                        matchedVersion: 'version' in moduleInfo ? moduleInfo.version : moduleInfo.entry\n                    }\n                });\n            }\n        }\n        const { hostGlobalSnapshot, remoteSnapshot, globalSnapshot } = this.getGlobalRemoteInfo(moduleInfo);\n        const { remoteSnapshot: globalRemoteSnapshot, globalSnapshot: globalSnapshotRes } = await this.hooks.lifecycle.loadSnapshot.emit({\n            options,\n            moduleInfo,\n            hostGlobalSnapshot,\n            remoteSnapshot,\n            globalSnapshot\n        });\n        // global snapshot includes manifest or module info includes manifest\n        if (globalRemoteSnapshot) {\n            if (sdk.isManifestProvider(globalRemoteSnapshot)) {\n                const remoteEntry = sdk.isBrowserEnv() ? globalRemoteSnapshot.remoteEntry : globalRemoteSnapshot.ssrRemoteEntry || globalRemoteSnapshot.remoteEntry || '';\n                const moduleSnapshot = await this.getManifestJson(remoteEntry, moduleInfo, {});\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                const globalSnapshotRes = share.setGlobalSnapshotInfoByModuleInfo(polyfills._extends({}, moduleInfo, {\n                    // The global remote may be overridden\n                    // Therefore, set the snapshot key to the global address of the actual request\n                    entry: remoteEntry\n                }), moduleSnapshot);\n                return {\n                    remoteSnapshot: moduleSnapshot,\n                    globalSnapshot: globalSnapshotRes\n                };\n            } else {\n                const { remoteSnapshot: remoteSnapshotRes } = await this.hooks.lifecycle.loadRemoteSnapshot.emit({\n                    options: this.HostInstance.options,\n                    moduleInfo,\n                    remoteSnapshot: globalRemoteSnapshot,\n                    from: 'global'\n                });\n                return {\n                    remoteSnapshot: remoteSnapshotRes,\n                    globalSnapshot: globalSnapshotRes\n                };\n            }\n        } else {\n            if (share.isRemoteInfoWithEntry(moduleInfo)) {\n                // get from manifest.json and merge remote info from remote server\n                const moduleSnapshot = await this.getManifestJson(moduleInfo.entry, moduleInfo, {});\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                const globalSnapshotRes = share.setGlobalSnapshotInfoByModuleInfo(moduleInfo, moduleSnapshot);\n                const { remoteSnapshot: remoteSnapshotRes } = await this.hooks.lifecycle.loadRemoteSnapshot.emit({\n                    options: this.HostInstance.options,\n                    moduleInfo,\n                    remoteSnapshot: moduleSnapshot,\n                    from: 'global'\n                });\n                return {\n                    remoteSnapshot: remoteSnapshotRes,\n                    globalSnapshot: globalSnapshotRes\n                };\n            } else {\n                share.error(`\n          Cannot get remoteSnapshot with the name: '${moduleInfo.name}', version: '${moduleInfo.version}' from __FEDERATION__.moduleInfo. The following reasons may be causing the problem:\\n\n          1. The Deploy platform did not deliver the correct data. You can use __FEDERATION__.moduleInfo to check the remoteInfo.\\n\n          2. The remote '${moduleInfo.name}' version '${moduleInfo.version}' is not released.\\n\n          The transformed module info: ${JSON.stringify(globalSnapshotRes)}\n        `);\n            }\n        }\n    }\n    getGlobalRemoteInfo(moduleInfo) {\n        return getGlobalRemoteInfo(moduleInfo, this.HostInstance);\n    }\n    async getManifestJson(manifestUrl, moduleInfo, extraOptions) {\n        const getManifest = async ()=>{\n            let manifestJson = this.manifestCache.get(manifestUrl);\n            if (manifestJson) {\n                return manifestJson;\n            }\n            try {\n                let res = await this.loaderHook.lifecycle.fetch.emit(manifestUrl, {});\n                if (!res || !(res instanceof Response)) {\n                    res = await fetch(manifestUrl, {});\n                }\n                manifestJson = await res.json();\n                share.assert(manifestJson.metaData && manifestJson.exposes && manifestJson.shared, `${manifestUrl} is not a federation manifest`);\n                this.manifestCache.set(manifestUrl, manifestJson);\n                return manifestJson;\n            } catch (err) {\n                delete this.manifestLoading[manifestUrl];\n                share.error(`Failed to get manifestJson for ${moduleInfo.name}. The manifest URL is ${manifestUrl}. Please ensure that the manifestUrl is accessible.\n          \\n Error message:\n          \\n ${err}`);\n            }\n        };\n        const asyncLoadProcess = async ()=>{\n            const manifestJson = await getManifest();\n            const remoteSnapshot = sdk.generateSnapshotFromManifest(manifestJson, {\n                version: manifestUrl\n            });\n            const { remoteSnapshot: remoteSnapshotRes } = await this.hooks.lifecycle.loadRemoteSnapshot.emit({\n                options: this.HostInstance.options,\n                moduleInfo,\n                manifestJson,\n                remoteSnapshot,\n                manifestUrl,\n                from: 'manifest'\n            });\n            return remoteSnapshotRes;\n        };\n        if (!this.manifestLoading[manifestUrl]) {\n            this.manifestLoading[manifestUrl] = asyncLoadProcess().then((res)=>res);\n        }\n        return this.manifestLoading[manifestUrl];\n    }\n    constructor(HostInstance){\n        this.loadingHostSnapshot = null;\n        this.manifestCache = new Map();\n        this.hooks = new PluginSystem({\n            beforeLoadRemoteSnapshot: new AsyncHook('beforeLoadRemoteSnapshot'),\n            loadSnapshot: new AsyncWaterfallHook('loadGlobalSnapshot'),\n            loadRemoteSnapshot: new AsyncWaterfallHook('loadRemoteSnapshot')\n        });\n        this.manifestLoading = share.Global.__FEDERATION__.__MANIFEST_LOADING__;\n        this.HostInstance = HostInstance;\n        this.loaderHook = HostInstance.loaderHook;\n    }\n}\n\nclass SharedHandler {\n    // register shared in shareScopeMap\n    registerShared(globalOptions, userOptions) {\n        const { shareInfos, shared } = share.formatShareConfigs(globalOptions, userOptions);\n        const sharedKeys = Object.keys(shareInfos);\n        sharedKeys.forEach((sharedKey)=>{\n            const sharedVals = shareInfos[sharedKey];\n            sharedVals.forEach((sharedVal)=>{\n                const registeredShared = share.getRegisteredShare(this.shareScopeMap, sharedKey, sharedVal, this.hooks.lifecycle.resolveShare);\n                if (!registeredShared && sharedVal && sharedVal.lib) {\n                    this.setShared({\n                        pkgName: sharedKey,\n                        lib: sharedVal.lib,\n                        get: sharedVal.get,\n                        loaded: true,\n                        shared: sharedVal,\n                        from: userOptions.name\n                    });\n                }\n            });\n        });\n        return {\n            shareInfos,\n            shared\n        };\n    }\n    async loadShare(pkgName, extraOptions) {\n        const { host } = this;\n        // This function performs the following steps:\n        // 1. Checks if the currently loaded share already exists, if not, it throws an error\n        // 2. Searches globally for a matching share, if found, it uses it directly\n        // 3. If not found, it retrieves it from the current share and stores the obtained share globally.\n        const shareInfo = share.getTargetSharedOptions({\n            pkgName,\n            extraOptions,\n            shareInfos: host.options.shared\n        });\n        if (shareInfo == null ? void 0 : shareInfo.scope) {\n            await Promise.all(shareInfo.scope.map(async (shareScope)=>{\n                await Promise.all(this.initializeSharing(shareScope, {\n                    strategy: shareInfo.strategy\n                }));\n                return;\n            }));\n        }\n        const loadShareRes = await this.hooks.lifecycle.beforeLoadShare.emit({\n            pkgName,\n            shareInfo,\n            shared: host.options.shared,\n            origin: host\n        });\n        const { shareInfo: shareInfoRes } = loadShareRes;\n        // Assert that shareInfoRes exists, if not, throw an error\n        share.assert(shareInfoRes, `Cannot find ${pkgName} Share in the ${host.options.name}. Please ensure that the ${pkgName} Share parameters have been injected`);\n        // Retrieve from cache\n        const registeredShared = share.getRegisteredShare(this.shareScopeMap, pkgName, shareInfoRes, this.hooks.lifecycle.resolveShare);\n        const addUseIn = (shared)=>{\n            if (!shared.useIn) {\n                shared.useIn = [];\n            }\n            share.addUniqueItem(shared.useIn, host.options.name);\n        };\n        if (registeredShared && registeredShared.lib) {\n            addUseIn(registeredShared);\n            return registeredShared.lib;\n        } else if (registeredShared && registeredShared.loading && !registeredShared.loaded) {\n            const factory = await registeredShared.loading;\n            registeredShared.loaded = true;\n            if (!registeredShared.lib) {\n                registeredShared.lib = factory;\n            }\n            addUseIn(registeredShared);\n            return factory;\n        } else if (registeredShared) {\n            const asyncLoadProcess = async ()=>{\n                const factory = await registeredShared.get();\n                shareInfoRes.lib = factory;\n                shareInfoRes.loaded = true;\n                addUseIn(shareInfoRes);\n                const gShared = share.getRegisteredShare(this.shareScopeMap, pkgName, shareInfoRes, this.hooks.lifecycle.resolveShare);\n                if (gShared) {\n                    gShared.lib = factory;\n                    gShared.loaded = true;\n                }\n                return factory;\n            };\n            const loading = asyncLoadProcess();\n            this.setShared({\n                pkgName,\n                loaded: false,\n                shared: registeredShared,\n                from: host.options.name,\n                lib: null,\n                loading\n            });\n            return loading;\n        } else {\n            if (extraOptions == null ? void 0 : extraOptions.customShareInfo) {\n                return false;\n            }\n            const asyncLoadProcess = async ()=>{\n                const factory = await shareInfoRes.get();\n                shareInfoRes.lib = factory;\n                shareInfoRes.loaded = true;\n                addUseIn(shareInfoRes);\n                const gShared = share.getRegisteredShare(this.shareScopeMap, pkgName, shareInfoRes, this.hooks.lifecycle.resolveShare);\n                if (gShared) {\n                    gShared.lib = factory;\n                    gShared.loaded = true;\n                }\n                return factory;\n            };\n            const loading = asyncLoadProcess();\n            this.setShared({\n                pkgName,\n                loaded: false,\n                shared: shareInfoRes,\n                from: host.options.name,\n                lib: null,\n                loading\n            });\n            return loading;\n        }\n    }\n    /**\n   * This function initializes the sharing sequence (executed only once per share scope).\n   * It accepts one argument, the name of the share scope.\n   * If the share scope does not exist, it creates one.\n   */ // eslint-disable-next-line @typescript-eslint/member-ordering\n    initializeSharing(shareScopeName = share.DEFAULT_SCOPE, extraOptions) {\n        const { host } = this;\n        const from = extraOptions == null ? void 0 : extraOptions.from;\n        const strategy = extraOptions == null ? void 0 : extraOptions.strategy;\n        let initScope = extraOptions == null ? void 0 : extraOptions.initScope;\n        const promises = [];\n        if (from !== 'build') {\n            const { initTokens } = this;\n            if (!initScope) initScope = [];\n            let initToken = initTokens[shareScopeName];\n            if (!initToken) initToken = initTokens[shareScopeName] = {\n                from: this.host.name\n            };\n            if (initScope.indexOf(initToken) >= 0) return promises;\n            initScope.push(initToken);\n        }\n        const shareScope = this.shareScopeMap;\n        const hostName = host.options.name;\n        // Creates a new share scope if necessary\n        if (!shareScope[shareScopeName]) {\n            shareScope[shareScopeName] = {};\n        }\n        // Executes all initialization snippets from all accessible modules\n        const scope = shareScope[shareScopeName];\n        const register = (name, shared)=>{\n            var _activeVersion_shareConfig;\n            const { version, eager } = shared;\n            scope[name] = scope[name] || {};\n            const versions = scope[name];\n            const activeVersion = versions[version];\n            const activeVersionEager = Boolean(activeVersion && (activeVersion.eager || ((_activeVersion_shareConfig = activeVersion.shareConfig) == null ? void 0 : _activeVersion_shareConfig.eager)));\n            if (!activeVersion || activeVersion.strategy !== 'loaded-first' && !activeVersion.loaded && (Boolean(!eager) !== !activeVersionEager ? eager : hostName > activeVersion.from)) {\n                versions[version] = shared;\n            }\n        };\n        const initFn = (mod)=>mod && mod.init && mod.init(shareScope[shareScopeName], initScope);\n        const initRemoteModule = async (key)=>{\n            const { module } = await host.remoteHandler.getRemoteModuleAndOptions({\n                id: key\n            });\n            if (module.getEntry) {\n                const entry = await module.getEntry();\n                if (!module.inited) {\n                    await initFn(entry);\n                    module.inited = true;\n                }\n            }\n        };\n        Object.keys(host.options.shared).forEach((shareName)=>{\n            const sharedArr = host.options.shared[shareName];\n            sharedArr.forEach((shared)=>{\n                if (shared.scope.includes(shareScopeName)) {\n                    register(shareName, shared);\n                }\n            });\n        });\n        // TODO: strategy==='version-first' need to be removed in the future\n        if (host.options.shareStrategy === 'version-first' || strategy === 'version-first') {\n            host.options.remotes.forEach((remote)=>{\n                if (remote.shareScope === shareScopeName) {\n                    promises.push(initRemoteModule(remote.name));\n                }\n            });\n        }\n        return promises;\n    }\n    // The lib function will only be available if the shared set by eager or runtime init is set or the shared is successfully loaded.\n    // 1. If the loaded shared already exists globally, then it will be reused\n    // 2. If lib exists in local shared, it will be used directly\n    // 3. If the local get returns something other than Promise, then it will be used directly\n    loadShareSync(pkgName, extraOptions) {\n        const { host } = this;\n        const shareInfo = share.getTargetSharedOptions({\n            pkgName,\n            extraOptions,\n            shareInfos: host.options.shared\n        });\n        if (shareInfo == null ? void 0 : shareInfo.scope) {\n            shareInfo.scope.forEach((shareScope)=>{\n                this.initializeSharing(shareScope, {\n                    strategy: shareInfo.strategy\n                });\n            });\n        }\n        const registeredShared = share.getRegisteredShare(this.shareScopeMap, pkgName, shareInfo, this.hooks.lifecycle.resolveShare);\n        const addUseIn = (shared)=>{\n            if (!shared.useIn) {\n                shared.useIn = [];\n            }\n            share.addUniqueItem(shared.useIn, host.options.name);\n        };\n        if (registeredShared) {\n            if (typeof registeredShared.lib === 'function') {\n                addUseIn(registeredShared);\n                if (!registeredShared.loaded) {\n                    registeredShared.loaded = true;\n                    if (registeredShared.from === host.options.name) {\n                        shareInfo.loaded = true;\n                    }\n                }\n                return registeredShared.lib;\n            }\n            if (typeof registeredShared.get === 'function') {\n                const module = registeredShared.get();\n                if (!(module instanceof Promise)) {\n                    addUseIn(registeredShared);\n                    this.setShared({\n                        pkgName,\n                        loaded: true,\n                        from: host.options.name,\n                        lib: module,\n                        shared: registeredShared\n                    });\n                    return module;\n                }\n            }\n        }\n        if (shareInfo.lib) {\n            if (!shareInfo.loaded) {\n                shareInfo.loaded = true;\n            }\n            return shareInfo.lib;\n        }\n        if (shareInfo.get) {\n            const module = shareInfo.get();\n            if (module instanceof Promise) {\n                throw new Error(`\n        The loadShareSync function was unable to load ${pkgName}. The ${pkgName} could not be found in ${host.options.name}.\n        Possible reasons for failure: \\n\n        1. The ${pkgName} share was registered with the 'get' attribute, but loadShare was not used beforehand.\\n\n        2. The ${pkgName} share was not registered with the 'lib' attribute.\\n\n      `);\n            }\n            shareInfo.lib = module;\n            this.setShared({\n                pkgName,\n                loaded: true,\n                from: host.options.name,\n                lib: shareInfo.lib,\n                shared: shareInfo\n            });\n            return shareInfo.lib;\n        }\n        throw new Error(`\n        The loadShareSync function was unable to load ${pkgName}. The ${pkgName} could not be found in ${host.options.name}.\n        Possible reasons for failure: \\n\n        1. The ${pkgName} share was registered with the 'get' attribute, but loadShare was not used beforehand.\\n\n        2. The ${pkgName} share was not registered with the 'lib' attribute.\\n\n      `);\n    }\n    initShareScopeMap(scopeName, shareScope, extraOptions = {}) {\n        const { host } = this;\n        this.shareScopeMap[scopeName] = shareScope;\n        this.hooks.lifecycle.initContainerShareScopeMap.emit({\n            shareScope,\n            options: host.options,\n            origin: host,\n            scopeName,\n            hostShareScopeMap: extraOptions.hostShareScopeMap\n        });\n    }\n    setShared({ pkgName, shared, from, lib, loading, loaded, get }) {\n        const { version, scope = 'default' } = shared, shareInfo = polyfills._object_without_properties_loose(shared, [\n            \"version\",\n            \"scope\"\n        ]);\n        const scopes = Array.isArray(scope) ? scope : [\n            scope\n        ];\n        scopes.forEach((sc)=>{\n            if (!this.shareScopeMap[sc]) {\n                this.shareScopeMap[sc] = {};\n            }\n            if (!this.shareScopeMap[sc][pkgName]) {\n                this.shareScopeMap[sc][pkgName] = {};\n            }\n            if (!this.shareScopeMap[sc][pkgName][version]) {\n                this.shareScopeMap[sc][pkgName][version] = polyfills._extends({\n                    version,\n                    scope: [\n                        'default'\n                    ]\n                }, shareInfo, {\n                    lib,\n                    loaded,\n                    loading\n                });\n                if (get) {\n                    this.shareScopeMap[sc][pkgName][version].get = get;\n                }\n                return;\n            }\n            const registeredShared = this.shareScopeMap[sc][pkgName][version];\n            if (loading && !registeredShared.loading) {\n                registeredShared.loading = loading;\n            }\n        });\n    }\n    _setGlobalShareScopeMap(hostOptions) {\n        const globalShareScopeMap = share.getGlobalShareScope();\n        const identifier = hostOptions.id || hostOptions.name;\n        if (identifier && !globalShareScopeMap[identifier]) {\n            globalShareScopeMap[identifier] = this.shareScopeMap;\n        }\n    }\n    constructor(host){\n        this.hooks = new PluginSystem({\n            afterResolve: new AsyncWaterfallHook('afterResolve'),\n            beforeLoadShare: new AsyncWaterfallHook('beforeLoadShare'),\n            // not used yet\n            loadShare: new AsyncHook(),\n            resolveShare: new SyncWaterfallHook('resolveShare'),\n            // maybe will change, temporarily for internal use only\n            initContainerShareScopeMap: new SyncWaterfallHook('initContainerShareScopeMap')\n        });\n        this.host = host;\n        this.shareScopeMap = {};\n        this.initTokens = {};\n        this._setGlobalShareScopeMap(host.options);\n    }\n}\n\nclass RemoteHandler {\n    formatAndRegisterRemote(globalOptions, userOptions) {\n        const userRemotes = userOptions.remotes || [];\n        return userRemotes.reduce((res, remote)=>{\n            this.registerRemote(remote, res, {\n                force: false\n            });\n            return res;\n        }, globalOptions.remotes);\n    }\n    setIdToRemoteMap(id, remoteMatchInfo) {\n        const { remote, expose } = remoteMatchInfo;\n        const { name, alias } = remote;\n        this.idToRemoteMap[id] = {\n            name: remote.name,\n            expose\n        };\n        if (alias && id.startsWith(name)) {\n            const idWithAlias = id.replace(name, alias);\n            this.idToRemoteMap[idWithAlias] = {\n                name: remote.name,\n                expose\n            };\n            return;\n        }\n        if (alias && id.startsWith(alias)) {\n            const idWithName = id.replace(alias, name);\n            this.idToRemoteMap[idWithName] = {\n                name: remote.name,\n                expose\n            };\n        }\n    }\n    // eslint-disable-next-line max-lines-per-function\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    async loadRemote(id, options) {\n        const { host } = this;\n        try {\n            const { loadFactory = true } = options || {\n                loadFactory: true\n            };\n            // 1. Validate the parameters of the retrieved module. There are two module request methods: pkgName + expose and alias + expose.\n            // 2. Request the snapshot information of the current host and globally store the obtained snapshot information. The retrieved module information is partially offline and partially online. The online module information will retrieve the modules used online.\n            // 3. Retrieve the detailed information of the current module from global (remoteEntry address, expose resource address)\n            // 4. After retrieving remoteEntry, call the init of the module, and then retrieve the exported content of the module through get\n            // id: pkgName(@federation/app1) + expose(button) = @federation/app1/button\n            // id: alias(app1) + expose(button) = app1/button\n            // id: alias(app1/utils) + expose(loadash/sort) = app1/utils/loadash/sort\n            const { module, moduleOptions, remoteMatchInfo } = await this.getRemoteModuleAndOptions({\n                id\n            });\n            const { pkgNameOrAlias, remote, expose, id: idRes, remoteSnapshot } = remoteMatchInfo;\n            const moduleOrFactory = await module.get(idRes, expose, options, remoteSnapshot);\n            const moduleWrapper = await this.hooks.lifecycle.onLoad.emit({\n                id: idRes,\n                pkgNameOrAlias,\n                expose,\n                exposeModule: loadFactory ? moduleOrFactory : undefined,\n                exposeModuleFactory: loadFactory ? undefined : moduleOrFactory,\n                remote,\n                options: moduleOptions,\n                moduleInstance: module,\n                origin: host\n            });\n            this.setIdToRemoteMap(id, remoteMatchInfo);\n            if (typeof moduleWrapper === 'function') {\n                return moduleWrapper;\n            }\n            return moduleOrFactory;\n        } catch (error) {\n            const { from = 'runtime' } = options || {\n                from: 'runtime'\n            };\n            const failOver = await this.hooks.lifecycle.errorLoadRemote.emit({\n                id,\n                error,\n                from,\n                lifecycle: 'onLoad',\n                origin: host\n            });\n            if (!failOver) {\n                throw error;\n            }\n            return failOver;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    async preloadRemote(preloadOptions) {\n        const { host } = this;\n        await this.hooks.lifecycle.beforePreloadRemote.emit({\n            preloadOps: preloadOptions,\n            options: host.options,\n            origin: host\n        });\n        const preloadOps = formatPreloadArgs(host.options.remotes, preloadOptions);\n        await Promise.all(preloadOps.map(async (ops)=>{\n            const { remote } = ops;\n            const remoteInfo = getRemoteInfo(remote);\n            const { globalSnapshot, remoteSnapshot } = await host.snapshotHandler.loadRemoteSnapshotInfo(remote);\n            const assets = await this.hooks.lifecycle.generatePreloadAssets.emit({\n                origin: host,\n                preloadOptions: ops,\n                remote,\n                remoteInfo,\n                globalSnapshot,\n                remoteSnapshot\n            });\n            if (!assets) {\n                return;\n            }\n            preloadAssets(remoteInfo, host, assets);\n        }));\n    }\n    registerRemotes(remotes, options) {\n        const { host } = this;\n        remotes.forEach((remote)=>{\n            this.registerRemote(remote, host.options.remotes, {\n                force: options == null ? void 0 : options.force\n            });\n        });\n    }\n    async getRemoteModuleAndOptions(options) {\n        const { host } = this;\n        const { id } = options;\n        let loadRemoteArgs;\n        try {\n            loadRemoteArgs = await this.hooks.lifecycle.beforeRequest.emit({\n                id,\n                options: host.options,\n                origin: host\n            });\n        } catch (error) {\n            loadRemoteArgs = await this.hooks.lifecycle.errorLoadRemote.emit({\n                id,\n                options: host.options,\n                origin: host,\n                from: 'runtime',\n                error,\n                lifecycle: 'beforeRequest'\n            });\n            if (!loadRemoteArgs) {\n                throw error;\n            }\n        }\n        const { id: idRes } = loadRemoteArgs;\n        const remoteSplitInfo = matchRemoteWithNameAndExpose(host.options.remotes, idRes);\n        share.assert(remoteSplitInfo, `\n        Unable to locate ${idRes} in ${host.options.name}. Potential reasons for failure include:\\n\n        1. ${idRes} was not included in the 'remotes' parameter of ${host.options.name || 'the host'}.\\n\n        2. ${idRes} could not be found in the 'remotes' of ${host.options.name} with either 'name' or 'alias' attributes.\n        3. ${idRes} is not online, injected, or loaded.\n        4. ${idRes}  cannot be accessed on the expected.\n        5. The 'beforeRequest' hook was provided but did not return the correct 'remoteInfo' when attempting to load ${idRes}.\n      `);\n        const { remote: rawRemote } = remoteSplitInfo;\n        const remoteInfo = getRemoteInfo(rawRemote);\n        const matchInfo = await host.sharedHandler.hooks.lifecycle.afterResolve.emit(polyfills._extends({\n            id: idRes\n        }, remoteSplitInfo, {\n            options: host.options,\n            origin: host,\n            remoteInfo\n        }));\n        const { remote, expose } = matchInfo;\n        share.assert(remote && expose, `The 'beforeRequest' hook was executed, but it failed to return the correct 'remote' and 'expose' values while loading ${idRes}.`);\n        let module = host.moduleCache.get(remote.name);\n        const moduleOptions = {\n            host: host,\n            remoteInfo\n        };\n        if (!module) {\n            module = new Module(moduleOptions);\n            host.moduleCache.set(remote.name, module);\n        }\n        return {\n            module,\n            moduleOptions,\n            remoteMatchInfo: matchInfo\n        };\n    }\n    registerRemote(remote, targetRemotes, options) {\n        const { host } = this;\n        const normalizeRemote = ()=>{\n            if (remote.alias) {\n                // Validate if alias equals the prefix of remote.name and remote.alias, if so, throw an error\n                // As multi-level path references cannot guarantee unique names, alias being a prefix of remote.name is not supported\n                const findEqual = targetRemotes.find((item)=>{\n                    var _item_alias;\n                    return remote.alias && (item.name.startsWith(remote.alias) || ((_item_alias = item.alias) == null ? void 0 : _item_alias.startsWith(remote.alias)));\n                });\n                share.assert(!findEqual, `The alias ${remote.alias} of remote ${remote.name} is not allowed to be the prefix of ${findEqual && findEqual.name} name or alias`);\n            }\n            // Set the remote entry to a complete path\n            if ('entry' in remote) {\n                if (sdk.isBrowserEnv() && !remote.entry.startsWith('http')) {\n                    remote.entry = new URL(remote.entry, window.location.origin).href;\n                }\n            }\n            if (!remote.shareScope) {\n                remote.shareScope = share.DEFAULT_SCOPE;\n            }\n            if (!remote.type) {\n                remote.type = share.DEFAULT_REMOTE_TYPE;\n            }\n        };\n        this.hooks.lifecycle.beforeRegisterRemote.emit({\n            remote,\n            origin: host\n        });\n        const registeredRemote = targetRemotes.find((item)=>item.name === remote.name);\n        if (!registeredRemote) {\n            normalizeRemote();\n            targetRemotes.push(remote);\n            this.hooks.lifecycle.registerRemote.emit({\n                remote,\n                origin: host\n            });\n        } else {\n            const messages = [\n                `The remote \"${remote.name}\" is already registered.`,\n                (options == null ? void 0 : options.force) ? 'Hope you have known that OVERRIDE it may have some unexpected errors' : 'If you want to merge the remote, you can set \"force: true\".'\n            ];\n            if (options == null ? void 0 : options.force) {\n                // remove registered remote\n                this.removeRemote(registeredRemote);\n                normalizeRemote();\n                targetRemotes.push(remote);\n                this.hooks.lifecycle.registerRemote.emit({\n                    remote,\n                    origin: host\n                });\n            }\n            sdk.warn(messages.join(' '));\n        }\n    }\n    removeRemote(remote) {\n        try {\n            const { host } = this;\n            const { name } = remote;\n            const remoteIndex = host.options.remotes.findIndex((item)=>item.name === name);\n            if (remoteIndex !== -1) {\n                host.options.remotes.splice(remoteIndex, 1);\n            }\n            const loadedModule = host.moduleCache.get(remote.name);\n            if (loadedModule) {\n                const remoteInfo = loadedModule.remoteInfo;\n                const key = remoteInfo.entryGlobalName;\n                if (globalThis[key]) {\n                    var _Object_getOwnPropertyDescriptor;\n                    if ((_Object_getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor(globalThis, key)) == null ? void 0 : _Object_getOwnPropertyDescriptor.configurable) {\n                        delete globalThis[key];\n                    } else {\n                        // @ts-ignore\n                        globalThis[key] = undefined;\n                    }\n                }\n                const remoteEntryUniqueKey = getRemoteEntryUniqueKey(loadedModule.remoteInfo);\n                if (share.globalLoading[remoteEntryUniqueKey]) {\n                    delete share.globalLoading[remoteEntryUniqueKey];\n                }\n                host.snapshotHandler.manifestCache.delete(remoteInfo.entry);\n                // delete unloaded shared and instance\n                let remoteInsId = remoteInfo.buildVersion ? sdk.composeKeyWithSeparator(remoteInfo.name, remoteInfo.buildVersion) : remoteInfo.name;\n                const remoteInsIndex = globalThis.__FEDERATION__.__INSTANCES__.findIndex((ins)=>{\n                    if (remoteInfo.buildVersion) {\n                        return ins.options.id === remoteInsId;\n                    } else {\n                        return ins.name === remoteInsId;\n                    }\n                });\n                if (remoteInsIndex !== -1) {\n                    const remoteIns = globalThis.__FEDERATION__.__INSTANCES__[remoteInsIndex];\n                    remoteInsId = remoteIns.options.id || remoteInsId;\n                    const globalShareScopeMap = share.getGlobalShareScope();\n                    let isAllSharedNotUsed = true;\n                    const needDeleteKeys = [];\n                    Object.keys(globalShareScopeMap).forEach((instId)=>{\n                        const shareScopeMap = globalShareScopeMap[instId];\n                        shareScopeMap && Object.keys(shareScopeMap).forEach((shareScope)=>{\n                            const shareScopeVal = shareScopeMap[shareScope];\n                            shareScopeVal && Object.keys(shareScopeVal).forEach((shareName)=>{\n                                const sharedPkgs = shareScopeVal[shareName];\n                                sharedPkgs && Object.keys(sharedPkgs).forEach((shareVersion)=>{\n                                    const shared = sharedPkgs[shareVersion];\n                                    if (shared && typeof shared === 'object' && shared.from === remoteInfo.name) {\n                                        if (shared.loaded || shared.loading) {\n                                            shared.useIn = shared.useIn.filter((usedHostName)=>usedHostName !== remoteInfo.name);\n                                            if (shared.useIn.length) {\n                                                isAllSharedNotUsed = false;\n                                            } else {\n                                                needDeleteKeys.push([\n                                                    instId,\n                                                    shareScope,\n                                                    shareName,\n                                                    shareVersion\n                                                ]);\n                                            }\n                                        } else {\n                                            needDeleteKeys.push([\n                                                instId,\n                                                shareScope,\n                                                shareName,\n                                                shareVersion\n                                            ]);\n                                        }\n                                    }\n                                });\n                            });\n                        });\n                    });\n                    if (isAllSharedNotUsed) {\n                        remoteIns.shareScopeMap = {};\n                        delete globalShareScopeMap[remoteInsId];\n                    }\n                    needDeleteKeys.forEach(([insId, shareScope, shareName, shareVersion])=>{\n                        var _globalShareScopeMap_insId_shareScope_shareName, _globalShareScopeMap_insId_shareScope, _globalShareScopeMap_insId;\n                        (_globalShareScopeMap_insId = globalShareScopeMap[insId]) == null ? true : (_globalShareScopeMap_insId_shareScope = _globalShareScopeMap_insId[shareScope]) == null ? true : (_globalShareScopeMap_insId_shareScope_shareName = _globalShareScopeMap_insId_shareScope[shareName]) == null ? true : delete _globalShareScopeMap_insId_shareScope_shareName[shareVersion];\n                    });\n                    globalThis.__FEDERATION__.__INSTANCES__.splice(remoteInsIndex, 1);\n                }\n                const { hostGlobalSnapshot } = getGlobalRemoteInfo(remote, host);\n                if (hostGlobalSnapshot) {\n                    const remoteKey = hostGlobalSnapshot && 'remotesInfo' in hostGlobalSnapshot && hostGlobalSnapshot.remotesInfo && share.getInfoWithoutType(hostGlobalSnapshot.remotesInfo, remote.name).key;\n                    if (remoteKey) {\n                        delete hostGlobalSnapshot.remotesInfo[remoteKey];\n                        if (//eslint-disable-next-line no-extra-boolean-cast\n                        Boolean(share.Global.__FEDERATION__.__MANIFEST_LOADING__[remoteKey])) {\n                            delete share.Global.__FEDERATION__.__MANIFEST_LOADING__[remoteKey];\n                        }\n                    }\n                }\n                host.moduleCache.delete(remote.name);\n            }\n        } catch (err) {\n            console.log('removeRemote fail: ', err);\n        }\n    }\n    constructor(host){\n        this.hooks = new PluginSystem({\n            beforeRegisterRemote: new SyncWaterfallHook('beforeRegisterRemote'),\n            registerRemote: new SyncWaterfallHook('registerRemote'),\n            beforeRequest: new AsyncWaterfallHook('beforeRequest'),\n            onLoad: new AsyncHook('onLoad'),\n            handlePreloadModule: new SyncHook('handlePreloadModule'),\n            errorLoadRemote: new AsyncHook('errorLoadRemote'),\n            beforePreloadRemote: new AsyncHook('beforePreloadRemote'),\n            generatePreloadAssets: new AsyncHook('generatePreloadAssets'),\n            // not used yet\n            afterPreloadRemote: new AsyncHook(),\n            loadEntry: new AsyncHook()\n        });\n        this.host = host;\n        this.idToRemoteMap = {};\n    }\n}\n\nclass FederationHost {\n    initOptions(userOptions) {\n        this.registerPlugins(userOptions.plugins);\n        const options = this.formatOptions(this.options, userOptions);\n        this.options = options;\n        return options;\n    }\n    async loadShare(pkgName, extraOptions) {\n        return this.sharedHandler.loadShare(pkgName, extraOptions);\n    }\n    // The lib function will only be available if the shared set by eager or runtime init is set or the shared is successfully loaded.\n    // 1. If the loaded shared already exists globally, then it will be reused\n    // 2. If lib exists in local shared, it will be used directly\n    // 3. If the local get returns something other than Promise, then it will be used directly\n    loadShareSync(pkgName, extraOptions) {\n        return this.sharedHandler.loadShareSync(pkgName, extraOptions);\n    }\n    initializeSharing(shareScopeName = share.DEFAULT_SCOPE, extraOptions) {\n        return this.sharedHandler.initializeSharing(shareScopeName, extraOptions);\n    }\n    initRawContainer(name, url, container) {\n        const remoteInfo = getRemoteInfo({\n            name,\n            entry: url\n        });\n        const module = new Module({\n            host: this,\n            remoteInfo\n        });\n        module.remoteEntryExports = container;\n        this.moduleCache.set(name, module);\n        return module;\n    }\n    // eslint-disable-next-line max-lines-per-function\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    async loadRemote(id, options) {\n        return this.remoteHandler.loadRemote(id, options);\n    }\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    async preloadRemote(preloadOptions) {\n        return this.remoteHandler.preloadRemote(preloadOptions);\n    }\n    initShareScopeMap(scopeName, shareScope, extraOptions = {}) {\n        this.sharedHandler.initShareScopeMap(scopeName, shareScope, extraOptions);\n    }\n    formatOptions(globalOptions, userOptions) {\n        const { shared } = share.formatShareConfigs(globalOptions, userOptions);\n        const { userOptions: userOptionsRes, options: globalOptionsRes } = this.hooks.lifecycle.beforeInit.emit({\n            origin: this,\n            userOptions,\n            options: globalOptions,\n            shareInfo: shared\n        });\n        const remotes = this.remoteHandler.formatAndRegisterRemote(globalOptionsRes, userOptionsRes);\n        const { shared: handledShared } = this.sharedHandler.registerShared(globalOptionsRes, userOptionsRes);\n        const plugins = [\n            ...globalOptionsRes.plugins\n        ];\n        if (userOptionsRes.plugins) {\n            userOptionsRes.plugins.forEach((plugin)=>{\n                if (!plugins.includes(plugin)) {\n                    plugins.push(plugin);\n                }\n            });\n        }\n        const optionsRes = polyfills._extends({}, globalOptions, userOptions, {\n            plugins,\n            remotes,\n            shared: handledShared\n        });\n        this.hooks.lifecycle.init.emit({\n            origin: this,\n            options: optionsRes\n        });\n        return optionsRes;\n    }\n    registerPlugins(plugins) {\n        const pluginRes = registerPlugins$1(plugins, [\n            this.hooks,\n            this.remoteHandler.hooks,\n            this.sharedHandler.hooks,\n            this.snapshotHandler.hooks,\n            this.loaderHook\n        ]);\n        // Merge plugin\n        this.options.plugins = this.options.plugins.reduce((res, plugin)=>{\n            if (!plugin) return res;\n            if (res && !res.find((item)=>item.name === plugin.name)) {\n                res.push(plugin);\n            }\n            return res;\n        }, pluginRes || []);\n    }\n    registerRemotes(remotes, options) {\n        return this.remoteHandler.registerRemotes(remotes, options);\n    }\n    constructor(userOptions){\n        this.hooks = new PluginSystem({\n            beforeInit: new SyncWaterfallHook('beforeInit'),\n            init: new SyncHook(),\n            // maybe will change, temporarily for internal use only\n            beforeInitContainer: new AsyncWaterfallHook('beforeInitContainer'),\n            // maybe will change, temporarily for internal use only\n            initContainer: new AsyncWaterfallHook('initContainer')\n        });\n        this.version = \"0.6.4\";\n        this.moduleCache = new Map();\n        this.loaderHook = new PluginSystem({\n            // FIXME: may not be suitable , not open to the public yet\n            getModuleInfo: new SyncHook(),\n            createScript: new SyncHook(),\n            createLink: new SyncHook(),\n            // only work for manifest , so not open to the public yet\n            fetch: new AsyncHook()\n        });\n        // TODO: Validate the details of the options\n        // Initialize options with default values\n        const defaultOptions = {\n            id: share.getBuilderId(),\n            name: userOptions.name,\n            plugins: [\n                snapshotPlugin(),\n                generatePreloadAssetsPlugin()\n            ],\n            remotes: [],\n            shared: {},\n            inBrowser: sdk.isBrowserEnv()\n        };\n        this.name = userOptions.name;\n        this.options = defaultOptions;\n        this.snapshotHandler = new SnapshotHandler(this);\n        this.sharedHandler = new SharedHandler(this);\n        this.remoteHandler = new RemoteHandler(this);\n        this.shareScopeMap = this.sharedHandler.shareScopeMap;\n        this.registerPlugins([\n            ...defaultOptions.plugins,\n            ...userOptions.plugins || []\n        ]);\n        this.options = this.formatOptions(defaultOptions, userOptions);\n    }\n}\n\nlet FederationInstance = null;\nfunction init(options) {\n    // Retrieve the same instance with the same name\n    const instance = share.getGlobalFederationInstance(options.name, options.version);\n    if (!instance) {\n        // Retrieve debug constructor\n        const FederationConstructor = share.getGlobalFederationConstructor() || FederationHost;\n        FederationInstance = new FederationConstructor(options);\n        share.setGlobalFederationInstance(FederationInstance);\n        return FederationInstance;\n    } else {\n        // Merge options\n        instance.initOptions(options);\n        if (!FederationInstance) {\n            FederationInstance = instance;\n        }\n        return instance;\n    }\n}\nfunction loadRemote(...args) {\n    share.assert(FederationInstance, 'Please call init first');\n    const loadRemote1 = FederationInstance.loadRemote;\n    // eslint-disable-next-line prefer-spread\n    return loadRemote1.apply(FederationInstance, args);\n}\nfunction loadShare(...args) {\n    share.assert(FederationInstance, 'Please call init first');\n    // eslint-disable-next-line prefer-spread\n    const loadShare1 = FederationInstance.loadShare;\n    return loadShare1.apply(FederationInstance, args);\n}\nfunction loadShareSync(...args) {\n    share.assert(FederationInstance, 'Please call init first');\n    const loadShareSync1 = FederationInstance.loadShareSync;\n    // eslint-disable-next-line prefer-spread\n    return loadShareSync1.apply(FederationInstance, args);\n}\nfunction preloadRemote(...args) {\n    share.assert(FederationInstance, 'Please call init first');\n    // eslint-disable-next-line prefer-spread\n    return FederationInstance.preloadRemote.apply(FederationInstance, args);\n}\nfunction registerRemotes(...args) {\n    share.assert(FederationInstance, 'Please call init first');\n    // eslint-disable-next-line prefer-spread\n    return FederationInstance.registerRemotes.apply(FederationInstance, args);\n}\nfunction registerPlugins(...args) {\n    share.assert(FederationInstance, 'Please call init first');\n    // eslint-disable-next-line prefer-spread\n    return FederationInstance.registerPlugins.apply(FederationInstance, args);\n}\nfunction getInstance() {\n    return FederationInstance;\n}\n// Inject for debug\nshare.setGlobalFederationConstructor(FederationHost);\n\nObject.defineProperty(exports, 'loadScript', {\n  enumerable: true,\n  get: function () { return sdk.loadScript; }\n});\nObject.defineProperty(exports, 'loadScriptNode', {\n  enumerable: true,\n  get: function () { return sdk.loadScriptNode; }\n});\nexports.registerGlobalPlugins = share.registerGlobalPlugins;\nexports.FederationHost = FederationHost;\nexports.Module = Module;\nexports.getInstance = getInstance;\nexports.getRemoteEntry = getRemoteEntry;\nexports.getRemoteInfo = getRemoteInfo;\nexports.init = init;\nexports.loadRemote = loadRemote;\nexports.loadShare = loadShare;\nexports.loadShareSync = loadShareSync;\nexports.preloadRemote = preloadRemote;\nexports.registerPlugins = registerPlugins;\nexports.registerRemotes = registerRemotes;\n"],"names":["Object","defineProperty","exports","value","polyfills","require","sdk","share","matchRemoteWithNameAndExpose","remotes","id","remote","isNameMatched","startsWith","name","expose","replace","pkgNameOrAlias","isAliasMatched","alias","exposeWithAlias","matchRemote","nameOrAlias","registerPlugins$1","plugins","hookInstances","globalPlugins","getGlobalHostPlugins","length","forEach","plugin","find","item","push","hookInstance","applyPlugin","loadEsmEntry","entry","remoteEntryExports","Promise","resolve","reject","Function","e","loadSystemJsEntry","loadEntryScript","globalName","createScriptHook","entryExports","getRemoteEntryExports","loadScript","attrs","url","res","emit","HTMLScriptElement","then","remoteEntryKey","assert","catch","loadEntryDom","remoteInfo","entryGlobalName","type","loadEntryNode","loadScriptNode","getRemoteEntryUniqueKey","composeKeyWithSeparator","getRemoteEntry","origin","uniqueKey","globalLoading","loadEntryHook","remoteHandler","hooks","lifecycle","loadEntry","listeners","size","loaderHook","createScript","undefined","isBrowserEnv","getRemoteInfo","_extends","DEFAULT_REMOTE_TYPE","shareScope","DEFAULT_SCOPE","Module","getEntry","host","safeToString","get","options","remoteSnapshot","loadFactory","inited","localShareScopeMap","shareScopeMap","remoteShareScope","initScope","remoteEntryInitOptions","version","enumerable","initContainerOptions","beforeInitContainer","init","console","error","initContainer","lib","moduleFactory","getFMId","wrapModuleFactory","wraperFactory","exposeContent","defineModuleId","isExtensible","getOwnPropertyDescriptor","Symbol","for","constructor","SyncHook","on","fn","add","once","self","wrapper","args","remove","apply","data","result","delete","removeAll","clear","Set","AsyncHook","ls","Array","from","i","call","prev","checkReturnData","originalData","returnedData","isObject","key","SyncWaterfallHook","tempData","onerror","warn","AsyncWaterfallHook","processError","prevData","PluginSystem","isPlainObject","pluginName","registerPlugins","keys","pluginLife","removePlugin","inherit","hookName","lifecycleKeys","defaultPreloadArgs","preloadConfig","resourceCategory","depsRemote","prefetchInterface","formatPreloadArgs","preloadArgs","map","normalizePreloadExposes","exposes","preloadAssets","assets","useLinkPreload","cssAssets","jsAssetsWithoutEntry","entryAssets","inBrowser","asset","moduleInfo","module","moduleCache","defaultAttrs","rel","as","crossorigin","cssUrl","link","cssEl","needAttach","createLink","cb","createLinkHook","HTMLLinkElement","document","head","appendChild","needDeleteLink","jsUrl","linkEl","fetchpriority","script","scriptEl","needDeleteScript","assignRemoteInfo","remoteEntryInfo","getRemoteEntryInfoFromSnapshot","entryUrl","getResourceUrl","buildVersion","snapshotPlugin","afterResolve","isRemoteInfoWithEntry","isPureRemoteEntry","globalSnapshot","snapshotHandler","loadRemoteSnapshotInfo","preloadOptions","generatePreloadAssets","splitId","splitInfo","split","traverseModuleInfo","traverse","isRoot","memo","snapshotValue","getInfoWithoutType","effectiveRemoteSnapshot","isManifestProvider","remotesInfo","remoteKeys","subRemoteInfo","remoteValue","matchedVersion","jsAssets","loadedSharedJsAssets","loadedSharedCssAssets","rootPreloadConfig","moduleInfoSnapshot","isArray","findPreloadConfig","remoteConfig","remoteEntryUrl","remoteEntryType","moduleAssetsInfo","modules","normalizedPreloadExposes","_moduleInfoSnapshot_modules","reduce","moduleAssetInfo","indexOf","moduleName","handleAssets","assetsRes","filter","assetsLength","index","assetsInfo","exposeFullPath","handlePreloadModule","preloaded","getPreloaded","css","async","sync","js","setPreloaded","shared","collectSharedAssets","shareInfo","snapshotShared","registeredShared","getRegisteredShare","sharedName","sharedHandler","resolveShare","_options_shared","shareInfos","sharedOptions","s","arrayShareInfo","arrayOptions","needPreloadJsAssets","has","needPreloadCssAssets","generatePreloadAssetsPlugin","getGlobalRemoteInfo","hostGlobalSnapshot","getGlobalSnapshotInfoByModuleInfo","globalRemoteInfo","getGlobalSnapshot","SnapshotHandler","loadSnapshot","HostInstance","globalRemoteSnapshot","globalSnapshotRes","beforeLoadRemoteSnapshot","hostSnapshot","remoteEntry","addGlobalSnapshot","ssrRemoteEntry","moduleSnapshot","getManifestJson","setGlobalSnapshotInfoByModuleInfo","remoteSnapshotRes","loadRemoteSnapshot","JSON","stringify","manifestUrl","extraOptions","getManifest","manifestJson","manifestCache","fetch","Response","json","metaData","set","err","manifestLoading","asyncLoadProcess","generateSnapshotFromManifest","loadingHostSnapshot","Map","Global","__FEDERATION__","__MANIFEST_LOADING__","SharedHandler","registerShared","globalOptions","userOptions","formatShareConfigs","sharedKeys","sharedKey","sharedVals","sharedVal","setShared","pkgName","loaded","loadShare","getTargetSharedOptions","scope","all","initializeSharing","strategy","loadShareRes","beforeLoadShare","shareInfoRes","addUseIn","useIn","addUniqueItem","loading","factory","gShared","customShareInfo","shareScopeName","promises","initTokens","initToken","hostName","register","_activeVersion_shareConfig","eager","versions","activeVersion","activeVersionEager","Boolean","shareConfig","initFn","mod","initRemoteModule","getRemoteModuleAndOptions","shareName","sharedArr","includes","shareStrategy","loadShareSync","Error","initShareScopeMap","scopeName","initContainerShareScopeMap","hostShareScopeMap","_object_without_properties_loose","scopes","sc","_setGlobalShareScopeMap","hostOptions","globalShareScopeMap","getGlobalShareScope","identifier","RemoteHandler","formatAndRegisterRemote","userRemotes","registerRemote","force","setIdToRemoteMap","remoteMatchInfo","idToRemoteMap","idWithAlias","idWithName","loadRemote","moduleOptions","idRes","moduleOrFactory","moduleWrapper","onLoad","exposeModule","exposeModuleFactory","moduleInstance","failOver","errorLoadRemote","preloadRemote","beforePreloadRemote","preloadOps","ops","registerRemotes","loadRemoteArgs","beforeRequest","remoteSplitInfo","rawRemote","matchInfo","targetRemotes","normalizeRemote","findEqual","_item_alias","URL","window","location","href","beforeRegisterRemote","registeredRemote","messages","removeRemote","join","remoteIndex","findIndex","splice","loadedModule","globalThis","_Object_getOwnPropertyDescriptor","configurable","remoteEntryUniqueKey","remoteInsId","remoteInsIndex","__INSTANCES__","ins","remoteIns","isAllSharedNotUsed","needDeleteKeys","instId","shareScopeVal","sharedPkgs","shareVersion","usedHostName","insId","_globalShareScopeMap_insId_shareScope_shareName","_globalShareScopeMap_insId_shareScope","_globalShareScopeMap_insId","remoteKey","log","afterPreloadRemote","FederationHost","initOptions","formatOptions","initRawContainer","container","userOptionsRes","globalOptionsRes","beforeInit","handledShared","optionsRes","pluginRes","getModuleInfo","defaultOptions","getBuilderId","FederationInstance","instance","getGlobalFederationInstance","FederationConstructor","getGlobalFederationConstructor","setGlobalFederationInstance","loadRemote1","loadShare1","loadShareSync1","getInstance","setGlobalFederationConstructor","registerGlobalPlugins"],"mappings":"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"}