{
  "graph": {
    "nodes": {
      "inject-external-runtime-core-plugin": {
        "name": "inject-external-runtime-core-plugin",
        "type": "lib",
        "data": {
          "root": "packages/runtime-plugins/inject-external-runtime-core-plugin",
          "name": "inject-external-runtime-core-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:sdk",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A sdk for support module federation",
            "js": {
              "packageName": "@module-federation/inject-external-runtime-core-plugin",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.js",
                  "require": "./dist/index.cjs.cjs"
                }
              },
              "packageMain": "./dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/runtime-plugins/inject-external-runtime-core-plugin/dist",
                "main": "packages/runtime-plugins/inject-external-runtime-core-plugin/src/index.ts",
                "tsConfig": "packages/runtime-plugins/inject-external-runtime-core-plugin/tsconfig.lib.json",
                "assets": [],
                "project": "packages/runtime-plugins/inject-external-runtime-core-plugin/package.json",
                "rollupConfig": "packages/runtime-plugins/inject-external-runtime-core-plugin/rollup.config.cjs",
                "compiler": "swc",
                "generatePackageJson": false,
                "format": [
                  "cjs",
                  "esm"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/runtime-plugins/inject-external-runtime-core-plugin/**/*.ts",
                  "packages/runtime-plugins/inject-external-runtime-core-plugin/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run inject-external-runtime-core-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/runtime-plugins/inject-external-runtime-core-plugin/src",
          "implicitDependencies": []
        }
      },
      "3011-rspack-manifest-provider": {
        "name": "3011-rspack-manifest-provider",
        "type": "app",
        "data": {
          "root": "apps/manifest-demo/3011-rspack-manifest-provider",
          "name": "3011-rspack-manifest-provider",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "3011-rspack-manifest-provider",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/rspack:rspack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "target": "web",
                "outputPath": "apps/manifest-demo/3011-rspack-manifest-provider/dist",
                "indexHtml": "apps/manifest-demo/3011-rspack-manifest-provider/src/index.html",
                "main": "apps/manifest-demo/3011-rspack-manifest-provider/src/index.js",
                "tsConfig": "apps/manifest-demo/3011-rspack-manifest-provider/tsconfig.app.json",
                "rspackConfig": "apps/manifest-demo/3011-rspack-manifest-provider/rspack.config.js"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/rspack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "rspackConfig": "apps/manifest-demo/3011-rspack-manifest-provider/rspack.config.js",
                "buildTarget": "3011-rspack-manifest-provider:build",
                "port": 3011
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "buildTarget": "3011-rspack-manifest-provider:build:development",
                  "port": 3011
                },
                "production": {
                  "buildTarget": "3011-rspack-manifest-provider:build:production",
                  "port": 3011
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/manifest-demo/3011-rspack-manifest-provider/src",
          "implicitDependencies": []
        }
      },
      "3012-rspack-js-entry-provider": {
        "name": "3012-rspack-js-entry-provider",
        "type": "app",
        "data": {
          "root": "apps/manifest-demo/3012-rspack-js-entry-provider",
          "name": "3012-rspack-js-entry-provider",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "3012-rspack-js-entry-provider",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/rspack:rspack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "target": "web",
                "outputPath": "apps/manifest-demo/3012-rspack-js-entry-provider/dist",
                "indexHtml": "apps/manifest-demo/3012-rspack-js-entry-provider/src/index.html",
                "main": "apps/manifest-demo/3012-rspack-js-entry-provider/src/index.js",
                "tsConfig": "apps/manifest-demo/3012-rspack-js-entry-provider/tsconfig.app.json",
                "rspackConfig": "apps/manifest-demo/3012-rspack-js-entry-provider/rspack.config.js"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/rspack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "rspackConfig": "apps/manifest-demo/3012-rspack-js-entry-provider/rspack.config.js",
                "buildTarget": "3012-rspack-js-entry-provider:build",
                "port": 3012
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "buildTarget": "3012-rspack-js-entry-provider:build:development",
                  "port": 3012
                },
                "production": {
                  "buildTarget": "3012-rspack-js-entry-provider:build:production",
                  "port": 3012
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/manifest-demo/3012-rspack-js-entry-provider/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-data-fetch-provider-csr": {
        "name": "modernjs-ssr-data-fetch-provider-csr",
        "type": "app",
        "data": {
          "root": "apps/modern-component-data-fetch/provider-csr",
          "name": "modernjs-ssr-data-fetch-provider-csr",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build:watch"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-data-fetch-provider-csr",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:watch"
              },
              "metadata": {
                "scriptContent": "rslib build --watch",
                "runCommand": "pnpm run build:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/modern-component-data-fetch/provider-csr"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/modern-component-data-fetch/provider-csr"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/modern-component-data-fetch/provider-csr"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modern-component-data-fetch/provider-csr/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-data-fetch-provider-csr:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-data-fetch-provider-csr:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modern-component-data-fetch/provider-csr/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "modernjs-ssr-dynamic-remote-new-version": {
        "name": "modernjs-ssr-dynamic-remote-new-version",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/dynamic-remote-new-version",
          "name": "modernjs-ssr-dynamic-remote-new-version",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-dynamic-remote-new-version",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/dynamic-remote-new-version; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/dynamic-remote-new-version; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/modernjs-ssr-dynamic-remote-new-version/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-dynamic-remote-new-version:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-dynamic-remote-new-version:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/modernjs-ssr-dynamic-remote-new-version/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "bridge-react-webpack-plugin": {
        "name": "bridge-react-webpack-plugin",
        "type": "lib",
        "data": {
          "root": "packages/bridge/bridge-react-webpack-plugin",
          "name": "bridge-react-webpack-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "@module-federation/bridge-react-webpack-plugin",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.es.js",
                  "require": "./dist/index.cjs.js"
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/bridge/bridge-react-webpack-plugin"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "vitest run -c packages/bridge/bridge-react-webpack-plugin/vitest.config.ts",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/bridge/bridge-react-webpack-plugin/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-data-fetch-provider": {
        "name": "modernjs-ssr-data-fetch-provider",
        "type": "app",
        "data": {
          "root": "apps/modern-component-data-fetch/provider",
          "name": "modernjs-ssr-data-fetch-provider",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-data-fetch-provider",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modern-component-data-fetch/provider; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modern-component-data-fetch/provider; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modern-component-data-fetch/provider/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-data-fetch-provider:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-data-fetch-provider:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modern-component-data-fetch/provider/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "next-app-router-4000": {
        "name": "next-app-router-4000",
        "type": "app",
        "data": {
          "root": "apps/next-app-router/next-app-router-4000",
          "name": "next-app-router-4000",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "lint-staged",
                "prettier",
                "prettier:check",
                "start",
                "test"
              ]
            },
            "js": {
              "packageName": "app-router-4000",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "NEXT_PRIVATE_LOCAL_WEBPACK=true next dev -p 4000",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint-staged": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint-staged"
              },
              "metadata": {
                "scriptContent": "lint-staged",
                "runCommand": "pnpm run lint-staged"
              },
              "configurations": {},
              "parallelism": true
            },
            "prettier": {
              "executor": "nx:run-script",
              "options": {
                "script": "prettier"
              },
              "metadata": {
                "scriptContent": "prettier --write --ignore-unknown .",
                "runCommand": "pnpm run prettier"
              },
              "configurations": {},
              "parallelism": true
            },
            "prettier:check": {
              "executor": "nx:run-script",
              "options": {
                "script": "prettier:check"
              },
              "metadata": {
                "scriptContent": "prettier --check --ignore-unknown .",
                "runCommand": "pnpm run prettier:check"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "pnpm prettier:check && pnpm lint",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "build": {
              "executor": "@nx/next:build",
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/next-app-router-4000"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/next-app-router-4000"
                },
                "production": {}
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "apps/next-app-router-4000"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "next-app-router-4000:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/next-app-router-4000/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/next-app-router-4000/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4000",
                "key": "27e40c91-5ac3-4433-8a87-651d10f51cf6"
              },
              "configurations": {
                "production": {
                  "devServerTarget": "next-app-router-4000:serve:production"
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :4000 || nx run next-app-router-4000:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run next-app-router-4000:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/next-app-router-4000",
          "implicitDependencies": []
        }
      },
      "next-app-router-4001": {
        "name": "next-app-router-4001",
        "type": "app",
        "data": {
          "root": "apps/next-app-router/next-app-router-4001",
          "name": "next-app-router-4001",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "lint-staged",
                "prettier",
                "prettier:check",
                "start",
                "test"
              ]
            },
            "js": {
              "packageName": "app-router-4001",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "NEXT_PRIVATE_LOCAL_WEBPACK=true next dev -p 4001",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint-staged": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint-staged"
              },
              "metadata": {
                "scriptContent": "lint-staged",
                "runCommand": "pnpm run lint-staged"
              },
              "configurations": {},
              "parallelism": true
            },
            "prettier": {
              "executor": "nx:run-script",
              "options": {
                "script": "prettier"
              },
              "metadata": {
                "scriptContent": "prettier --write --ignore-unknown .",
                "runCommand": "pnpm run prettier"
              },
              "configurations": {},
              "parallelism": true
            },
            "prettier:check": {
              "executor": "nx:run-script",
              "options": {
                "script": "prettier:check"
              },
              "metadata": {
                "scriptContent": "prettier --check --ignore-unknown .",
                "runCommand": "pnpm run prettier:check"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "pnpm prettier:check && pnpm lint",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "build": {
              "executor": "@nx/next:build",
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/next-app-router-4001"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/next-app-router-4001"
                },
                "production": {}
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm dev",
                "cwd": "apps/next-app-router-4001"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "next-app-router-4001:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/next-app-router-4001/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/next-app-router-4001/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "key": "27e40c91-5ac3-4433-8a87-651d10f51cf6"
              },
              "configurations": {
                "production": {
                  "devServerTarget": "next-app-router-4001:serve:production"
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :4001 || nx run next-app-router-4001:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run next-app-router-4001:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/next-app-router-4001",
          "implicitDependencies": []
        }
      },
      "3009-webpack-provider": {
        "name": "3009-webpack-provider",
        "type": "app",
        "data": {
          "root": "apps/manifest-demo/3009-webpack-provider",
          "name": "3009-webpack-provider",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "3009-webpack-provider",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/manifest-demo/3009-webpack-provider/dist",
                "index": "apps/manifest-demo/3009-webpack-provider/src/index.html",
                "baseHref": "/",
                "main": "apps/manifest-demo/3009-webpack-provider/src/index.ts",
                "tsConfig": "apps/manifest-demo/3009-webpack-provider/tsconfig.app.json",
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/manifest-demo/3009-webpack-provider/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "3009-webpack-provider:build",
                "hmr": true,
                "port": 3009
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "buildTarget": "3009-webpack-provider:build:development"
                },
                "production": {
                  "buildTarget": "3009-webpack-provider:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/manifest-demo/3009-webpack-provider/src",
          "implicitDependencies": []
        }
      },
      "3010-rspack-provider": {
        "name": "3010-rspack-provider",
        "type": "app",
        "data": {
          "root": "apps/manifest-demo/3010-rspack-provider",
          "name": "3010-rspack-provider",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "3010-rspack-provider",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/rspack:rspack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "target": "web",
                "outputPath": "apps/manifest-demo/3010-rspack-provider/dist",
                "indexHtml": "apps/manifest-demo/3010-rspack-provider/src/index.html",
                "main": "apps/manifest-demo/3010-rspack-provider/src/index.ts",
                "tsConfig": "apps/manifest-demo/3010-rspack-provider/tsconfig.app.json",
                "rspackConfig": "apps/manifest-demo/3010-rspack-provider/rspack.config.js"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/rspack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "rspackConfig": "apps/manifest-demo/3010-rspack-provider/rspack.config.js",
                "buildTarget": "3010-rspack-provider:build",
                "port": 3010
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "buildTarget": "3010-rspack-provider:build:development",
                  "port": 3010
                },
                "production": {
                  "buildTarget": "3010-rspack-provider:build:production",
                  "port": 3010
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/manifest-demo/3010-rspack-provider/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-dynamic-nested-remote": {
        "name": "modernjs-ssr-dynamic-nested-remote",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/dynamic-nested-remote",
          "name": "modernjs-ssr-dynamic-nested-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-dynamic-nested-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "FEDERATION_DEBUG=true modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/dynamic-nested-remote; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/dynamic-nested-remote; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/modernjs-ssr-dynamic-nested-remote/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-dynamic-nested-remote:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-dynamic-nested-remote:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/modernjs-ssr-dynamic-nested-remote/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "router-host-vue3-2100": {
        "name": "router-host-vue3-2100",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-host-vue3-2100",
          "name": "router-host-vue3-2100",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "host-vue3",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-host-vue3-2100"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-host-vue3-2100"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-host-vue3-2100"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-host-vue3-2100/src",
          "implicitDependencies": []
        }
      },
      "3006-runtime-remote": {
        "name": "3006-runtime-remote",
        "type": "app",
        "data": {
          "root": "apps/runtime-demo/3006-runtime-remote",
          "name": "3006-runtime-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "runtime-remote1",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/runtime-demo/3006-runtime-remote/dist",
                "index": "apps/runtime-demo/3006-runtime-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/runtime-demo/3006-runtime-remote/src/index.tsx",
                "tsConfig": "apps/runtime-demo/3006-runtime-remote/tsconfig.app.json",
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/runtime-demo/3006-runtime-remote/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "3006-runtime-remote:build",
                "hmr": true,
                "port": 3006
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "buildTarget": "3006-runtime-remote:build:development"
                },
                "production": {
                  "buildTarget": "3006-runtime-remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/runtime-demo/3006-runtime-remote/src",
          "implicitDependencies": []
        }
      },
      "3007-runtime-remote": {
        "name": "3007-runtime-remote",
        "type": "app",
        "data": {
          "root": "apps/runtime-demo/3007-runtime-remote",
          "name": "3007-runtime-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "runtime-remote2",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/runtime-demo/3007-runtime-remote/dist",
                "index": "apps/runtime-demo/3007-runtime-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/runtime-demo/3007-runtime-remote/src/index.tsx",
                "tsConfig": "apps/runtime-demo/3007-runtime-remote/tsconfig.app.json",
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/runtime-demo/3007-runtime-remote/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "3007-runtime-remote:build",
                "hmr": true,
                "port": 3007
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "buildTarget": "3007-runtime-remote:build:development"
                },
                "production": {
                  "buildTarget": "3007-runtime-remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/runtime-demo/3007-runtime-remote/src",
          "implicitDependencies": []
        }
      },
      "3008-runtime-remote": {
        "name": "3008-runtime-remote",
        "type": "app",
        "data": {
          "root": "apps/runtime-demo/3008-runtime-remote",
          "name": "3008-runtime-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "preview"
              ]
            },
            "js": {
              "packageName": "3008-runtime-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run build",
                "cwd": "apps/runtime-demo/3008-runtime-remote"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run dev",
                "cwd": "apps/runtime-demo/3008-runtime-remote"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run dev",
                "cwd": "apps/runtime-demo/3008-runtime-remote"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/runtime-demo/3008-runtime-remote/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-data-fetch-host": {
        "name": "modernjs-ssr-data-fetch-host",
        "type": "app",
        "data": {
          "root": "apps/modern-component-data-fetch/host",
          "name": "modernjs-ssr-data-fetch-host",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade",
                "inspect"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-data-fetch-host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "inspect": {
              "executor": "nx:run-script",
              "options": {
                "script": "inspect"
              },
              "metadata": {
                "scriptContent": "modern inspect",
                "runCommand": "pnpm run inspect"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/host; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modern-component-data-fetch/host; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modern-component-data-fetch/host/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:5001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "nx run modernjs-ssr-data-fetch-host:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e:watch": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "nx run modernjs-ssr-data-fetch-host:e2e --watch",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modern-component-data-fetch/host/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "native-federation-typescript": {
        "name": "native-federation-typescript",
        "type": "lib",
        "data": {
          "root": "packages/native-federation-typescript",
          "name": "native-federation-typescript",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:module federation",
            "npm:typescript",
            "npm:remote types",
            "npm:federated types",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Bundler agnostic unplugin to share federated types",
            "js": {
              "packageName": "@module-federation/native-federation-typescript",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.mjs",
                  "require": "./dist/index.js"
                },
                "./rollup": {
                  "types": "./dist/rollup.d.ts",
                  "require": "./dist/rollup.js",
                  "import": "./dist/rollup.mjs"
                },
                "./vite": {
                  "types": "./dist/vite.d.ts",
                  "require": "./dist/vite.js",
                  "import": "./dist/vite.mjs"
                },
                "./webpack": {
                  "types": "./dist/webpack.d.ts",
                  "require": "./dist/webpack.js",
                  "import": "./dist/webpack.mjs"
                },
                "./esbuild": {
                  "types": "./dist/esbuild.d.ts",
                  "require": "./dist/esbuild.js",
                  "import": "./dist/esbuild.mjs"
                },
                "./rspack": {
                  "types": "./dist/rspack.d.ts",
                  "require": "./dist/rspack.js",
                  "import": "./dist/rspack.mjs"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/packages/native-federation-typescript/dist"
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "tsup --config packages/native-federation-typescript/tsup.config.ts",
                  "cp packages/native-federation-typescript/package.json packages/native-federation-typescript/dist",
                  "cp packages/native-federation-typescript/*.md packages/native-federation-typescript/dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/native-federation-typescript/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/packages/native-federation-typescript"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run native-federation-typescript:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run native-federation-typescript:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "semantic-release": {
              "executor": "@goestav/nx-semantic-release:semantic-release",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/native-federation-typescript/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-remote-new-version": {
        "name": "modernjs-ssr-remote-new-version",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/remote-new-version",
          "name": "modernjs-ssr-remote-new-version",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-remote-new-version",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/remote-new-version; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/remote-new-version; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/modernjs-ssr-remote-new-version/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-remote-new-version:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-remote-new-version:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/modernjs-ssr-remote-new-version/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "node-dynamic-remote-new-version": {
        "name": "node-dynamic-remote-new-version",
        "type": "app",
        "data": {
          "root": "apps/node-dynamic-remote-new-version",
          "name": "node-dynamic-remote-new-version",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "node-dynamic-remote-new-version",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/node-dynamic-remote-new-version/dist",
                "index": "apps/node-dynamic-remote-new-version/src/index.html",
                "baseHref": "/",
                "main": "apps/node-dynamic-remote-new-version/src/main.tsx",
                "tsConfig": "apps/node-dynamic-remote-new-version/tsconfig.app.json",
                "assets": [],
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/node-dynamic-remote-new-version/webpack.config.js"
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/node-dynamic-remote-new-version/src/environments/environment.ts",
                      "with": "apps/node-dynamic-remote-new-version/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "node-dynamic-remote-new-version:build",
                "hmr": true,
                "port": 3027
              },
              "configurations": {
                "development": {
                  "buildTarget": "node-dynamic-remote-new-version:build:development"
                },
                "production": {
                  "buildTarget": "node-dynamic-remote-new-version:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-dynamic-remote-new-version/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-dynamic-remote-new-version/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/node-dynamic-remote-new-version/src",
          "implicitDependencies": []
        }
      },
      "router-host-v5-2200": {
        "name": "router-host-v5-2200",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-host-v5-2200",
          "name": "router-host-v5-2200",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "host-v5",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "FEDERATION_DEBUG=true rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-host-v5-2200"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-host-v5-2200"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-host-v5-2200"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/router-demo/router-host-v5-2200/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://127.0.0.1:2000",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :3005 || nx run 3005-runtime-host:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run 3005-runtime-host:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-host-v5-2200/src",
          "implicitDependencies": []
        }
      },
      "router-remote1-2001": {
        "name": "router-remote1-2001",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-remote1-2001",
          "name": "router-remote1-2001",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "remote1",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-remote1-2001"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-remote1-2001"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-remote1-2001"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-remote1-2001/src",
          "implicitDependencies": []
        }
      },
      "router-remote2-2002": {
        "name": "router-remote2-2002",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-remote2-2002",
          "name": "router-remote2-2002",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "remote2",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-remote2-2002"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-remote2-2002"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-remote2-2002"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-remote2-2002/src",
          "implicitDependencies": []
        }
      },
      "router-remote3-2003": {
        "name": "router-remote3-2003",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-remote3-2003",
          "name": "router-remote3-2003",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "remote3",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-remote3-2003"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-remote3-2003"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-remote3-2003"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-remote3-2003/src",
          "implicitDependencies": []
        }
      },
      "router-remote4-2004": {
        "name": "router-remote4-2004",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-remote4-2004",
          "name": "router-remote4-2004",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "remote4",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-remote4-2004"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-remote4-2004"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-remote4-2004"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-remote4-2004/src",
          "implicitDependencies": []
        }
      },
      "router-remote5-2005": {
        "name": "router-remote5-2005",
        "type": "app",
        "data": {
          "root": "apps/router-demo/router-remote5-2005",
          "name": "router-remote5-2005",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "remote5",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rsbuild dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/router-demo/router-remote5-2005",
                "command": "pnpm build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/router-demo/router-remote5-2005",
                "command": "pnpm dev"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/router-demo/router-remote5-2005/src",
          "implicitDependencies": []
        }
      },
      "3005-runtime-host": {
        "name": "3005-runtime-host",
        "type": "app",
        "data": {
          "root": "apps/runtime-demo/3005-runtime-host",
          "name": "3005-runtime-host",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "runtime-host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/runtime-demo/3005-runtime-host/dist",
                "index": "apps/runtime-demo/3005-runtime-host/src/index.html",
                "baseHref": "/",
                "main": "apps/runtime-demo/3005-runtime-host/src/index.ts",
                "tsConfig": "apps/runtime-demo/3005-runtime-host/tsconfig.app.json",
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/runtime-demo/3005-runtime-host/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "3005-runtime-host:build",
                "hmr": true,
                "port": 3005,
                "devRemotes": [
                  "3006-runtime-remote"
                ]
              },
              "configurations": {
                "development": {
                  "buildTarget": "3005-runtime-host:build:development"
                },
                "production": {
                  "buildTarget": "3005-runtime-host:build:production",
                  "hmr": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/runtime-demo/host/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "3005-runtime-host:build",
                "port": 3005
              },
              "configurations": {
                "development": {
                  "buildTarget": "3005-runtime-host:build:development"
                },
                "production": {
                  "buildTarget": "3005-runtime-host:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/runtime-demo/3005-runtime-host/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://127.0.0.1:3005",
                "browser": "chrome"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :3005 || nx run 3005-runtime-host:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run 3005-runtime-host:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/runtime-demo/3005-runtime-host/src",
          "implicitDependencies": []
        }
      },
      "third-party-dts-extractor": {
        "name": "third-party-dts-extractor",
        "type": "lib",
        "data": {
          "root": "packages/third-party-dts-extractor",
          "name": "third-party-dts-extractor",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/third-party-dts-extractor",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.mjs",
                  "require": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/packages/third-party-dts-extractor/dist"
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "tsup --config packages/third-party-dts-extractor/tsup.config.ts",
                  "cp packages/third-party-dts-extractor/package.json packages/third-party-dts-extractor/dist",
                  "cp packages/third-party-dts-extractor/*.md packages/third-party-dts-extractor/dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/third-party-dts-extractor/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/packages/third-party-dts-extractor"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run third-party-dts-extractor:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run third-party-dts-extractor:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "semantic-release": {
              "executor": "@goestav/nx-semantic-release:semantic-release",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/third-party-dts-extractor/src",
          "implicitDependencies": []
        }
      },
      "create-module-federation": {
        "name": "create-module-federation",
        "type": "lib",
        "data": {
          "root": "packages/create-module-federation",
          "name": "create-module-federation",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Create a new Module Federation project",
            "js": {
              "packageName": "create-module-federation",
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "cd packages/create-module-federation; pnpm run build",
                  "cp packages/create-module-federation/LICENSE packages/create-module-federation/dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/create-module-federation/**/*.ts",
                  "packages/create-module-federation/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "echo 'no test'"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run create-module-federation:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run create-module-federation:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/create-module-federation/src",
          "implicitDependencies": []
        }
      },
      "router-host-2000": {
        "name": "router-host-2000",
        "type": "lib",
        "data": {
          "root": "apps/router-demo/router-host-2000",
          "name": "router-host-2000",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "FEDERATION_DEBUG=true rsbuild dev --open",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rsbuild preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/router-demo/router-host-2000"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix apps/router-demo/router-host-2000"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/router-demo/router-host-2000"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/router-demo/router-host-2000/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://127.0.0.1:2000",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i:2000 || nx run router-host-2000:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run router-host-2000:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/router-demo/router-host-2000/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-dynamic-remote": {
        "name": "modernjs-ssr-dynamic-remote",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/dynamic-remote",
          "name": "modernjs-ssr-dynamic-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "storybook"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-dynamic-remote",
              "packageMain": "./dist/cjs/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "storybook": {
              "executor": "nx:run-script",
              "options": {
                "script": "storybook"
              },
              "metadata": {
                "scriptContent": "storybook dev -p 6006",
                "runCommand": "pnpm run storybook"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "cd apps/modernjs-ssr/dynamic-remote; pnpm run build"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/dynamic-remote; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "cd apps/modernjs-ssr/dynamic-remote; pnpm run dev"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/modernjs-ssr-dynamic-remote/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-dynamic-remote:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-dynamic-remote:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/modernjs-ssr-dynamic-remote/src",
          "implicitDependencies": []
        }
      },
      "native-federation-tests": {
        "name": "native-federation-tests",
        "type": "lib",
        "data": {
          "root": "packages/native-federation-tests",
          "name": "native-federation-tests",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:module federation",
            "npm:tests",
            "npm:remote tests",
            "npm:federated tests",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Bundler agnostic unplugin to share federated tests",
            "js": {
              "packageName": "@module-federation/native-federation-tests",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.mjs",
                  "require": "./dist/index.js"
                },
                "./rollup": {
                  "types": "./dist/rollup.d.ts",
                  "require": "./dist/rollup.js",
                  "import": "./dist/rollup.mjs"
                },
                "./vite": {
                  "types": "./dist/vite.d.ts",
                  "require": "./dist/vite.js",
                  "import": "./dist/vite.mjs"
                },
                "./webpack": {
                  "types": "./dist/webpack.d.ts",
                  "require": "./dist/webpack.js",
                  "import": "./dist/webpack.mjs"
                },
                "./esbuild": {
                  "types": "./dist/esbuild.d.ts",
                  "require": "./dist/esbuild.js",
                  "import": "./dist/esbuild.mjs"
                },
                "./rspack": {
                  "types": "./dist/rspack.d.ts",
                  "require": "./dist/rspack.js",
                  "import": "./dist/rspack.mjs"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/packages/native-federation-tests/dist"
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "tsup --config packages/native-federation-tests/tsup.config.ts",
                  "cp packages/native-federation-tests/package.json packages/native-federation-tests/dist",
                  "cp packages/native-federation-tests/*.md packages/native-federation-tests/dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/native-federation-tests/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/packages/native-federation-tests"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run native-federation-tests:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run native-federation-tests:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/native-federation-tests/src",
          "implicitDependencies": []
        }
      },
      "webpack-bundler-runtime": {
        "name": "webpack-bundler-runtime",
        "type": "lib",
        "data": {
          "root": "packages/webpack-bundler-runtime",
          "name": "webpack-bundler-runtime",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:bundler runtime",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Module Federation Runtime for webpack",
            "js": {
              "packageName": "@module-federation/webpack-bundler-runtime",
              "packageExports": {
                ".": {
                  "import": {
                    "types": "./dist/index.esm.d.ts",
                    "default": "./dist/index.esm.js"
                  },
                  "require": {
                    "types": "./dist/index.cjs.d.ts",
                    "default": "./dist/index.cjs.cjs"
                  }
                },
                "./constant": {
                  "import": {
                    "types": "./dist/constant.esm.d.ts",
                    "default": "./dist/constant.esm.js"
                  },
                  "require": {
                    "types": "./dist/constant.cjs.d.ts",
                    "default": "./dist/constant.cjs.cjs"
                  }
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "parallel": false,
                "outputPath": "packages/webpack-bundler-runtime/dist",
                "main": "packages/webpack-bundler-runtime/src/index.ts",
                "tsConfig": "packages/webpack-bundler-runtime/tsconfig.lib.json",
                "assets": [],
                "project": "packages/webpack-bundler-runtime/package.json",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "additionalEntryPoints": [
                  "packages/webpack-bundler-runtime/src/constant.ts"
                ],
                "generatePackageJson": false,
                "rollupConfig": "packages/webpack-bundler-runtime/rollup.config.cjs"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/webpack-bundler-runtime/**/*.ts",
                  "packages/webpack-bundler-runtime/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/webpack-bundler-runtime/jest.config.cjs",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run webpack-bundler-runtime:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run webpack-bundler-runtime:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/webpack-bundler-runtime/src",
          "implicitDependencies": []
        }
      },
      "manifest-webpack-host": {
        "name": "manifest-webpack-host",
        "type": "app",
        "data": {
          "root": "apps/manifest-demo/webpack-host",
          "name": "manifest-webpack-host",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "3008-webpack-host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/manifest-demo/webpack-host/dist",
                "index": "apps/manifest-demo/webpack-host/src/index.html",
                "baseHref": "/",
                "main": "apps/manifest-demo/webpack-host/src/index.ts",
                "tsConfig": "apps/manifest-demo/webpack-host/tsconfig.app.json",
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/manifest-demo/webpack-host/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "manifest-webpack-host:build",
                "hmr": true,
                "port": 3013
              },
              "configurations": {
                "development": {
                  "buildTarget": "manifest-webpack-host:build:development"
                },
                "production": {
                  "buildTarget": "manifest-webpack-host:build:production",
                  "hmr": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/manifest-demo/host/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "manifest-webpack-host:build",
                "port": 3013
              },
              "configurations": {
                "development": {
                  "buildTarget": "manifest-webpack-host:build:development"
                },
                "production": {
                  "buildTarget": "manifest-webpack-host:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/manifest-demo/webpack-host/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:3013",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :3013 || nx run manifest-webpack-host:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run manifest-webpack-host:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/manifest-demo/webpack-host/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-nested-remote": {
        "name": "modernjs-ssr-nested-remote",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/nested-remote",
          "name": "modernjs-ssr-nested-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-nested-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/nested-remote; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/nested-remote; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/nested-remote/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-nested-remote:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-nested-remote:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/modernjs-ssr-nested-remote/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "assemble-release-plan": {
        "name": "assemble-release-plan",
        "type": "lib",
        "data": {
          "root": "packages/assemble-release-plan",
          "name": "assemble-release-plan",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test",
                "watch",
                "postinstall",
                "lint",
                "types:check",
                "changeset",
                "check-all",
                "version-packages",
                "release"
              ]
            },
            "description": "Reads changesets and adds information on dependents that need bumping",
            "js": {
              "packageName": "@changesets/assemble-release-plan",
              "packageExports": {
                ".": {
                  "types": {
                    "import": "./dist/changesets-assemble-release-plan.cjs.mjs",
                    "default": "./dist/changesets-assemble-release-plan.cjs.js"
                  },
                  "module": "./dist/changesets-assemble-release-plan.esm.js",
                  "import": "./dist/changesets-assemble-release-plan.cjs.mjs",
                  "default": "./dist/changesets-assemble-release-plan.cjs.js"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "dist/changesets-assemble-release-plan.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "echo 'skip'",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "watch"
              },
              "metadata": {
                "scriptContent": "preconstruct watch",
                "runCommand": "pnpm run watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "postinstall": {
              "executor": "nx:run-script",
              "options": {
                "script": "postinstall"
              },
              "metadata": {
                "scriptContent": "preconstruct dev",
                "runCommand": "pnpm run postinstall"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "yarn eslint . --ext .ts,.tsx,.js",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "types:check": {
              "executor": "nx:run-script",
              "options": {
                "script": "types:check"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run types:check"
              },
              "configurations": {},
              "parallelism": true
            },
            "changeset": {
              "executor": "nx:run-script",
              "options": {
                "script": "changeset"
              },
              "metadata": {
                "scriptContent": "packages/cli/bin.js",
                "runCommand": "pnpm run changeset"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-all": {
              "executor": "nx:run-script",
              "options": {
                "script": "check-all"
              },
              "metadata": {
                "scriptContent": "yarn test && yarn types:check && yarn lint && yarn format",
                "runCommand": "pnpm run check-all"
              },
              "configurations": {},
              "parallelism": true
            },
            "version-packages": {
              "executor": "nx:run-script",
              "options": {
                "script": "version-packages"
              },
              "metadata": {
                "scriptContent": "changeset version && yarn format:fix",
                "runCommand": "pnpm run version-packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "release": {
              "executor": "nx:run-script",
              "options": {
                "script": "release"
              },
              "metadata": {
                "scriptContent": "yarn build && changeset publish",
                "runCommand": "pnpm run release"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/assemble-release-plan"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/assemble-release-plan/src",
          "implicitDependencies": []
        }
      },
      "bridge-shared": {
        "name": "bridge-shared",
        "type": "lib",
        "data": {
          "root": "packages/bridge/bridge-shared",
          "name": "bridge-shared",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "@module-federation/bridge-shared",
              "packageMain": "./dist/index.umd.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/bridge/bridge-shared"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/bridge/bridge-shared/src",
          "implicitDependencies": []
        }
      },
      "bridge-react": {
        "name": "bridge-react",
        "type": "lib",
        "data": {
          "root": "packages/bridge/bridge-react",
          "name": "bridge-react",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "@module-federation/bridge-react",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.es.js",
                  "require": "./dist/index.cjs.js"
                },
                "./v18": {
                  "types": "./dist/v18.d.ts",
                  "import": "./dist/v18.es.js",
                  "require": "./dist/v18.cjs.js"
                },
                "./v19": {
                  "types": "./dist/v19.d.ts",
                  "import": "./dist/v19.es.js",
                  "require": "./dist/v19.cjs.js"
                },
                "./router": {
                  "types": "./dist/router.d.ts",
                  "import": "./dist/router.es.js",
                  "require": "./dist/router.cjs.js"
                },
                "./plugin": {
                  "types": "./dist/plugin.d.ts",
                  "import": "./dist/plugin.es.js",
                  "require": "./dist/plugin.es.js"
                },
                "./router-v5": {
                  "types": "./dist/router-v5.d.ts",
                  "import": "./dist/router-v5.es.js",
                  "require": "./dist/router-v5.cjs.js"
                },
                "./router-v6": {
                  "types": "./dist/router-v6.d.ts",
                  "import": "./dist/router-v6.es.js",
                  "require": "./dist/router-v6.cjs.js"
                },
                "./lazy-utils": {
                  "types": "./dist/lazy-utils.d.ts",
                  "import": "./dist/lazy-utils.es.js",
                  "require": "./dist/lazy-utils.cjs.js"
                },
                "./data-fetch-utils": {
                  "types": "./dist/data-fetch-utils.d.ts",
                  "import": "./dist/data-fetch-utils.es.js",
                  "require": "./dist/data-fetch-utils.cjs.js"
                },
                "./data-fetch-server-middleware": {
                  "types": "./dist/data-fetch-server-middleware.d.ts",
                  "import": "./dist/data-fetch-server-middleware.es.js",
                  "require": "./dist/data-fetch-server-middleware.cjs.js"
                },
                "./lazy-load-component-plugin": {
                  "types": "./dist/lazy-load-component-plugin.d.ts",
                  "import": "./dist/lazy-load-component-plugin.es.js",
                  "require": "./dist/lazy-load-component-plugin.cjs.js"
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/bridge/bridge-react"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "vitest run -c packages/bridge/bridge-react/vitest.config.ts",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/bridge/bridge-react/src",
          "implicitDependencies": []
        }
      },
      "react_ts_nested_remote": {
        "name": "react_ts_nested_remote",
        "type": "app",
        "data": {
          "root": "apps/react-ts-nested-remote",
          "name": "react_ts_nested_remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "react-ts-nested-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/react-ts-nested-remote/dist",
                "index": "apps/react-ts-nested-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/react-ts-nested-remote/src/main.ts",
                "polyfills": "apps/react-ts-nested-remote/src/polyfills.ts",
                "tsConfig": "apps/react-ts-nested-remote/tsconfig.app.json",
                "assets": [
                  "apps/react-ts-nested-remote/src/favicon.ico",
                  "apps/react-ts-nested-remote/src/assets"
                ],
                "styles": [
                  "apps/react-ts-nested-remote/src/styles.css"
                ],
                "scripts": [],
                "webpackConfig": "apps/react-ts-nested-remote/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/react-ts-nested-remote/src/environments/environment.ts",
                      "with": "apps/react-ts-nested-remote/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "react_ts_nested_remote:build",
                "hmr": true,
                "port": 3005
              },
              "configurations": {
                "development": {
                  "buildTarget": "react_ts_nested_remote:build:development"
                },
                "production": {
                  "buildTarget": "react_ts_nested_remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/react-ts-nested-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "react_ts_nested_remote:build",
                "port": 3005
              },
              "configurations": {
                "development": {
                  "buildTarget": "react_ts_nested_remote:build:development"
                },
                "production": {
                  "buildTarget": "react_ts_nested_remote:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/react-ts-nested-remote/src",
          "implicitDependencies": []
        }
      },
      "vue3-bridge": {
        "name": "vue3-bridge",
        "type": "lib",
        "data": {
          "root": "packages/bridge/vue3-bridge",
          "name": "vue3-bridge",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "@module-federation/bridge-vue3",
              "packageMain": "./dist/index.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/bridge/vue3-bridge"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/bridge/vue3-bridge/src",
          "implicitDependencies": []
        }
      },
      "chrome-devtools": {
        "name": "chrome-devtools",
        "type": "lib",
        "data": {
          "root": "packages/chrome-devtools",
          "name": "chrome-devtools",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build:storybook",
                "storybook",
                "reset",
                "dev",
                "build:debug",
                "build:lib",
                "release",
                "test:e2e",
                "test:e2e:ui",
                "start",
                "serve",
                "postinstall"
              ]
            },
            "js": {
              "packageName": "@module-federation/devtools",
              "packageExports": {
                ".": {
                  "require": "./dist/lib/App.js",
                  "import": "./dist/es/App.js",
                  "types": "./dist/types/App.d.ts"
                },
                "./App": {
                  "require": "./dist/lib/App.js",
                  "import": "./dist/es/App.js",
                  "types": "./dist/types/App.d.ts"
                }
              },
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build:storybook": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:storybook"
              },
              "metadata": {
                "scriptContent": "storybook build",
                "runCommand": "pnpm run build:storybook"
              },
              "configurations": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "nx:run-script",
              "options": {
                "script": "storybook"
              },
              "metadata": {
                "scriptContent": "storybook dev -p 6006",
                "runCommand": "pnpm run storybook"
              },
              "configurations": {},
              "parallelism": true
            },
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern-app dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:debug": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:debug"
              },
              "metadata": {
                "scriptContent": "DEBUG=true modern-app build && node postpack.js",
                "runCommand": "pnpm run build:debug"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:lib": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:lib"
              },
              "metadata": {
                "scriptContent": "rm -rf dist && modern-module build -c modern.lib.config.ts",
                "runCommand": "pnpm run build:lib"
              },
              "configurations": {},
              "parallelism": true
            },
            "release": {
              "executor": "nx:run-script",
              "options": {
                "script": "release"
              },
              "metadata": {
                "scriptContent": "npm publish --tag canary",
                "runCommand": "pnpm run release"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e"
              },
              "metadata": {
                "scriptContent": "E2ETEST=true pnpm build && playwright test",
                "runCommand": "pnpm run test:e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e:ui"
              },
              "metadata": {
                "scriptContent": "E2ETEST=true  pnpm build && playwright test --ui",
                "runCommand": "pnpm run test:e2e:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern-app start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-script",
              "options": {
                "script": "serve"
              },
              "metadata": {
                "scriptContent": "modern-app serve",
                "runCommand": "pnpm run serve"
              },
              "configurations": {},
              "parallelism": true
            },
            "postinstall": {
              "executor": "nx:run-script",
              "options": {
                "script": "postinstall"
              },
              "metadata": {
                "scriptContent": "bash install-deps.bash",
                "runCommand": "pnpm run postinstall"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build:lib --prefix packages/chrome-devtools"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "build:chrome-plugins": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/chrome-devtools"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test --prefix packages/chrome-devtools"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "e2e:devtools": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test:e2e --prefix packages/chrome-devtools"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e:devtools:ui": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run test:e2e:ui --prefix packages/chrome-devtools"
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/chrome-devtools/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-remote": {
        "name": "modernjs-ssr-remote",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/remote",
          "name": "modernjs-ssr-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/remote; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/remote; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/remote/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :8080 || nx run modernjs-ssr-remote:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs-ssr-remote:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/remote/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "node-dynamic-remote": {
        "name": "node-dynamic-remote",
        "type": "app",
        "data": {
          "root": "apps/node-dynamic-remote",
          "name": "node-dynamic-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "node-dynamic-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/node-dynamic-remote/dist",
                "index": "apps/node-dynamic-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/node-dynamic-remote/src/main.tsx",
                "tsConfig": "apps/node-dynamic-remote/tsconfig.app.json",
                "assets": [],
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/node-dynamic-remote/webpack.config.js"
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/node-dynamic-remote/src/environments/environment.ts",
                      "with": "apps/node-dynamic-remote/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "node-dynamic-remote:build",
                "hmr": true,
                "port": 3026
              },
              "configurations": {
                "development": {
                  "buildTarget": "node-dynamic-remote:build:development"
                },
                "production": {
                  "buildTarget": "node-dynamic-remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-dynamic-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-dynamic-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/node-dynamic-remote/src",
          "implicitDependencies": []
        }
      },
      "storybook-addon": {
        "name": "storybook-addon",
        "type": "lib",
        "data": {
          "root": "packages/storybook-addon",
          "name": "storybook-addon",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:module-federation",
            "npm:typescript",
            "npm:storybook",
            "npm:rsbuild",
            "npm:storybook-rsbuild",
            "npm:addon",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Storybook addon to consume remote module federated apps/components",
            "js": {
              "packageName": "@module-federation/storybook-addon",
              "packageExports": {
                ".": {
                  "types": "./dist/src/index.d.ts",
                  "default": "./dist/src/index.js"
                },
                "./preset": {
                  "types": "./dist/preset.d.ts",
                  "default": "./dist/preset.js"
                },
                "./*": "./*"
              },
              "packageMain": "dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/storybook-addon/dist",
                "main": "packages/storybook-addon/src/index.ts",
                "tsConfig": "packages/storybook-addon/tsconfig.lib.json",
                "assets": [
                  "packages/storybook-addon/*.md"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/storybook-addon/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/storybook-addon/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run storybook-addon:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run storybook-addon:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/storybook-addon/src",
          "implicitDependencies": [
            "utils"
          ]
        }
      },
      "rsbuild-plugin": {
        "name": "rsbuild-plugin",
        "type": "lib",
        "data": {
          "root": "packages/rsbuild-plugin",
          "name": "rsbuild-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Module Federation plugin for Rsbuild",
            "js": {
              "packageName": "@module-federation/rsbuild-plugin",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.mjs",
                  "require": "./dist/index.cjs.js"
                },
                "./utils": {
                  "types": "./dist/utils.cjs.d.ts",
                  "import": "./dist/utils.esm.mjs",
                  "require": "./dist/utils.cjs.js"
                },
                "./constant": {
                  "types": "./dist/constant.cjs.d.ts",
                  "import": "./dist/constant.esm.mjs",
                  "require": "./dist/constant.cjs.js"
                }
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/rsbuild-plugin/dist",
                "main": "packages/rsbuild-plugin/src/cli/index.ts",
                "tsConfig": "packages/rsbuild-plugin/tsconfig.lib.json",
                "assets": [],
                "external": [
                  "@module-federation/*"
                ],
                "project": "packages/rsbuild-plugin/package.json",
                "rollupConfig": "packages/rsbuild-plugin/rollup.config.js",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/rsbuild-plugin/**/*.ts",
                  "packages/rsbuild-plugin/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/packages/rsbuild-plugin"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run rsbuild-plugin:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run rsbuild-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rsbuild-plugin/src",
          "implicitDependencies": []
        }
      },
      "rspress-plugin": {
        "name": "rspress-plugin",
        "type": "lib",
        "data": {
          "root": "packages/rspress-plugin",
          "name": "rspress-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:Rspress",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build:watch"
              ]
            },
            "description": "Module Federation plugin for Rspress",
            "js": {
              "packageName": "@module-federation/rspress-plugin",
              "packageExports": {
                ".": {
                  "types": "./dist/esm/plugin.d.ts",
                  "import": "./dist/esm/index.js"
                }
              },
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:watch"
              },
              "metadata": {
                "scriptContent": "rslib build --watch",
                "runCommand": "pnpm run build:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix packages/rspress-plugin"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix packages/rspress-plugin"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run webpack-bundler-runtime:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rspress-plugin/src",
          "implicitDependencies": []
        }
      },
      "data-prefetch": {
        "name": "data-prefetch",
        "type": "lib",
        "data": {
          "root": "packages/data-prefetch",
          "name": "data-prefetch",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Module Federation Data Prefetch",
            "js": {
              "packageName": "@module-federation/data-prefetch",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.js",
                  "require": "./dist/index.cjs.cjs"
                },
                "./react": {
                  "types": "./dist/react.cjs.d.ts",
                  "import": "./dist/react.esm.js",
                  "require": "./dist/react.cjs.cjs"
                },
                "./cli": {
                  "types": "./dist/cli.cjs.d.ts",
                  "import": "./dist/cli.esm.js",
                  "require": "./dist/cli.cjs.cjs"
                },
                "./babel-plugin": {
                  "types": "./dist/babel.cjs.d.ts",
                  "import": "./dist/babel.esm.js",
                  "require": "./dist/babel.cjs.cjs"
                },
                "./universal": {
                  "types": "./dist/universal.cjs.d.ts",
                  "import": "./dist/universal.esm.js",
                  "require": "./dist/universal.cjs.cjs"
                }
              },
              "packageMain": "dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/data-prefetch/dist",
                "main": "packages/data-prefetch/src/index.ts",
                "tsConfig": "packages/data-prefetch/tsconfig.lib.json",
                "assets": [],
                "project": "packages/data-prefetch/package.json",
                "rollupConfig": "packages/data-prefetch/rollup.config.cjs",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/data-prefetch/jest.config.cjs",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/data-prefetch/**/*.ts",
                  "packages/data-prefetch/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run data-prefetch:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run data-prefetch:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/data-prefetch/src",
          "implicitDependencies": []
        }
      },
      "modernjs-ssr-host": {
        "name": "modernjs-ssr-host",
        "type": "app",
        "data": {
          "root": "apps/modernjs-ssr/host",
          "name": "modernjs-ssr-host",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "modernjs-ssr-host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/host; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "dependsOn": [
                  {
                    "target": "build",
                    "dependencies": true
                  }
                ],
                "commands": [
                  {
                    "command": "cd apps/modernjs-ssr/host; pnpm run dev",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs-ssr/host/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:3050",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "nx run modernjs-ssr-host:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs-ssr/modernjs-ssr-host/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "node-local-remote": {
        "name": "node-local-remote",
        "type": "app",
        "data": {
          "root": "apps/node-local-remote",
          "name": "node-local-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "node-local-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{workspaceRoot}/apps/node-local-remote/dist"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/node-local-remote/dist",
                "index": "apps/node-local-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/node-local-remote/src/main.tsx",
                "tsConfig": "apps/node-local-remote/tsconfig.app.json",
                "assets": [],
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/node-local-remote/webpack.config.js"
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/node-local-remote/src/environments/environment.ts",
                      "with": "apps/node-local-remote/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "node-local-remote:build",
                "hmr": true,
                "port": 3023
              },
              "configurations": {
                "development": {
                  "buildTarget": "node-local-remote:build:development"
                },
                "production": {
                  "buildTarget": "node-local-remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-local-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-local-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/node-local-remote/src",
          "implicitDependencies": []
        }
      },
      "runtime-tools": {
        "name": "runtime-tools",
        "type": "lib",
        "data": {
          "root": "packages/runtime-tools",
          "name": "runtime-tools",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/runtime-tools",
              "packageExports": {
                ".": {
                  "import": {
                    "types": "./dist/index.esm.d.ts",
                    "default": "./dist/index.esm.js"
                  },
                  "require": {
                    "types": "./dist/index.cjs.d.ts",
                    "default": "./dist/index.cjs.cjs"
                  }
                },
                "./runtime": {
                  "import": {
                    "types": "./dist/runtime.esm.d.ts",
                    "default": "./dist/runtime.esm.js"
                  },
                  "require": {
                    "types": "./dist/runtime.cjs.d.ts",
                    "default": "./dist/runtime.cjs.cjs"
                  }
                },
                "./runtime-core": {
                  "import": {
                    "types": "./dist/runtime-core.esm.d.ts",
                    "default": "./dist/runtime-core.esm.js"
                  },
                  "require": {
                    "types": "./dist/runtime-core.cjs.d.ts",
                    "default": "./dist/runtime-core.cjs.cjs"
                  }
                },
                "./webpack-bundler-runtime": {
                  "import": {
                    "types": "./dist/webpack-bundler-runtime.esm.d.ts",
                    "default": "./dist/webpack-bundler-runtime.esm.js"
                  },
                  "require": {
                    "types": "./dist/webpack-bundler-runtime.cjs.d.ts",
                    "default": "./dist/webpack-bundler-runtime.cjs.cjs"
                  }
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{workspaceRoot}/packages/runtime-tools/dist"
              ],
              "options": {
                "parallel": false,
                "outputPath": "packages/runtime-tools/dist",
                "main": "packages/runtime-tools/src/index.ts",
                "additionalEntryPoints": [
                  "packages/runtime-tools/src/runtime.ts",
                  "packages/runtime-tools/src/webpack-bundler-runtime.ts"
                ],
                "tsConfig": "packages/runtime-tools/tsconfig.lib.json",
                "assets": [],
                "project": "packages/runtime-tools/package.json",
                "compiler": "swc",
                "rollupConfig": "packages/runtime-tools/rollup.config.cjs",
                "format": [
                  "cjs",
                  "esm"
                ],
                "external": [
                  "@module-federation/*"
                ],
                "generatePackageJson": false
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/runtime-tools/**/*.ts",
                  "packages/runtime-tools/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run runtime:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run runtime:build",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run runtime:semantic-release",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "semantic-release": {
              "executor": "@goestav/nx-semantic-release:semantic-release",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/packages/core"
              ],
              "options": {
                "jestConfig": "packages/runtime-tools/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/runtime-tools/src",
          "implicitDependencies": []
        }
      },
      "retry-plugin": {
        "name": "retry-plugin",
        "type": "lib",
        "data": {
          "root": "packages/retry-plugin",
          "name": "retry-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/retry-plugin",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/esm/index.js",
                  "require": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/packages/retry-plugin/dist"
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "tsup --config packages/retry-plugin/tsup.config.ts",
                  "cp packages/retry-plugin/package.json packages/retry-plugin/dist",
                  "cp packages/retry-plugin/*.md packages/retry-plugin/dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "vitest run -u -c packages/retry-plugin/vitest.config.ts",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/retry-plugin/**/*.ts",
                  "packages/retry-plugin/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "build-debug": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "FEDERATION_DEBUG=true nx run retry-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run retry-plugin:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run retry-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/retry-plugin/src",
          "implicitDependencies": []
        }
      },
      "runtime-core": {
        "name": "runtime-core",
        "type": "lib",
        "data": {
          "root": "packages/runtime-core",
          "name": "runtime-core",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/runtime-core",
              "packageExports": {
                ".": {
                  "import": {
                    "types": "./dist/index.esm.d.ts",
                    "default": "./dist/index.esm.js"
                  },
                  "require": {
                    "types": "./dist/index.cjs.d.ts",
                    "default": "./dist/index.cjs.cjs"
                  }
                },
                "./types": {
                  "import": {
                    "types": "./dist/types.esm.d.ts",
                    "default": "./dist/types.esm.js"
                  },
                  "require": {
                    "types": "./dist/types.cjs.d.ts",
                    "default": "./dist/types.cjs.cjs"
                  }
                }
              },
              "packageMain": "./dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{workspaceRoot}/packages/runtime-core/dist"
              ],
              "options": {
                "parallel": false,
                "outputPath": "packages/runtime-core/dist",
                "main": "packages/runtime-core/src/index.ts",
                "additionalEntryPoints": [
                  "packages/runtime-core/src/types.ts"
                ],
                "tsConfig": "packages/runtime-core/tsconfig.lib.json",
                "assets": [],
                "external": [
                  "@module-federation/*"
                ],
                "project": "packages/runtime-core/package.json",
                "compiler": "swc",
                "rollupConfig": "packages/runtime-core/rollup.config.cjs",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/runtime-core/**/*.ts",
                  "packages/runtime-core/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "build-debug": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "FEDERATION_DEBUG=true nx run runtime-core:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run runtime-core:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run runtime-core:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "vitest run -u -c packages/runtime-core/vitest.config.ts",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/runtime-core/src",
          "implicitDependencies": []
        }
      },
      "error-codes": {
        "name": "error-codes",
        "type": "lib",
        "data": {
          "root": "packages/error-codes",
          "name": "error-codes",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:error codes",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Module Federation Error Codes",
            "js": {
              "packageName": "@module-federation/error-codes",
              "packageExports": {
                ".": {
                  "import": "./dist/index.esm.mjs",
                  "require": "./dist/index.cjs.js"
                }
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "parallel": false,
                "outputPath": "packages/error-codes/dist",
                "main": "packages/error-codes/src/index.ts",
                "tsConfig": "packages/error-codes/tsconfig.lib.json",
                "rollupConfig": "packages/error-codes/rollup.config.js",
                "assets": [],
                "project": "packages/error-codes/package.json",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/error-codes/**/*.ts",
                  "packages/error-codes/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/error-codes/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run error-codes:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run error-codes:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/error-codes/src",
          "implicitDependencies": []
        }
      },
      "react_ts_remote": {
        "name": "react_ts_remote",
        "type": "app",
        "data": {
          "root": "apps/react-ts-remote",
          "name": "react_ts_remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "react-ts-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/rspack:rspack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "target": "web",
                "outputPath": "apps/react-ts-remote/dist",
                "indexHtml": "apps/react-ts-remote/src/index.html",
                "main": "apps/react-ts-remote/src/main.ts",
                "tsConfig": "apps/react-ts-remote/tsconfig.app.json",
                "rspackConfig": "apps/react-ts-remote/rspack.config.js"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/rspack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "rspackConfig": "apps/react-ts-remote/rspack.config.js",
                "buildTarget": "react_ts_remote:build",
                "port": 3004
              },
              "configurations": {
                "development": {
                  "buildTarget": "react_ts_remote:build:development",
                  "port": 3004
                },
                "production": {
                  "buildTarget": "react_ts_remote:build:production",
                  "port": 3004
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "build:webpack": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/react-ts-remote/dist",
                "index": "apps/react-ts-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/react-ts-remote/src/main.ts",
                "polyfills": "apps/react-ts-remote/src/polyfills.ts",
                "tsConfig": "apps/react-ts-remote/tsconfig.app.json",
                "assets": [
                  "apps/react-ts-remote/src/favicon.ico",
                  "apps/react-ts-remote/src/assets"
                ],
                "styles": [
                  "apps/react-ts-remote/src/styles.css"
                ],
                "scripts": [],
                "webpackConfig": "apps/react-ts-remote/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/react-ts-remote/src/environments/environment.ts",
                      "with": "apps/react-ts-remote/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve:webpack": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "react_ts_remote:build",
                "hmr": true,
                "port": 3005
              },
              "configurations": {
                "development": {
                  "buildTarget": "react_ts_remote:build:development"
                },
                "production": {
                  "buildTarget": "react_ts_remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/react-ts-remote/src",
          "implicitDependencies": []
        }
      },
      "dts-plugin": {
        "name": "dts-plugin",
        "type": "lib",
        "data": {
          "root": "packages/dts-plugin",
          "name": "dts-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/dts-plugin",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "require": "./dist/index.js"
                },
                "./core": {
                  "import": "./dist/core.js",
                  "require": "./dist/core.js"
                },
                "./dynamic-remote-type-hints-plugin": {
                  "types": "./dist/dynamic-remote-type-hints-plugin.d.ts",
                  "import": "./dist/esm/dynamic-remote-type-hints-plugin.js",
                  "require": "./dist/dynamic-remote-type-hints-plugin.js"
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/packages/dts-plugin/dist"
              ],
              "options": {
                "parallel": false,
                "cwd": "packages/dts-plugin",
                "commands": [
                  "tsup --config ./tsup.config.ts",
                  "sleep 1",
                  "cp package.json ./dist",
                  "cp *.md ./dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "outputs": [
                "{workspaceRoot}/coverage/packages/dts-plugin"
              ],
              "options": {
                "parallel": false,
                "cwd": "packages/dts-plugin",
                "commands": [
                  "rimraf dist-test",
                  "nx run dts-plugin:test-impl"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "test-impl": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/packages/dts-plugin"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/dts-plugin/**/*.ts",
                  "packages/dts-plugin/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "build-debug": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "FEDERATION_DEBUG=true nx run dts-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run dts-plugin:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run dts-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/dts-plugin/src",
          "implicitDependencies": []
        }
      },
      "reactStorybook": {
        "name": "reactStorybook",
        "type": "app",
        "data": {
          "root": "apps/reactStorybook",
          "name": "reactStorybook",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "react-storybook",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/reactStorybook/dist",
                "index": "apps/reactStorybook/src/index.html",
                "baseHref": "/",
                "main": "apps/reactStorybook/src/main.ts",
                "tsConfig": "apps/reactStorybook/tsconfig.app.json",
                "assets": [
                  "apps/reactStorybook/src/favicon.ico",
                  "apps/reactStorybook/src/assets"
                ],
                "styles": [
                  "apps/reactStorybook/src/styles.scss"
                ],
                "scripts": [],
                "webpackConfig": "apps/reactStorybook/webpack.config.js"
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/reactStorybook/src/environments/environment.ts",
                      "with": "apps/reactStorybook/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false,
                  "webpackConfig": "apps/reactStorybook/webpack.config.prod.js"
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/react:module-federation-dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "reactStorybook:build",
                "hmr": true,
                "port": 4200
              },
              "configurations": {
                "development": {
                  "buildTarget": "reactStorybook:build:development"
                },
                "production": {
                  "buildTarget": "reactStorybook:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/reactStorybook/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/reactStorybook/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "reactStorybook:build",
                "port": 4200
              },
              "configurations": {
                "development": {
                  "buildTarget": "reactStorybook:build:development"
                },
                "production": {
                  "buildTarget": "reactStorybook:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "uiFramework": "@storybook/react",
                "port": 4400,
                "configDir": "apps/reactStorybook/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "build-storybook": {
              "executor": "@nx/storybook:build",
              "outputs": [
                "{options.outputDir}"
              ],
              "options": {
                "uiFramework": "@storybook/react",
                "outputDir": "storybook/reactStorybook/dist",
                "configDir": "apps/reactStorybook/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/reactStorybook/src",
          "implicitDependencies": []
        }
      },
      "typescript": {
        "name": "typescript",
        "type": "lib",
        "data": {
          "root": "packages/typescript",
          "name": "typescript",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:module-federation",
            "npm:typescript",
            "npm:remote types",
            "npm:federated types",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Webpack plugin to stream typescript for module federation apps/components",
            "js": {
              "packageName": "@module-federation/typescript",
              "packageExports": {
                ".": {
                  "types": "./dist/src/index.d.ts",
                  "require": "./dist/src/index.js"
                }
              },
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{workspaceRoot}/packages/typescript/dist"
              ],
              "options": {
                "outputPath": "packages/typescript/dist",
                "main": "packages/typescript/src/index.ts",
                "tsConfig": "packages/typescript/tsconfig.lib.json",
                "assets": [
                  "packages/typescript/*.md"
                ],
                "skipTypeCheck": true
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/typescript/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/typescript/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run typescript:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run typescript:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/typescript/src",
          "implicitDependencies": []
        }
      },
      "3002-checkout": {
        "name": "3002-checkout",
        "type": "app",
        "data": {
          "root": "apps/3002-checkout",
          "name": "3002-checkout",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start"
              ]
            },
            "js": {
              "packageName": "@module-federation/3002-checkout",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/3002-checkout"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/3002-checkout"
                },
                "production": {}
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "3002-checkout:build",
                "dev": true,
                "port": 3002
              },
              "configurations": {
                "development": {
                  "buildTarget": "3002-checkout:build:development",
                  "dev": true,
                  "port": 3002
                },
                "production": {
                  "buildTarget": "3002-checkout:build:production",
                  "dev": false,
                  "port": 3002
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "continuous": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "3002-checkout:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/3002-checkout/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/3002-checkout/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:3002"
              },
              "defaultConfiguration": "development",
              "configurations": {
                "development": {
                  "devServerTarget": "3002-checkout:serve:development"
                },
                "production": {
                  "devServerTarget": "3002-checkout:serve:production"
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "npx kill-port 3000 3001 3002",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "NX_TUI=false nx run-many --target=serve --projects=3000-home,3001-shop --configuration=development & wait-on tcp:3000 tcp:3001",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "wait-on tcp:3000 tcp:3001 && nx run 3002-checkout:e2e:development",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {
                "production": {
                  "parallel": true,
                  "commands": [
                    {
                      "command": "npx kill-port 3000 3001 3002",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "nx run-many --target=build --projects=3000-home,3001-shop --configuration=production --parallel=9 && nx run-many --target=serve --projects=3000-home,3001-shop --configuration=production --parallel=9 & wait-on tcp:3000 tcp:3001",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "nx build 3002-checkout --configuration=production && wait-on tcp:3000 tcp:3001 && nx run 3002-checkout:e2e:production",
                      "forwardAllArgs": true
                    }
                  ]
                }
              },
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/3002-checkout",
          "implicitDependencies": []
        }
      },
      "nextjs-mf": {
        "name": "nextjs-mf",
        "type": "lib",
        "data": {
          "root": "packages/nextjs-mf",
          "name": "nextjs-mf",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "postinstall"
              ]
            },
            "description": "Module Federation helper for NextJS",
            "js": {
              "packageName": "@module-federation/nextjs-mf",
              "packageExports": {
                ".": "./dist/src/index.js",
                "./utils": "./dist/utils/index.js",
                "./*": "./*"
              },
              "packageMain": "dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "postinstall": {
              "executor": "nx:run-script",
              "options": {
                "script": "postinstall"
              },
              "metadata": {
                "scriptContent": "echo \"Deprecation Notice: We intend to deprecate 'nextjs-mf'. Please see https://github.com/module-federation/core/issues/3153 for more details.\"",
                "runCommand": "pnpm run postinstall"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build-tsc": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/nextjs-mf/dist",
                "main": "packages/nextjs-mf/src/index.ts",
                "tsConfig": "packages/nextjs-mf/tsconfig.lib.json",
                "assets": [
                  "packages/nextjs-mf/*.md"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run nextjs-mf:build-tsc",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run nextjs-mf:rename-dist-files",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "rename-dist-files": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  {
                    "command": "mv packages/nextjs-mf/dist/src/federation-noop.js packages/nextjs-mf/dist/src/federation-noop.cjs"
                  },
                  {
                    "command": "mv packages/nextjs-mf/dist/src/plugins/container/runtimePlugin.js packages/nextjs-mf/dist/src/plugins/container/runtimePlugin.cjs"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/nextjs-mf/**/*.js",
                  "packages/nextjs-mf/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/packages/nextjs-mf"
              ],
              "options": {
                "jestConfig": "packages/nextjs-mf/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run nextjs-mf:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run nextjs-mf:build",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "rm ./packages/nextjs-mf/dist/package.json",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/nextjs-mf/src",
          "implicitDependencies": []
        }
      },
      "node-host-e2e": {
        "name": "node-host-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/node-host-e2e",
          "name": "node-host-e2e",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "node-host-e2e",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{e2eProjectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-host-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "sleep 10 && nx run node-host-e2e:e2e && lsof -ti tcp:3022,3023,3333,3026,3027 | xargs kill",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-host-e2e/**/*.{js,ts}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": [
            "node-host"
          ]
        }
      },
      "reactRemoteUI": {
        "name": "reactRemoteUI",
        "type": "app",
        "data": {
          "root": "apps/reactRemoteUI",
          "name": "reactRemoteUI",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "react-remote-ui",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/reactRemoteUI/dist",
                "index": "apps/reactRemoteUI/src/index.html",
                "baseHref": "/",
                "main": "apps/reactRemoteUI/src/main.ts",
                "tsConfig": "apps/reactRemoteUI/tsconfig.app.json",
                "assets": [
                  "apps/reactRemoteUI/src/favicon.ico"
                ],
                "styles": [
                  "apps/reactRemoteUI/src/styles.scss"
                ],
                "scripts": [],
                "webpackConfig": "apps/reactRemoteUI/webpack.config.js"
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/reactRemoteUI/src/environments/environment.ts",
                      "with": "apps/reactRemoteUI/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false,
                  "webpackConfig": "apps/reactRemoteUI/webpack.config.prod.js"
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/react:module-federation-dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "reactRemoteUI:build",
                "hmr": true,
                "port": 4201
              },
              "configurations": {
                "development": {
                  "buildTarget": "reactRemoteUI:build:development"
                },
                "production": {
                  "buildTarget": "reactRemoteUI:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/reactRemoteUI/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/reactRemoteUI/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "reactRemoteUI:build",
                "port": 4201
              },
              "configurations": {
                "development": {
                  "buildTarget": "reactRemoteUI:build:development"
                },
                "production": {
                  "buildTarget": "reactRemoteUI:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/reactRemoteUI/src",
          "implicitDependencies": []
        }
      },
      "react_ts_host": {
        "name": "react_ts_host",
        "type": "app",
        "data": {
          "root": "apps/react-ts-host",
          "name": "react_ts_host",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "react-ts-host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/react-ts-host/dist",
                "index": "apps/react-ts-host/src/index.html",
                "baseHref": "/",
                "main": "apps/react-ts-host/src/main.ts",
                "polyfills": "apps/react-ts-host/src/polyfills.ts",
                "tsConfig": "apps/react-ts-host/tsconfig.app.json",
                "assets": [
                  "apps/react-ts-host/src/favicon.ico",
                  "apps/react-ts-host/src/assets"
                ],
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/react-ts-host/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/react-ts-host/src/environments/environment.ts",
                      "with": "apps/react-ts-host/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "react_ts_host:build",
                "hmr": true,
                "port": 3003,
                "devRemotes": [
                  "react_ts_remote"
                ]
              },
              "configurations": {
                "development": {
                  "buildTarget": "react_ts_host:build:development"
                },
                "production": {
                  "buildTarget": "react_ts_host:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/react-ts-host/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "react_ts_host:build",
                "port": 3003
              },
              "configurations": {
                "development": {
                  "buildTarget": "react_ts_host:build:development"
                },
                "production": {
                  "buildTarget": "react_ts_host:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/react-ts-host/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "utils": {
        "name": "utils",
        "type": "lib",
        "data": {
          "root": "packages/utilities",
          "name": "utils",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/utilities",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.js",
                  "require": "./dist/index.cjs.js"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/utilities/dist",
                "main": "packages/utilities/src/index.ts",
                "tsConfig": "packages/utilities/tsconfig.lib.json",
                "assets": [],
                "generateExportsField": true,
                "project": "packages/utilities/package.json",
                "additionalEntryPoints": [
                  "packages/utilities/src/types/types.ts"
                ],
                "external": [
                  "@module-federation/*"
                ],
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/utilities/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/packages/utilities"
              ],
              "options": {
                "jestConfig": "packages/utilities/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run utils:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run utils:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/utilities/src",
          "pre": [
            {
              "executor": "@nx/js:tsc",
              "options": {
                "commands": [
                  {
                    "command": "rm -f dist"
                  }
                ]
              }
            }
          ],
          "implicitDependencies": []
        }
      },
      "enhanced": {
        "name": "enhanced",
        "type": "lib",
        "data": {
          "root": "packages/enhanced",
          "name": "enhanced",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/enhanced",
              "packageExports": {
                ".": {
                  "types": "./dist/src/index.d.ts",
                  "import": "./dist/src/index.js",
                  "require": "./dist/src/index.js"
                },
                "./webpack": {
                  "types": "./dist/src/webpack.d.ts",
                  "import": "./dist/src/webpack.js",
                  "require": "./dist/src/webpack.js"
                },
                "./rspack": {
                  "types": "./dist/src/rspack.d.ts",
                  "import": "./dist/src/rspack.js",
                  "require": "./dist/src/rspack.js"
                },
                "./runtime": {
                  "types": "./dist/src/runtime.d.ts",
                  "import": "./dist/src/runtime.js",
                  "require": "./dist/src/runtime.js"
                },
                "./prefetch": {
                  "types": "./dist/src/prefetch.d.ts",
                  "import": "./dist/src/prefetch.js",
                  "require": "./dist/src/prefetch.js"
                }
              },
              "packageMain": "./dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "generate:schema": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node src/scripts/compile-schema.js",
                "cwd": "packages/enhanced"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{workspaceRoot}/packages/enhanced/dist"
              ],
              "options": {
                "outputPath": "packages/enhanced/dist",
                "main": "packages/enhanced/src/index.ts",
                "tsConfig": "packages/enhanced/tsconfig.lib.json",
                "assets": [
                  "packages/enhanced/*.md",
                  {
                    "glob": "src/**/*.d.ts",
                    "input": "packages/enhanced",
                    "ignore": [],
                    "output": ""
                  }
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/enhanced/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "node --expose-gc --max-old-space-size=4096 --experimental-vm-modules --trace-deprecation ./node_modules/jest-cli/bin/jest --logHeapUsage --config packages/enhanced/jest.config.ts --silent",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "test:experiments": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "node --expose-gc --max-old-space-size=4096 --experimental-vm-modules --trace-deprecation ./node_modules/jest-cli/bin/jest --logHeapUsage --config packages/enhanced/jest.embed.ts --silent",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run enhanced:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run enhanced:test:experiments",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run enhanced:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/enhanced/src",
          "implicitDependencies": []
        }
      },
      "managers": {
        "name": "managers",
        "type": "lib",
        "data": {
          "root": "packages/managers",
          "name": "managers",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Provide managers for helping handle mf data .",
            "js": {
              "packageName": "@module-federation/managers",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.js",
                  "require": "./dist/index.cjs.js"
                }
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/managers/dist",
                "main": "packages/managers/src/index.ts",
                "tsConfig": "packages/managers/tsconfig.lib.json",
                "assets": [],
                "external": [
                  "@module-federation/*"
                ],
                "project": "packages/managers/package.json",
                "rollupConfig": "packages/managers/rollup.config.js",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/managers/**/*.ts",
                  "packages/managers/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/managers/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run managers:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run managers:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/managers/src",
          "implicitDependencies": []
        }
      },
      "manifest": {
        "name": "manifest",
        "type": "lib",
        "data": {
          "root": "packages/manifest",
          "name": "manifest",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:Webpack",
            "npm:Rspack",
            "npm:Manifest",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Provide manifest/stats for webpack/rspack MF project .",
            "js": {
              "packageName": "@module-federation/manifest",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.js",
                  "require": "./dist/index.cjs.js"
                }
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/manifest/dist",
                "main": "packages/manifest/src/index.ts",
                "tsConfig": "packages/manifest/tsconfig.lib.json",
                "assets": [],
                "external": [
                  "@module-federation/*"
                ],
                "project": "packages/manifest/package.json",
                "rollupConfig": "packages/manifest/rollup.config.js",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/manifest/**/*.ts",
                  "packages/manifest/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/manifest/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run manifest:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run manifest:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/manifest/src",
          "implicitDependencies": []
        }
      },
      "modern-js-plugin": {
        "name": "modern-js-plugin",
        "type": "lib",
        "data": {
          "root": "packages/modernjs",
          "name": "modern-js-plugin",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/modern-js",
              "packageExports": {
                ".": {
                  "types": "./dist/types/cli/index.d.ts",
                  "import": "./dist/esm/cli/index.js",
                  "require": "./dist/cjs/cli/index.js"
                },
                "./runtime": {
                  "types": "./dist/types/runtime/index.d.ts",
                  "default": "./dist/esm/runtime/index.js"
                },
                "./react": {
                  "types": "./dist/types/react/index.d.ts",
                  "default": "./dist/esm/react/index.js"
                },
                "./ssr-dev-plugin": {
                  "types": "./dist/types/ssr-runtime/devPlugin.d.ts",
                  "default": "./dist/esm/ssr-runtime/devPlugin.js"
                },
                "./ssr-inject-data-fetch-function-plugin": {
                  "types": "./dist/types/ssr-runtime/injectDataFetchFunctionPlugin.d.ts",
                  "default": "./dist/esm/ssr-runtime/injectDataFetchFunctionPlugin.js"
                },
                "./config-plugin": {
                  "types": "./dist/types/cli/configPlugin.d.ts",
                  "import": "./dist/esm/cli/configPlugin.js",
                  "require": "./dist/cjs/cli/configPlugin.js"
                },
                "./ssr-plugin": {
                  "types": "./dist/types/cli/ssrPlugin.d.ts",
                  "import": "./dist/esm/cli/ssrPlugin.js",
                  "require": "./dist/cjs/cli/ssrPlugin.js"
                },
                "./shared-strategy": {
                  "types": "./dist/types/cli/mfRuntimePlugins/shared-strategy.d.ts",
                  "import": "./dist/esm/cli/mfRuntimePlugins/shared-strategy.js",
                  "require": "./dist/esm/cli/mfRuntimePlugins/shared-strategy.js"
                },
                "./resolve-entry-ipv4": {
                  "types": "./dist/types/cli/mfRuntimePlugins/resolve-entry-ipv4.d.ts",
                  "import": "./dist/esm/cli/mfRuntimePlugins/resolve-entry-ipv4.js",
                  "require": "./dist/esm/cli/mfRuntimePlugins/resolve-entry-ipv4.js"
                },
                "./inject-node-fetch": {
                  "types": "./dist/types/cli/mfRuntimePlugins/inject-node-fetch.d.ts",
                  "import": "./dist/esm/cli/mfRuntimePlugins/inject-node-fetch.js",
                  "require": "./dist/esm/cli/mfRuntimePlugins/inject-node-fetch.js"
                },
                "./data-fetch-server-plugin": {
                  "types": "./dist/types/cli/server/data-fetch-server-plugin.d.ts",
                  "default": "./dist/cjs/cli/server/data-fetch-server-plugin.js"
                },
                "./server": {
                  "types": "./dist/types/server/index.d.ts",
                  "default": "./dist/cjs/server/index.js"
                }
              },
              "packageMain": "./dist/cjs/cli/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{projectRoot}/packages/modernjs/dist"
              ],
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "parallel": false,
                "commands": [
                  "pnpm i",
                  "cd packages/modernjs; pnpm run build || (sleep 2 && pnpm run build)",
                  "cp packages/modernjs/LICENSE packages/modernjs/dist"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/modernjs/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/packages/modernjs"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run modern-js-plugin:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run modern-js-plugin:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "semantic-release": {
              "executor": "@goestav/nx-semantic-release:semantic-release",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/modernjs/src",
          "implicitDependencies": []
        }
      },
      "rslib-module": {
        "name": "rslib-module",
        "type": "lib",
        "data": {
          "root": "apps/rslib-module",
          "name": "rslib-module",
          "projectType": "library",
          "tags": [
            "npm:private",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build:watch"
              ]
            },
            "js": {
              "packageName": "@examples/mf-react-component",
              "packageExports": {
                ".": {
                  "import": "./dist/esm/index.mjs",
                  "require": "./dist/cjs/index.js",
                  "types": "./dist/cjs/index.d.ts"
                }
              },
              "packageMain": "./dist/cjs/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:watch"
              },
              "metadata": {
                "scriptContent": "rslib build --watch",
                "runCommand": "pnpm run build:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run build --prefix apps/rslib-module"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run serve --prefix apps/rslib-module"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run dev --prefix apps/rslib-module"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true
            },
            "storybook": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npm run storybook --prefix apps/rslib-module"
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rslib-module/src",
          "implicitDependencies": []
        }
      },
      "bundle-size": {
        "name": "bundle-size",
        "type": "app",
        "data": {
          "root": "apps/bundle-size",
          "name": "bundle-size",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "bundle-size",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/bundle-size/dist",
                "index": "apps/bundle-size/src/index.html",
                "baseHref": "/",
                "main": "apps/bundle-size/src/index.ts",
                "tsConfig": "apps/bundle-size/tsconfig.app.json",
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/bundle-size/webpack.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "defaultConfiguration": "production",
              "options": {
                "buildTarget": "bundle-size:build",
                "hmr": true,
                "port": 3005,
                "devRemotes": [
                  "3006-runtime-remote"
                ]
              },
              "configurations": {
                "development": {
                  "buildTarget": "bundle-size:build:development"
                },
                "production": {
                  "buildTarget": "bundle-size:build:production",
                  "hmr": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/bundle-size/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "serve-static": {
              "executor": "@nx/web:file-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "bundle-size:build",
                "port": 3005
              },
              "configurations": {
                "development": {
                  "buildTarget": "bundle-size:build:development"
                },
                "production": {
                  "buildTarget": "bundle-size:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/bundle-size/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://127.0.0.1:3005",
                "browser": "chrome"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :3005 || nx run bundle-size:serve",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 4 && nx run bundle-size:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "getsize": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  {
                    "command": "npx nx build bundle-size --configuration=production && sleep 1 && if [ -f apps/bundle-size/dist/remoteEntry.js ]; then ls -lah apps/bundle-size/dist/remoteEntry.js | awk '{print \"remoteEntry.js size: \" $5}' && gzip -c apps/bundle-size/dist/remoteEntry.js | wc -c | awk '{print \"gzip size: \" $1 \" bytes\"}' && brotli -c apps/bundle-size/dist/remoteEntry.js | wc -c | awk '{print \"brotli size: \" $1 \" bytes\"}'; else echo \"remoteEntry.js not found\"; fi"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/bundle-size/src",
          "implicitDependencies": []
        }
      },
      "esbuild": {
        "name": "esbuild",
        "type": "lib",
        "data": {
          "root": "packages/esbuild",
          "name": "esbuild",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/esbuild",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.js",
                  "require": "./dist/index.cjs.js"
                },
                "./plugin": {
                  "types": "./dist/esbuild.cjs.d.ts",
                  "import": "./dist/plugin.esm.js",
                  "require": "./dist/plugin.cjs.js"
                },
                "./build": {
                  "types": "./dist/build.cjs.d.ts",
                  "import": "./dist/build.esm.js",
                  "require": "./dist/build.cjs.js"
                },
                "./types": {
                  "types": "./dist/types.cjs.d.ts",
                  "import": "./dist/types.esm.js",
                  "require": "./dist/types.cjs.js"
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{workspaceRoot}/packages/esbuild/dist"
              ],
              "options": {
                "parallel": false,
                "outputPath": "packages/esbuild/dist",
                "main": "packages/esbuild/src/index.ts",
                "additionalEntryPoints": [
                  "packages/esbuild/src/adapters/lib/plugin.ts",
                  "packages/esbuild/src/build.ts"
                ],
                "tsConfig": "packages/esbuild/tsconfig.lib.json",
                "assets": [
                  "packages/esbuild/src/resolve"
                ],
                "project": "packages/esbuild/package.json",
                "compiler": "swc",
                "rollupConfig": "packages/esbuild/rollup.config.js",
                "format": [
                  "cjs",
                  "esm"
                ],
                "external": [
                  "@chialab/cjs-to-esm",
                  "enhanced-resolve",
                  "cjs-module-lexer",
                  "es-module-lexer",
                  "@module-federation/*",
                  "pnpapi",
                  "esbuild",
                  "@rollup/*",
                  "rollup-plugin-node-externals",
                  "@chialab/esbuild-plugin-commonjs",
                  "@hyrious/esbuild-plugin-commonjs",
                  "rollup",
                  "../../resolve/esm-resolver.mjs"
                ],
                "generatePackageJson": false
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/esbuild/**/*.ts",
                  "packages/esbuild/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "build-debug": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "FEDERATION_DEBUG=true nx run esbuild:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run esbuild:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run esbuild:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "tesxt": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "vitest run -c packages/esbuild/vitest.config.ts",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/esbuild/src",
          "implicitDependencies": []
        }
      },
      "node-remote": {
        "name": "node-remote",
        "type": "app",
        "data": {
          "root": "apps/node-remote",
          "name": "node-remote",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "node-remote",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "compiler": "babel",
                "outputPath": "apps/node-remote/dist",
                "index": "apps/node-remote/src/index.html",
                "baseHref": "/",
                "main": "apps/node-remote/src/main.tsx",
                "tsConfig": "apps/node-remote/tsconfig.app.json",
                "assets": [],
                "styles": [],
                "scripts": [],
                "webpackConfig": "apps/node-remote/webpack.config.js"
              },
              "configurations": {
                "development": {
                  "extractLicenses": false,
                  "optimization": false,
                  "sourceMap": true,
                  "vendorChunk": true
                },
                "production": {
                  "fileReplacements": [
                    {
                      "replace": "apps/node-remote/src/environments/environment.ts",
                      "with": "apps/node-remote/src/environments/environment.prod.ts"
                    }
                  ],
                  "optimization": true,
                  "outputHashing": "all",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/webpack:dev-server",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "node-remote:build",
                "hmr": false,
                "port": 3022
              },
              "configurations": {
                "development": {
                  "buildTarget": "node-remote:build:development"
                },
                "production": {
                  "buildTarget": "node-remote:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-remote/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-remote/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/node-remote/src",
          "implicitDependencies": []
        }
      },
      "runtime": {
        "name": "runtime",
        "type": "lib",
        "data": {
          "root": "packages/runtime",
          "name": "runtime",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/runtime",
              "packageExports": {
                ".": {
                  "import": {
                    "types": "./dist/index.esm.d.ts",
                    "default": "./dist/index.esm.js"
                  },
                  "require": {
                    "types": "./dist/index.cjs.d.ts",
                    "default": "./dist/index.cjs.cjs"
                  }
                },
                "./helpers": {
                  "import": {
                    "types": "./dist/helpers.esm.d.ts",
                    "default": "./dist/helpers.esm.js"
                  },
                  "require": {
                    "types": "./dist/helpers.cjs.d.ts",
                    "default": "./dist/helpers.cjs.cjs"
                  }
                },
                "./types": {
                  "import": {
                    "types": "./dist/types.esm.d.ts",
                    "default": "./dist/types.esm.js"
                  },
                  "require": {
                    "types": "./dist/types.cjs.d.ts",
                    "default": "./dist/types.cjs.cjs"
                  }
                },
                "./core": {
                  "import": {
                    "types": "./dist/core.esm.d.ts",
                    "default": "./dist/core.esm.js"
                  },
                  "require": {
                    "types": "./dist/core.cjs.d.ts",
                    "default": "./dist/core.cjs.cjs"
                  }
                },
                "./*": "./*"
              },
              "packageMain": "./dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{workspaceRoot}/packages/runtime/dist"
              ],
              "options": {
                "parallel": false,
                "outputPath": "packages/runtime/dist",
                "main": "packages/runtime/src/index.ts",
                "additionalEntryPoints": [
                  "packages/runtime/src/types.ts",
                  "packages/runtime/src/helpers.ts"
                ],
                "tsConfig": "packages/runtime/tsconfig.lib.json",
                "assets": [],
                "external": [
                  "@module-federation/*"
                ],
                "project": "packages/runtime/package.json",
                "compiler": "swc",
                "rollupConfig": "packages/runtime/rollup.config.cjs",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/runtime/**/*.ts",
                  "packages/runtime/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "build-debug": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "FEDERATION_DEBUG=true nx run runtime:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run runtime:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run runtime:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "vitest run -u -c packages/runtime/vitest.config.ts",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/runtime/src",
          "implicitDependencies": []
        }
      },
      "website-new": {
        "name": "website-new",
        "type": "app",
        "data": {
          "root": "apps/website-new",
          "name": "website-new",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "preview"
              ]
            },
            "js": {
              "packageName": "website-new",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "rspress dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "rspress preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run build",
                "cwd": "apps/website-new"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run dev",
                "cwd": "apps/website-new"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/website-new/src",
          "implicitDependencies": []
        }
      },
      "rspack": {
        "name": "rspack",
        "type": "lib",
        "data": {
          "root": "packages/rspack",
          "name": "rspack",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:Rspack",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/rspack",
              "packageExports": {
                ".": {
                  "types": "./dist/index.cjs.d.ts",
                  "import": "./dist/index.esm.mjs",
                  "require": "./dist/index.cjs.js"
                },
                "./plugin": {
                  "types": "./dist/plugin.cjs.d.ts",
                  "import": "./dist/plugin.esm.mjs",
                  "require": "./dist/plugin.cjs.js"
                },
                "./remote-entry-plugin": {
                  "types": "./dist/remote-entry-plugin.cjs.d.ts",
                  "import": "./dist/remote-entry-plugin.esm.mjs",
                  "require": "./dist/remote-entry-plugin.cjs.js"
                }
              },
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/rspack/dist",
                "main": "packages/rspack/src/index.ts",
                "tsConfig": "packages/rspack/tsconfig.lib.json",
                "assets": [],
                "external": [
                  "@module-federation/*",
                  "@rspack/core"
                ],
                "project": "packages/rspack/package.json",
                "rollupConfig": "packages/rspack/rollup.config.js",
                "compiler": "swc",
                "format": [
                  "cjs",
                  "esm"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/rspack/**/*.ts",
                  "packages/rspack/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/rspack/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run rspack:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run rspack:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rspack/src",
          "implicitDependencies": []
        }
      },
      "3000-home": {
        "name": "3000-home",
        "type": "app",
        "data": {
          "root": "apps/3000-home",
          "name": "3000-home",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start"
              ]
            },
            "js": {
              "packageName": "@module-federation/3000-home",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/3000-home"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/3000-home"
                },
                "production": {}
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "3000-home:build",
                "dev": true,
                "port": 3000
              },
              "configurations": {
                "development": {
                  "buildTarget": "3000-home:build:development",
                  "dev": true,
                  "port": 3000
                },
                "production": {
                  "buildTarget": "3000-home:build:production",
                  "dev": false,
                  "port": 3000
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "continuous": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "3000-home:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/3000-home/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/3000-home/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:3000",
                "key": "27e40c91-5ac3-4433-8a87-651d10f51cf6"
              },
              "defaultConfiguration": "development",
              "configurations": {
                "development": {
                  "devServerTarget": "3000-home:serve:development"
                },
                "production": {
                  "devServerTarget": "3000-home:serve:production"
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "npx kill-port 3000 3001 3002",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "NX_TUI=false nx run-many --target=serve --projects=3001-shop,3002-checkout --configuration=development & wait-on tcp:3001 tcp:3002",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "wait-on tcp:3001 tcp:3002 && nx run 3000-home:e2e:development",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {
                "production": {
                  "parallel": true,
                  "commands": [
                    {
                      "command": "npx kill-port 3000 3001 3002",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "nx run-many --target=build --projects=3001-shop,3002-checkout --configuration=production --parallel=9 && nx run-many --target=serve --projects=3001-shop,3002-checkout --configuration=production --parallel=9 & wait-on tcp:3001 tcp:3002",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "nx build 3000-home --configuration=production && wait-on tcp:3001 tcp:3002 && NX_TUI=false nx run 3000-home:e2e:production",
                      "forwardAllArgs": true
                    }
                  ]
                }
              },
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/3000-home",
          "implicitDependencies": []
        }
      },
      "3001-shop": {
        "name": "3001-shop",
        "type": "app",
        "data": {
          "root": "apps/3001-shop",
          "name": "3001-shop",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start"
              ]
            },
            "js": {
              "packageName": "@module-federation/3001-shop",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/3001-shop"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/3001-shop"
                },
                "production": {
                  "cache": false,
                  "outputPath": "apps/3001-shop"
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "3001-shop:build",
                "dev": true,
                "port": 3001
              },
              "configurations": {
                "development": {
                  "buildTarget": "3001-shop:build:development",
                  "dev": true,
                  "port": 3001
                },
                "production": {
                  "buildTarget": "3001-shop:build:production",
                  "dev": false,
                  "port": 3001
                }
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "continuous": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "3001-shop:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/3001-shop/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "npx kill-port 3000 3001 3002",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "NX_TUI=false nx run-many --target=serve --projects=3000-home,3002-checkout --configuration=development & wait-on tcp:3000 tcp:3002 ",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "wait-on tcp:3000 tcp:3002 && nx run 3001-shop:e2e:development",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {
                "production": {
                  "parallel": true,
                  "commands": [
                    {
                      "command": "npx kill-port 3000 3001 3002",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "nx run-many --target=build --projects=3000-home,3002-checkout --configuration=production --parallel=9",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "nx run-many --target=serve --projects=3000-home,3002-checkout --configuration=production --parallel=9 & wait-on tcp:3000 tcp:3002",
                      "forwardAllArgs": false
                    },
                    {
                      "command": "echo 'done'",
                      "forwardAllArgs": true
                    }
                  ]
                }
              },
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/3001-shop/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:3001"
              },
              "defaultConfiguration": "development",
              "configurations": {
                "development": {
                  "devServerTarget": "3001-shop:serve:development"
                },
                "production": {
                  "devServerTarget": "3001-shop:serve:production"
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/3001-shop",
          "implicitDependencies": []
        }
      },
      "node-host": {
        "name": "node-host",
        "type": "app",
        "data": {
          "root": "apps/node-host",
          "name": "node-host",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "node-host",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "target": "node",
                "compiler": "tsc",
                "outputPath": "apps/node-host/dist",
                "main": "apps/node-host/src/main.js",
                "tsConfig": "apps/node-host/tsconfig.app.json",
                "assets": [
                  "apps/node-host/src/assets"
                ],
                "webpackConfig": "apps/node-host/webpack.config.js"
              },
              "configurations": {
                "development": {},
                "production": {}
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "buildTarget": [
                  "node-host:build",
                  "node-remote:build"
                ]
              },
              "configurations": {
                "development": {
                  "buildTarget": "node-host:build:development"
                },
                "production": {
                  "buildTarget": "node-host:build:production"
                }
              },
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/node-host/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/node-host/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/node-host/src",
          "implicitDependencies": []
        }
      },
      "core": {
        "name": "core",
        "type": "lib",
        "data": {
          "root": "packages/core",
          "name": "core",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@module-federation/core",
              "packageMain": "./dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/core/dist",
                "main": "packages/core/src/index.ts",
                "tsConfig": "packages/core/tsconfig.lib.json",
                "assets": [
                  "packages/core/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/core/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/packages/core"
              ],
              "options": {
                "jestConfig": "packages/core/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run core:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run core:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/core/src",
          "implicitDependencies": []
        }
      },
      "modernjs": {
        "name": "modernjs",
        "type": "app",
        "data": {
          "root": "apps/modernjs",
          "name": "modernjs",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "reset",
                "dev",
                "start",
                "new",
                "lint",
                "upgrade"
              ]
            },
            "js": {
              "packageName": "@module-federation/modernjsapp",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "reset": {
              "executor": "nx:run-script",
              "options": {
                "script": "reset"
              },
              "metadata": {
                "scriptContent": "npx rimraf ./**/node_modules",
                "runCommand": "pnpm run reset"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "modern dev",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "modern start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "new": {
              "executor": "nx:run-script",
              "options": {
                "script": "new"
              },
              "metadata": {
                "scriptContent": "modern new",
                "runCommand": "pnpm run new"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "modern lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "upgrade": {
              "executor": "nx:run-script",
              "options": {
                "script": "upgrade"
              },
              "metadata": {
                "scriptContent": "modern upgrade",
                "runCommand": "pnpm run upgrade"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "commands": [
                  {
                    "command": "sleep 2 && cd apps/modernjs; pnpm run build",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "options": {
                "commands": [
                  {
                    "command": "cd apps/modernjs; pnpm run dev",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/cypress:cypress",
              "options": {
                "cypressConfig": "apps/modernjs/cypress.config.ts",
                "testingType": "e2e",
                "baseUrl": "http://localhost:4001",
                "browser": "chrome"
              },
              "configurations": {
                "development": {
                  "runnerUi": true,
                  "browser": "electron",
                  "exit": false,
                  "watch": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production"
              ],
              "cache": true
            },
            "test:e2e": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": true,
                "commands": [
                  {
                    "command": "lsof -i :4001 || nx run modernjs:serve & echo 'done'",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "sleep 20 && nx run modernjs:e2e",
                    "forwardAllArgs": true
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/modernjs/src",
          "implicitDependencies": [
            "typescript"
          ]
        }
      },
      "node": {
        "name": "node",
        "type": "lib",
        "data": {
          "root": "packages/node",
          "name": "node",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Module Federation helper for Node",
            "js": {
              "packageName": "@module-federation/node",
              "packageExports": {
                ".": {
                  "import": "./dist/src/index.js",
                  "require": "./dist/src/index.js"
                },
                "./package.json": "./package.json",
                "./runtimePlugin": "./dist/src/runtimePlugin.js",
                "./record-dynamic-remote-entry-hash-plugin": "./dist/src/recordDynamicRemoteEntryHashPlugin.js",
                "./utils": {
                  "import": "./dist/src/utils/index.js",
                  "require": "./dist/src/utils/index.js"
                },
                "./src/plugins/NodeFederationPlugin.js": "./dist/src/plugins/NodeFederationPlugin.js",
                "./universe-entry-chunk-tracker-plugin": "./dist/src/plugins/UniverseEntryChunkTrackerPlugin.js",
                "./src/*": "./dist/src/*"
              },
              "packageMain": "./dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/node/dist",
                "main": "packages/node/src/index.js",
                "tsConfig": "packages/node/tsconfig.lib.json",
                "assets": [
                  "packages/node/*.md"
                ]
              },
              "dependsOn": [
                {
                  "target": "build",
                  "dependencies": true
                }
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/node/**/*.js",
                  "packages/node/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/packages/node"
              ],
              "options": {
                "jestConfig": "packages/node/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run node:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run node:build",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "rm ./packages/node/dist/package.json",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/node/src",
          "implicitDependencies": []
        }
      },
      "cli": {
        "name": "cli",
        "type": "lib",
        "data": {
          "root": "packages/cli",
          "name": "cli",
          "projectType": "library",
          "tags": [
            "npm:public",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Module Federation CLI",
            "js": {
              "packageName": "@module-federation/cli",
              "packageMain": "./dist/index.cjs.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/cli/dist",
                "main": "packages/cli/src/index.ts",
                "tsConfig": "packages/cli/tsconfig.json",
                "assets": [],
                "project": "packages/cli/package.json",
                "rollupConfig": "packages/cli/rollup.config.js",
                "compiler": "swc",
                "format": [
                  "cjs"
                ],
                "generatePackageJson": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/cli/**/*.ts",
                  "packages/cli/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "echo 'waiting for adding test case...'",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run cli:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run cli:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/cli/src",
          "implicitDependencies": []
        }
      },
      "docs-ui": {
        "name": "docs-ui",
        "type": "app",
        "data": {
          "root": "apps/docs-ui",
          "name": "docs-ui",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/docs-ui/src",
          "tags": [],
          "targets": {
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "apps/docs-ui/dist",
                "compiler": "babel",
                "main": "apps/docs-ui/src/main.ts",
                "tsConfig": "apps/docs-ui/tsconfig.app.json",
                "webpackConfig": "apps/docs-ui/webpack.config.js",
                "assets": [
                  "apps/docs-ui/src/favicon.ico",
                  "apps/docs-ui/src/assets"
                ],
                "index": "apps/docs-ui/src/index.html",
                "baseHref": "/",
                "styles": [
                  "apps/docs-ui/src/styles.scss"
                ],
                "scripts": [],
                "postcssConfig": "apps/docs-ui/postcss.config.js",
                "babelUpwardRootMode": true
              },
              "configurations": {
                "production": {
                  "optimization": true,
                  "outputHashing": "none",
                  "sourceMap": false,
                  "namedChunks": false,
                  "extractLicenses": false,
                  "vendorChunk": false,
                  "fileReplacements": [
                    {
                      "replace": "apps/docs-ui/src/environments/environment.ts",
                      "with": "apps/docs-ui/src/environments/environment.prod.ts"
                    }
                  ]
                }
              },
              "parallelism": true,
              "inputs": [
                "production",
                "^production",
                {
                  "env": "NX_MF_DEV_SERVER_STATIC_REMOTES"
                },
                {
                  "env": "NX_MF_DEV_REMOTES"
                }
              ],
              "dependsOn": [
                "^build"
              ]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/docs-ui/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            }
          },
          "implicitDependencies": []
        }
      },
      "federation-demo1": {
        "name": "federation-demo1",
        "type": "app",
        "data": {
          "root": "apps/esbuild",
          "name": "federation-demo1",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build:remote",
                "build:host",
                "build",
                "watch",
                "start:remote",
                "start:host",
                "start"
              ]
            },
            "description": "",
            "js": {
              "packageName": "federation-demo1",
              "packageMain": "index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build:remote": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:remote"
              },
              "metadata": {
                "scriptContent": "node build/build-mfe1.js",
                "runCommand": "pnpm run build:remote"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:host": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:host"
              },
              "metadata": {
                "scriptContent": "node build/build-shell.js",
                "runCommand": "pnpm run build:host"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "rm -rf ./node_modules/.cache && npm run build:remote && npm run build:host",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "watch"
              },
              "metadata": {
                "scriptContent": "concurrently \"npm run build:remote -- --watch\" \"npm run build:host -- --watch\"",
                "runCommand": "pnpm run watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "start:remote": {
              "executor": "nx:run-script",
              "options": {
                "script": "start:remote"
              },
              "metadata": {
                "scriptContent": "live-server dist/mfe1 --port=3001 --cors",
                "runCommand": "pnpm run start:remote"
              },
              "configurations": {},
              "parallelism": true
            },
            "start:host": {
              "executor": "nx:run-script",
              "options": {
                "script": "start:host"
              },
              "metadata": {
                "scriptContent": "live-server dist/shell --port=3000",
                "runCommand": "pnpm run start:host"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "pnpm run build && concurrently \"npm run start:remote\" \"npm run start:host\"",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "sdk": {
        "name": "sdk",
        "type": "lib",
        "data": {
          "root": "packages/sdk",
          "name": "sdk",
          "projectType": "library",
          "tags": [
            "npm:public",
            "npm:Module Federation",
            "npm:sdk",
            "type:pkg"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A sdk for support module federation",
            "js": {
              "packageName": "@module-federation/sdk",
              "packageExports": {
                ".": {
                  "import": {
                    "types": "./dist/index.esm.d.ts",
                    "default": "./dist/index.esm.js"
                  },
                  "require": {
                    "types": "./dist/index.cjs.d.ts",
                    "default": "./dist/index.cjs.cjs"
                  }
                },
                "./normalize-webpack-path": {
                  "import": {
                    "types": "./dist/normalize-webpack-path.esm.d.ts",
                    "default": "./dist/normalize-webpack-path.esm.js"
                  },
                  "require": {
                    "types": "./dist/normalize-webpack-path.cjs.d.ts",
                    "default": "./dist/normalize-webpack-path.cjs.cjs"
                  }
                }
              },
              "packageMain": "./dist/index.cjs.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/sdk/dist",
                "main": "packages/sdk/src/index.ts",
                "tsConfig": "packages/sdk/tsconfig.lib.json",
                "assets": [],
                "project": "packages/sdk/package.json",
                "additionalEntryPoints": [
                  "packages/sdk/src/normalize-webpack-path.ts"
                ],
                "rollupConfig": "packages/sdk/rollup.config.cjs",
                "compiler": "swc",
                "generatePackageJson": false,
                "format": [
                  "cjs",
                  "esm"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "packages/sdk/**/*.ts",
                  "packages/sdk/package.json"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "packages/sdk/jest.config.cjs",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "pre-release": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  {
                    "command": "nx run sdk:test",
                    "forwardAllArgs": false
                  },
                  {
                    "command": "nx run sdk:build",
                    "forwardAllArgs": false
                  }
                ]
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/sdk/src",
          "implicitDependencies": []
        }
      },
      "website": {
        "name": "website",
        "type": "app",
        "data": {
          "root": "apps/website",
          "name": "website",
          "projectType": "application",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "website",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "qwik-nx:build",
              "options": {
                "runSequence": [
                  "website:build.client",
                  "website:build.ssr"
                ],
                "outputPath": "dist/apps/website",
                "skipTypeCheck": false
              },
              "configurations": {
                "preview": {},
                "netlify": {}
              },
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "build.client": {
              "executor": "@nx/vite:build",
              "options": {
                "outputPath": "dist/apps/website",
                "configFile": "apps/website/vite.config.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "build.ssr": {
              "executor": "@nx/vite:build",
              "defaultConfiguration": "preview",
              "options": {
                "outputPath": "dist/apps/website"
              },
              "configurations": {
                "preview": {
                  "ssr": "src/entry.preview.tsx",
                  "mode": "production"
                },
                "netlify": {
                  "configFile": "apps/website/adapters/netlify-edge/vite.config.ts"
                }
              },
              "parallelism": true
            },
            "preview": {
              "executor": "@nx/vite:preview-server",
              "options": {
                "buildTarget": "website:build",
                "port": 4300
              },
              "dependsOn": [
                "build"
              ],
              "configurations": {},
              "parallelism": true,
              "continuous": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/apps/website"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "../../coverage/apps/website"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/vite:dev-server",
              "options": {
                "buildTarget": "website:build.client",
                "mode": "ssr",
                "port": 4200
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            },
            "serve.debug": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node --inspect-brk ../../node_modules/vite/bin/vite.js --mode ssr --force",
                "cwd": "apps/website"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/website/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "cache": true
            },
            "extract-i18n": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "qwik-speak-extract --sourceFilesPaths=./apps/website/src --assetsPath=./apps/website/src/i18n --supportedLangs=en-US,pt-BR,zh-CN"
                ]
              },
              "configurations": {},
              "dependsOn": [],
              "parallelism": true
            },
            "build.netlify": {
              "executor": "nx:run-commands",
              "options": {
                "parallel": false,
                "commands": [
                  "nx run website:build:netlify",
                  "npx move-cli dist/apps/docs dist/apps/website/client/docs --mkdirp",
                  "npx move-cli dist/apps/website/.netlify/edge-functions .netlify/edge-functions --mkdirp",
                  "npx move-cli apps/website/manifest.override.json .netlify/edge-functions/manifest.json"
                ]
              },
              "configurations": {},
              "dependsOn": [
                "docs:build-docs"
              ],
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/website/src",
          "implicitDependencies": [
            "docs"
          ]
        }
      },
      "docs": {
        "name": "docs",
        "type": "app",
        "data": {
          "root": "apps/docs",
          "name": "docs",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/docs/src",
          "tags": [],
          "implicitDependencies": [
            "docs-ui"
          ],
          "targets": {
            "serve": {
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "docs:build-docs"
              },
              "configurations": {
                "local": {
                  "buildTarget": "docs:build-docs:local"
                }
              },
              "dependsOn": [
                "^build"
              ],
              "parallelism": true,
              "continuous": true
            },
            "build-docs": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "npx antora --fetch apps/docs/configs/docs-en.yml",
                  "npx antora --fetch apps/docs/configs/docs-es.yml",
                  "npx antora --fetch apps/docs/configs/docs-zh.yml"
                ]
              },
              "configurations": {
                "local": {
                  "commands": [
                    "npx antora --fetch apps/docs/configs/docs-en.local.yml",
                    "npx antora --fetch apps/docs/configs/docs-es.local.yml",
                    "npx antora --fetch apps/docs/configs/docs-zh.local.yml"
                  ]
                }
              },
              "dependsOn": [
                "^build",
                "prepare-antora-configs"
              ],
              "outputs": [
                "{workspaceRoot}/dist/apps/docs"
              ],
              "parallelism": true
            }
          }
        }
      },
      "@module-federation/webpack-type": {
        "name": "@module-federation/webpack-type",
        "type": "lib",
        "data": {
          "root": "webpack",
          "name": "@module-federation/webpack-type",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Webpack type for Module federation",
            "js": {
              "packageName": "@module-federation/webpack-type",
              "packageExports": {
                ".": "./types.d.ts"
              },
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "inject-external-runtime-core-plugin": [
        {
          "source": "inject-external-runtime-core-plugin",
          "target": "runtime-tools",
          "type": "static"
        }
      ],
      "3011-rspack-manifest-provider": [
        {
          "source": "3011-rspack-manifest-provider",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "3012-rspack-js-entry-provider": [
        {
          "source": "3012-rspack-js-entry-provider",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "modernjs-ssr-data-fetch-provider-csr": [
        {
          "source": "modernjs-ssr-data-fetch-provider-csr",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-data-fetch-provider-csr",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "modernjs-ssr-data-fetch-provider-csr",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "modernjs-ssr-data-fetch-provider-csr",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "modernjs-ssr-data-fetch-provider-csr",
          "target": "storybook-addon",
          "type": "static"
        }
      ],
      "modernjs-ssr-dynamic-remote-new-version": [
        {
          "source": "modernjs-ssr-dynamic-remote-new-version",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-dynamic-remote-new-version",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "bridge-react-webpack-plugin": [
        {
          "source": "bridge-react-webpack-plugin",
          "target": "sdk",
          "type": "static"
        }
      ],
      "modernjs-ssr-data-fetch-provider": [
        {
          "source": "modernjs-ssr-data-fetch-provider",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-data-fetch-provider",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "next-app-router-4000": [
        {
          "source": "next-app-router-4000",
          "target": "nextjs-mf",
          "type": "static"
        }
      ],
      "next-app-router-4001": [
        {
          "source": "next-app-router-4001",
          "target": "nextjs-mf",
          "type": "static"
        }
      ],
      "3009-webpack-provider": [
        {
          "source": "3009-webpack-provider",
          "target": "core",
          "type": "static"
        },
        {
          "source": "3009-webpack-provider",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "3009-webpack-provider",
          "target": "typescript",
          "type": "static"
        }
      ],
      "3010-rspack-provider": [
        {
          "source": "3010-rspack-provider",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "modernjs-ssr-dynamic-nested-remote": [
        {
          "source": "modernjs-ssr-dynamic-nested-remote",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-dynamic-nested-remote",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "router-host-vue3-2100": [
        {
          "source": "router-host-vue3-2100",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "router-host-vue3-2100",
          "target": "vue3-bridge",
          "type": "static"
        },
        {
          "source": "router-host-vue3-2100",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "3006-runtime-remote": [
        {
          "source": "3006-runtime-remote",
          "target": "core",
          "type": "static"
        },
        {
          "source": "3006-runtime-remote",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "3006-runtime-remote",
          "target": "typescript",
          "type": "static"
        }
      ],
      "3007-runtime-remote": [
        {
          "source": "3007-runtime-remote",
          "target": "core",
          "type": "static"
        },
        {
          "source": "3007-runtime-remote",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "3007-runtime-remote",
          "target": "typescript",
          "type": "static"
        }
      ],
      "3008-runtime-remote": [
        {
          "source": "3008-runtime-remote",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "modernjs-ssr-data-fetch-host": [
        {
          "source": "modernjs-ssr-data-fetch-host",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-data-fetch-host",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "native-federation-typescript": [],
      "modernjs-ssr-remote-new-version": [
        {
          "source": "modernjs-ssr-remote-new-version",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-remote-new-version",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "node-dynamic-remote-new-version": [
        {
          "source": "node-dynamic-remote-new-version",
          "target": "node",
          "type": "static"
        }
      ],
      "router-host-v5-2200": [
        {
          "source": "router-host-v5-2200",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "router-host-v5-2200",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "router-host-v5-2200",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "router-remote1-2001": [
        {
          "source": "router-remote1-2001",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "router-remote1-2001",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "router-remote2-2002": [
        {
          "source": "router-remote2-2002",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "router-remote2-2002",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "router-remote3-2003": [
        {
          "source": "router-remote3-2003",
          "target": "vue3-bridge",
          "type": "static"
        },
        {
          "source": "router-remote3-2003",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "router-remote4-2004": [
        {
          "source": "router-remote4-2004",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "router-remote4-2004",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "router-remote5-2005": [
        {
          "source": "router-remote5-2005",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "router-remote5-2005",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "3005-runtime-host": [
        {
          "source": "3005-runtime-host",
          "target": "core",
          "type": "static"
        },
        {
          "source": "3005-runtime-host",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "3005-runtime-host",
          "target": "typescript",
          "type": "static"
        },
        {
          "source": "3005-runtime-host",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "3005-runtime-host",
          "target": "dts-plugin",
          "type": "static"
        }
      ],
      "third-party-dts-extractor": [],
      "create-module-federation": [
        {
          "source": "create-module-federation",
          "target": "modern-js-plugin",
          "type": "static"
        },
        {
          "source": "create-module-federation",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "router-host-2000": [
        {
          "source": "router-host-2000",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "router-host-2000",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "router-host-2000",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "router-host-2000",
          "target": "retry-plugin",
          "type": "static"
        }
      ],
      "modernjs-ssr-dynamic-remote": [
        {
          "source": "modernjs-ssr-dynamic-remote",
          "target": "modern-js-plugin",
          "type": "static"
        },
        {
          "source": "modernjs-ssr-dynamic-remote",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "modernjs-ssr-dynamic-remote",
          "target": "rsbuild-plugin",
          "type": "static"
        }
      ],
      "native-federation-tests": [],
      "webpack-bundler-runtime": [
        {
          "source": "webpack-bundler-runtime",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "webpack-bundler-runtime",
          "target": "sdk",
          "type": "static"
        }
      ],
      "manifest-webpack-host": [
        {
          "source": "manifest-webpack-host",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "manifest-webpack-host",
          "target": "typescript",
          "type": "static"
        },
        {
          "source": "manifest-webpack-host",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "modernjs-ssr-nested-remote": [
        {
          "source": "modernjs-ssr-nested-remote",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-nested-remote",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "assemble-release-plan": [],
      "bridge-shared": [],
      "bridge-react": [
        {
          "source": "bridge-react",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "bridge-react",
          "target": "runtime-core",
          "type": "static"
        },
        {
          "source": "bridge-react",
          "target": "bridge-shared",
          "type": "static"
        },
        {
          "source": "bridge-react",
          "target": "sdk",
          "type": "static"
        }
      ],
      "react_ts_nested_remote": [
        {
          "source": "react_ts_nested_remote",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "vue3-bridge": [
        {
          "source": "vue3-bridge",
          "target": "bridge-shared",
          "type": "static"
        },
        {
          "source": "vue3-bridge",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "vue3-bridge",
          "target": "runtime",
          "type": "static"
        }
      ],
      "chrome-devtools": [
        {
          "source": "chrome-devtools",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "chrome-devtools",
          "target": "sdk",
          "type": "static"
        }
      ],
      "modernjs-ssr-remote": [
        {
          "source": "modernjs-ssr-remote",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-remote",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "node-dynamic-remote": [
        {
          "source": "node-dynamic-remote",
          "target": "node",
          "type": "static"
        }
      ],
      "storybook-addon": [
        {
          "source": "storybook-addon",
          "target": "utils",
          "type": "implicit"
        },
        {
          "source": "storybook-addon",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "storybook-addon",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "storybook-addon",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "rsbuild-plugin": [
        {
          "source": "rsbuild-plugin",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "rsbuild-plugin",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "rsbuild-plugin",
          "target": "node",
          "type": "static"
        }
      ],
      "rspress-plugin": [
        {
          "source": "rspress-plugin",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "rspress-plugin",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "rspress-plugin",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "rspress-plugin",
          "target": "error-codes",
          "type": "static"
        }
      ],
      "data-prefetch": [
        {
          "source": "data-prefetch",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "data-prefetch",
          "target": "sdk",
          "type": "static"
        }
      ],
      "modernjs-ssr-host": [
        {
          "source": "modernjs-ssr-host",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs-ssr-host",
          "target": "modern-js-plugin",
          "type": "static"
        }
      ],
      "node-local-remote": [
        {
          "source": "node-local-remote",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "node-local-remote",
          "target": "node",
          "type": "static"
        }
      ],
      "runtime-tools": [
        {
          "source": "runtime-tools",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "runtime-tools",
          "target": "webpack-bundler-runtime",
          "type": "static"
        }
      ],
      "retry-plugin": [
        {
          "source": "retry-plugin",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "retry-plugin",
          "target": "sdk",
          "type": "static"
        }
      ],
      "runtime-core": [
        {
          "source": "runtime-core",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "runtime-core",
          "target": "error-codes",
          "type": "static"
        }
      ],
      "error-codes": [],
      "react_ts_remote": [
        {
          "source": "react_ts_remote",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "dts-plugin": [
        {
          "source": "dts-plugin",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "dts-plugin",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "dts-plugin",
          "target": "managers",
          "type": "static"
        },
        {
          "source": "dts-plugin",
          "target": "third-party-dts-extractor",
          "type": "static"
        },
        {
          "source": "dts-plugin",
          "target": "error-codes",
          "type": "static"
        }
      ],
      "reactStorybook": [
        {
          "source": "reactStorybook",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "reactStorybook",
          "target": "storybook-addon",
          "type": "static"
        }
      ],
      "typescript": [],
      "3002-checkout": [
        {
          "source": "3002-checkout",
          "target": "nextjs-mf",
          "type": "static"
        },
        {
          "source": "3002-checkout",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "3002-checkout",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "3002-checkout",
          "target": "utils",
          "type": "static"
        }
      ],
      "nextjs-mf": [
        {
          "source": "nextjs-mf",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "nextjs-mf",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "nextjs-mf",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "nextjs-mf",
          "target": "node",
          "type": "static"
        },
        {
          "source": "nextjs-mf",
          "target": "webpack-bundler-runtime",
          "type": "static"
        }
      ],
      "node-host-e2e": [
        {
          "source": "node-host-e2e",
          "target": "node-host",
          "type": "implicit"
        },
        {
          "source": "node-host-e2e",
          "target": "node",
          "type": "static"
        }
      ],
      "reactRemoteUI": [
        {
          "source": "reactRemoteUI",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "reactRemoteUI",
          "target": "storybook-addon",
          "type": "static"
        }
      ],
      "react_ts_host": [
        {
          "source": "react_ts_host",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "react_ts_host",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "react_ts_host",
          "target": "core",
          "type": "static"
        },
        {
          "source": "react_ts_host",
          "target": "runtime",
          "type": "static"
        }
      ],
      "utils": [
        {
          "source": "utils",
          "target": "sdk",
          "type": "static"
        }
      ],
      "enhanced": [
        {
          "source": "enhanced",
          "target": "webpack-bundler-runtime",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "bridge-react-webpack-plugin",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "data-prefetch",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "dts-plugin",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "error-codes",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "inject-external-runtime-core-plugin",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "managers",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "manifest",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "rspack",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "runtime-tools",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "enhanced",
          "target": "cli",
          "type": "static"
        }
      ],
      "managers": [
        {
          "source": "managers",
          "target": "sdk",
          "type": "static"
        }
      ],
      "manifest": [
        {
          "source": "manifest",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "manifest",
          "target": "dts-plugin",
          "type": "static"
        },
        {
          "source": "manifest",
          "target": "managers",
          "type": "static"
        }
      ],
      "modern-js-plugin": [
        {
          "source": "modern-js-plugin",
          "target": "manifest",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "bridge-react",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "node",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "modern-js-plugin",
          "target": "cli",
          "type": "static"
        }
      ],
      "rslib-module": [
        {
          "source": "rslib-module",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "rslib-module",
          "target": "rsbuild-plugin",
          "type": "static"
        },
        {
          "source": "rslib-module",
          "target": "storybook-addon",
          "type": "static"
        }
      ],
      "bundle-size": [
        {
          "source": "bundle-size",
          "target": "core",
          "type": "static"
        },
        {
          "source": "bundle-size",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "bundle-size",
          "target": "typescript",
          "type": "static"
        },
        {
          "source": "bundle-size",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "bundle-size",
          "target": "dts-plugin",
          "type": "static"
        }
      ],
      "esbuild": [
        {
          "source": "esbuild",
          "target": "sdk",
          "type": "static"
        }
      ],
      "node-remote": [
        {
          "source": "node-remote",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "node-remote",
          "target": "node",
          "type": "static"
        }
      ],
      "runtime": [
        {
          "source": "runtime",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "runtime",
          "target": "error-codes",
          "type": "static"
        },
        {
          "source": "runtime",
          "target": "runtime-core",
          "type": "static"
        }
      ],
      "website-new": [
        {
          "source": "website-new",
          "target": "rspress-plugin",
          "type": "static"
        },
        {
          "source": "website-new",
          "target": "error-codes",
          "type": "static"
        }
      ],
      "rspack": [
        {
          "source": "rspack",
          "target": "bridge-react-webpack-plugin",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "dts-plugin",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "managers",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "manifest",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "runtime-tools",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "inject-external-runtime-core-plugin",
          "type": "static"
        },
        {
          "source": "rspack",
          "target": "sdk",
          "type": "static"
        }
      ],
      "3000-home": [
        {
          "source": "3000-home",
          "target": "nextjs-mf",
          "type": "static"
        },
        {
          "source": "3000-home",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "3000-home",
          "target": "utils",
          "type": "static"
        }
      ],
      "3001-shop": [
        {
          "source": "3001-shop",
          "target": "nextjs-mf",
          "type": "static"
        },
        {
          "source": "3001-shop",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "3001-shop",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "3001-shop",
          "target": "utils",
          "type": "static"
        }
      ],
      "node-host": [
        {
          "source": "node-host",
          "target": "node",
          "type": "static"
        },
        {
          "source": "node-host",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "node-host",
          "target": "runtime",
          "type": "static"
        }
      ],
      "core": [],
      "modernjs": [
        {
          "source": "modernjs",
          "target": "typescript",
          "type": "implicit"
        },
        {
          "source": "modernjs",
          "target": "enhanced",
          "type": "static"
        }
      ],
      "node": [
        {
          "source": "node",
          "target": "enhanced",
          "type": "static"
        },
        {
          "source": "node",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "node",
          "target": "runtime",
          "type": "static"
        }
      ],
      "cli": [
        {
          "source": "cli",
          "target": "sdk",
          "type": "static"
        },
        {
          "source": "cli",
          "target": "dts-plugin",
          "type": "static"
        }
      ],
      "docs-ui": [],
      "federation-demo1": [
        {
          "source": "federation-demo1",
          "target": "esbuild",
          "type": "static"
        },
        {
          "source": "federation-demo1",
          "target": "runtime",
          "type": "static"
        },
        {
          "source": "federation-demo1",
          "target": "webpack-bundler-runtime",
          "type": "static"
        }
      ],
      "sdk": [],
      "website": [
        {
          "source": "website",
          "target": "docs",
          "type": "implicit"
        }
      ],
      "docs": [
        {
          "source": "docs",
          "target": "docs-ui",
          "type": "implicit"
        }
      ],
      "@module-federation/webpack-type": []
    }
  }
}